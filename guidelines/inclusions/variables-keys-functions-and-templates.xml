<?xml version="1.0" encoding="UTF-8"?><chapter xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="variables-keys-functions-and-templates"><title>TAN functions, templates, global variables, and keys</title><para>This chapter provides a technical reference to all the functions, templates,
               global variables, and keys in the TAN Function Library. It is written primarily for
               developers who wish to use the TAN function library when programming their own
               applications.</para><para>Dependencies refer exclusively to components of the TAN function library, both the
               core validation procedures and the extra functions. A variable, function, or template
               listed as not being relied upon may nevertheless have dependencies in the files in the
               subdirectories <code>applications</code> and <code>utilities</code>.</para><para>Documentation is relatively good for functions, but not for global variables. For
               a discussino on important global variables, see 
               <xref xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#using-tan-global-variables"/></para><para>The contents of this chapter have been generated automatically. In case of errors or
         inconsistencies, the master files should be consulted.</para><section><title>Indexes</title><section xml:id="tan-function-keyword-index"><title>Functions by group</title><section xml:id="tan-function-group-Arabic"><title>Arabic</title><para>functions related to the Arabic language</para><para>See also: <link linkend="tan-function-group-language">language</link></para><para><itemizedlist><listitem><para><code><link linkend="function-ara-to-int">tan:ara-to-int()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-archives"><title>archives</title><para>functions dealing with compressed files: zip, docx, xlsx</para><para><itemizedlist><listitem><para><code><link linkend="function-archive-available">tan:archive-available()</link></code></para></listitem><listitem><para><code><link linkend="function-docx-file-available">tan:docx-file-available()</link></code></para></listitem><listitem><para><code><link linkend="function-open-archive">tan:open-archive()</link></code></para></listitem><listitem><para><code><link linkend="function-open-docx">tan:open-docx()</link></code></para></listitem><listitem><para><code><link linkend="function-open-raw-archive">tan:open-raw-archive()</link></code></para></listitem><listitem><para><code><link linkend="function-open-xlsx">tan:open-xlsx()</link></code></para></listitem><listitem><para><code><link linkend="function-save-archive">tan:save-archive()</link></code></para></listitem><listitem><para><code><link linkend="function-save-docx">tan:save-docx()</link></code></para></listitem><listitem><para><code><link linkend="function-save-xlsx">tan:save-xlsx()</link></code></para></listitem><listitem><para><code><link linkend="function-xlsx-file-available">tan:xlsx-file-available()</link></code></para></listitem><listitem><para><code><link linkend="function-zip-uris">tan:zip-uris()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-arrays"><title>arrays</title><para>functions dealing with arrays</para><para><itemizedlist><listitem><para><code><link linkend="function-array-permutations">tan:array-permutations()</link></code></para></listitem><listitem><para><code><link linkend="function-array-to-map">tan:array-to-map()</link></code></para></listitem><listitem><para><code><link linkend="function-array-to-xml">tan:array-to-xml()</link></code></para></listitem><listitem><para><code><link linkend="function-map-to-array">tan:map-to-array()</link></code></para></listitem><listitem><para><code><link linkend="function-xml-to-array">tan:xml-to-array()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-attributes"><title>attributes</title><para>functions that create or analyze attributes</para><para><itemizedlist><listitem><para><code><link linkend="function-add-attributes">tan:add-attributes()</link></code></para></listitem><listitem><para><code><link linkend="function-attr">tan:attr()</link></code></para></listitem><listitem><para><code><link linkend="function-attribute-vocabulary">tan:attribute-vocabulary()</link></code></para></listitem><listitem><para><code><link linkend="function-stamp-diff-with-text-data">tan:stamp-diff-with-text-data()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-binary"><title>binary</title><para>functions that process or produce bits (handled as booleans), hexBinary, and base64Binary</para><para>See also: <link linkend="tan-function-group-booleans">booleans</link>, <link linkend="tan-function-group-numerics">numerics</link></para><para><itemizedlist><listitem><para><code><link linkend="function-base64Binary-to-bits">tan:base64Binary-to-bits()</link></code></para></listitem><listitem><para><code><link linkend="function-base64Binary-to-eight-bit-chars">tan:base64Binary-to-eight-bit-chars()</link></code></para></listitem><listitem><para><code><link linkend="function-base64Binary-to-octets">tan:base64Binary-to-octets()</link></code></para></listitem><listitem><para><code><link linkend="function-bits-to-base64Binary">tan:bits-to-base64Binary()</link></code></para></listitem><listitem><para><code><link linkend="function-bits-to-byte">tan:bits-to-byte()</link></code></para></listitem><listitem><para><code><link linkend="function-bits-to-eight-bit-chars">tan:bits-to-eight-bit-chars()</link></code></para></listitem><listitem><para><code><link linkend="function-bits-to-hexBinary">tan:bits-to-hexBinary()</link></code></para></listitem><listitem><para><code><link linkend="function-bits-to-octets">tan:bits-to-octets()</link></code></para></listitem><listitem><para><code><link linkend="function-bits-to-word">tan:bits-to-word()</link></code></para></listitem><listitem><para><code><link linkend="function-bitwise-and">tan:bitwise-and()</link></code></para></listitem><listitem><para><code><link linkend="function-bitwise-not">tan:bitwise-not()</link></code></para></listitem><listitem><para><code><link linkend="function-bitwise-or">tan:bitwise-or()</link></code></para></listitem><listitem><para><code><link linkend="function-bitwise-plus">tan:bitwise-plus()</link></code></para></listitem><listitem><para><code><link linkend="function-bitwise-rotate">tan:bitwise-rotate()</link></code></para></listitem><listitem><para><code><link linkend="function-bitwise-xor">tan:bitwise-xor()</link></code></para></listitem><listitem><para><code><link linkend="function-eight-bit-chars-to-base64Binary">tan:eight-bit-chars-to-base64Binary()</link></code></para></listitem><listitem><para><code><link linkend="function-eight-bit-chars-to-bits">tan:eight-bit-chars-to-bits()</link></code></para></listitem><listitem><para><code><link linkend="function-eight-bit-chars-to-hexBinary">tan:eight-bit-chars-to-hexBinary()</link></code></para></listitem><listitem><para><code><link linkend="function-hexBinary-to-bits">tan:hexBinary-to-bits()</link></code></para></listitem><listitem><para><code><link linkend="function-hexBinary-to-eight-bit-chars">tan:hexBinary-to-eight-bit-chars()</link></code></para></listitem><listitem><para><code><link linkend="function-hexBinary-to-octets">tan:hexBinary-to-octets()</link></code></para></listitem><listitem><para><code><link linkend="function-last-32-bits">tan:last-32-bits()</link></code></para></listitem><listitem><para><code><link linkend="function-octets-to-base64Binary">tan:octets-to-base64Binary()</link></code></para></listitem><listitem><para><code><link linkend="function-octets-to-bits">tan:octets-to-bits()</link></code></para></listitem><listitem><para><code><link linkend="function-octets-to-hexBinary">tan:octets-to-hexBinary()</link></code></para></listitem><listitem><para><code><link linkend="function-pad-bits">tan:pad-bits()</link></code></para></listitem><listitem><para><code><link linkend="function-true">tan:true()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-booleans"><title>booleans</title><para>functions that process or produce booleans</para><para>See also: <link linkend="tan-function-group-binary">binary</link></para><para><itemizedlist><listitem><para><code><link linkend="function-true">tan:true()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-checksums"><title>checksums</title><para>functions that create hashes or checksums</para><para><itemizedlist><listitem><para><code><link linkend="function-checksum-fletcher-16">tan:checksum-fletcher-16()</link></code></para></listitem><listitem><para><code><link linkend="function-checksum-fletcher-32">tan:checksum-fletcher-32()</link></code></para></listitem><listitem><para><code><link linkend="function-checksum-fletcher-64">tan:checksum-fletcher-64()</link></code></para></listitem><listitem><para><code><link linkend="function-md5">tan:md5()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-codepoints"><title>codepoints</title><para>functions that process or create codepoints</para><para>See also: <link linkend="tan-function-group-strings">strings</link></para><para><itemizedlist><listitem><para><code><link linkend="function-codepoints-to-string">rgx:codepoints-to-string()</link></code></para></listitem><listitem><para><code><link linkend="function-string-to-utf-8-octets">tan:string-to-utf-8-octets()</link></code></para></listitem><listitem><para><code><link linkend="function-unicode-to-eight-bit-chars">tan:unicode-to-eight-bit-chars()</link></code></para></listitem><listitem><para><code><link linkend="function-utf-8-octets-to-string">tan:utf-8-octets-to-string()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-colors"><title>colors</title><para>functions that process colors (handled as arrays of integers)</para><para>See also: <link linkend="tan-function-group-html">html</link></para><para><itemizedlist><listitem><para><code><link linkend="function-blend-alpha-value">tan:blend-alpha-value()</link></code></para></listitem><listitem><para><code><link linkend="function-blend-color-channel-value">tan:blend-color-channel-value()</link></code></para></listitem><listitem><para><code><link linkend="function-blend-colors">tan:blend-colors()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-datatypes"><title>datatypes</title><para>functions that inspect data types</para><para><itemizedlist><listitem><para><code><link linkend="function-data-type-check">tan:data-type-check()</link></code></para></listitem><listitem><para><code><link linkend="function-item-type">tan:item-type()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-diff"><title>diff</title><para>functions that compare two or more strings, or handle the output of <code><link linkend="function-diff">tan:diff()</link></code> or
         <code><link linkend="function-collate">tan:collate()</link></code></para><para><itemizedlist><listitem><para><code><link linkend="function-adjust-diff">tan:adjust-diff()</link></code></para></listitem><listitem><para><code><link linkend="function-apply-deltas">tan:apply-deltas()</link></code></para></listitem><listitem><para><code><link linkend="function-collate">tan:collate()</link></code></para></listitem><listitem><para><code><link linkend="function-collate-pair-of-sequences">tan:collate-pair-of-sequences()</link></code></para></listitem><listitem><para><code><link linkend="function-diff">tan:diff()</link></code></para></listitem><listitem><para><code><link linkend="function-diff-or-collate-to-html">tan:diff-or-collate-to-html()</link></code></para></listitem><listitem><para><code><link linkend="function-diff-to-collation">tan:diff-to-collation()</link></code></para></listitem><listitem><para><code><link linkend="function-diff-to-delta">tan:diff-to-delta()</link></code></para></listitem><listitem><para><code><link linkend="function-get-diff-output-transpositions">tan:get-diff-output-transpositions()</link></code></para></listitem><listitem><para><code><link linkend="function-get-diff-stats">tan:get-diff-stats()</link></code></para></listitem><listitem><para><code><link linkend="function-lcs-distance">tan:lcs-distance()</link></code></para></listitem><listitem><para><code><link linkend="function-levenshtein-distance">tan:levenshtein-distance()</link></code></para></listitem><listitem><para><code><link linkend="function-replace-collation">tan:replace-collation()</link></code></para></listitem><listitem><para><code><link linkend="function-replace-diff">tan:replace-diff()</link></code></para></listitem><listitem><para><code><link linkend="function-replace-expanded-class-1-body">tan:replace-expanded-class-1-body()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-docx"><title>docx</title><para>functions that process Word files (docx)</para><para>See also: <link linkend="tan-function-group-archives">archives</link>, <link linkend="tan-function-group-files">files</link></para><para><itemizedlist><listitem><para><code><link linkend="function-docx-to-text">tan:docx-to-text()</link></code></para></listitem><listitem><para><code><link linkend="function-save-docx">tan:save-docx()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-expansion"><title>expansion</title><para>functions that expand TAN files</para><para><itemizedlist><listitem><para><code><link linkend="function-expand-doc">tan:expand-doc()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-filenames"><title>filenames</title><para>functions that process file names, file paths, and file uris/urls</para><para>See also: <link linkend="tan-function-group-files">files</link>, <link linkend="tan-function-group-uris">uris</link></para><para><itemizedlist><listitem><para><code><link linkend="function-absolutize-hrefs">tan:absolutize-hrefs()</link></code></para></listitem><listitem><para><code><link linkend="function-catalog-uris">tan:catalog-uris()</link></code></para></listitem><listitem><para><code><link linkend="function-catalogs">tan:catalogs()</link></code></para></listitem><listitem><para><code><link linkend="function-cfn">tan:cfn()</link></code></para></listitem><listitem><para><code><link linkend="function-cfne">tan:cfne()</link></code></para></listitem><listitem><para><code><link linkend="function-collection">tan:collection()</link></code></para></listitem><listitem><para><code><link linkend="function-glob-to-regex">tan:glob-to-regex()</link></code></para></listitem><listitem><para><code><link linkend="function-parse-a-hrefs">tan:parse-a-hrefs()</link></code></para></listitem><listitem><para><code><link linkend="function-relativize-hrefs">tan:relativize-hrefs()</link></code></para></listitem><listitem><para><code><link linkend="function-resolve-href">tan:resolve-href()</link></code></para></listitem><listitem><para><code><link linkend="function-revise-hrefs">tan:revise-hrefs()</link></code></para></listitem><listitem><para><code><link linkend="function-uri-directory">tan:uri-directory()</link></code></para></listitem><listitem><para><code><link linkend="function-uri-relative-to">tan:uri-relative-to()</link></code></para></listitem><listitem><para><code><link linkend="function-url-is-local">tan:url-is-local()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-files"><title>files</title><para>functions that find, open, and save files</para><para>See also: <link linkend="tan-function-group-filenames">filenames</link></para><para><itemizedlist><listitem><para><code><link linkend="function-archive-available">tan:archive-available()</link></code></para></listitem><listitem><para><code><link linkend="function-doc-available">tan:doc-available()</link></code></para></listitem><listitem><para><code><link linkend="function-docx-file-available">tan:docx-file-available()</link></code></para></listitem><listitem><para><code><link linkend="function-docx-to-text">tan:docx-to-text()</link></code></para></listitem><listitem><para><code><link linkend="function-expand-doc">tan:expand-doc()</link></code></para></listitem><listitem><para><code><link linkend="function-first-loc-available">tan:first-loc-available()</link></code></para></listitem><listitem><para><code><link linkend="function-get-1st-doc">tan:get-1st-doc()</link></code></para></listitem><listitem><para><code><link linkend="function-merge-expanded-docs">tan:merge-expanded-docs()</link></code></para></listitem><listitem><para><code><link linkend="function-open-archive">tan:open-archive()</link></code></para></listitem><listitem><para><code><link linkend="function-open-docx">tan:open-docx()</link></code></para></listitem><listitem><para><code><link linkend="function-open-file">tan:open-file()</link></code></para></listitem><listitem><para><code><link linkend="function-open-raw-archive">tan:open-raw-archive()</link></code></para></listitem><listitem><para><code><link linkend="function-open-xlsx">tan:open-xlsx()</link></code></para></listitem><listitem><para><code><link linkend="function-resolve-doc">tan:resolve-doc()</link></code></para></listitem><listitem><para><code><link linkend="function-save-archive">tan:save-archive()</link></code></para></listitem><listitem><para><code><link linkend="function-save-docx">tan:save-docx()</link></code></para></listitem><listitem><para><code><link linkend="function-save-xlsx">tan:save-xlsx()</link></code></para></listitem><listitem><para><code><link linkend="function-url-is-local">tan:url-is-local()</link></code></para></listitem><listitem><para><code><link linkend="function-xlsx-file-available">tan:xlsx-file-available()</link></code></para></listitem><listitem><para><code><link linkend="function-zip-uris">tan:zip-uris()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-Greek"><title>Greek</title><para>functions related to the Greek language</para><para>See also: <link linkend="tan-function-group-language">language</link></para><para><itemizedlist><listitem><para><code><link linkend="function-grc-to-int">tan:grc-to-int()</link></code></para></listitem><listitem><para><code><link linkend="function-greek-graves-to-acutes">tan:greek-graves-to-acutes()</link></code></para></listitem><listitem><para><code><link linkend="function-int-to-grc">tan:int-to-grc()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-grouping"><title>grouping</title><para>functions that group sequences of various items</para><para>See also: <link linkend="tan-function-group-merging">merging</link></para><para><itemizedlist><listitem><para><code><link linkend="function-collate-pair-of-sequences">tan:collate-pair-of-sequences()</link></code></para></listitem><listitem><para><code><link linkend="function-group-divs">tan:group-divs()</link></code></para></listitem><listitem><para><code><link linkend="function-group-elements-by-shared-node-values">tan:group-elements-by-shared-node-values()</link></code></para></listitem><listitem><para><code><link linkend="function-integer-groups">tan:integer-groups()</link></code></para></listitem><listitem><para><code><link linkend="function-merge-divs">tan:merge-divs()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-html"><title>html</title><para>functions that create or process HTML components</para><para><itemizedlist><listitem><para><code><link linkend="function-blend-alpha-value">tan:blend-alpha-value()</link></code></para></listitem><listitem><para><code><link linkend="function-blend-color-channel-value">tan:blend-color-channel-value()</link></code></para></listitem><listitem><para><code><link linkend="function-blend-colors">tan:blend-colors()</link></code></para></listitem><listitem><para><code><link linkend="function-convert-to-html">tan:convert-to-html()</link></code></para></listitem><listitem><para><code><link linkend="function-diff-or-collate-to-html">tan:diff-or-collate-to-html()</link></code></para></listitem><listitem><para><code><link linkend="function-parse-a-hrefs">tan:parse-a-hrefs()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-identifiers"><title>identifiers</title><para>functions that create or process strings, attributes, or nodes that identify something</para><para><itemizedlist><listitem><para><code><link linkend="function-element-fingerprint">tan:element-fingerprint()</link></code></para></listitem><listitem><para><code><link linkend="function-get-ref">tan:get-ref()</link></code></para></listitem><listitem><para><code><link linkend="function-get-via-q-ref">tan:get-via-q-ref()</link></code></para></listitem><listitem><para><code><link linkend="function-stamp-q-id">tan:stamp-q-id()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-items"><title>items</title><para>functions that process sequences of items of any type</para><para><itemizedlist><listitem><para><code><link linkend="function-distinct-items">tan:distinct-items()</link></code></para></listitem><listitem><para><code><link linkend="function-duplicate-items">tan:duplicate-items()</link></code></para></listitem><listitem><para><code><link linkend="function-item-type">tan:item-type()</link></code></para></listitem><listitem><para><code><link linkend="function-longest-ascending-subsequence">tan:longest-ascending-subsequence()</link></code></para></listitem><listitem><para><code><link linkend="function-most-common-item">tan:most-common-item()</link></code></para></listitem><listitem><para><code><link linkend="function-most-common-item-count">tan:most-common-item-count()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-language"><title>language</title><para>functions that deal with natural languages</para><para>See also: <link linkend="tan-function-group-Arabic">Arabic</link>, <link linkend="tan-function-group-Greek">Greek</link>, <link linkend="tan-function-group-Latin">Latin</link>, <link linkend="tan-function-group-Syriac">Syriac</link>, <link linkend="tan-function-group-lexicomorphology">lexicomorphology</link></para><para><itemizedlist><listitem><para><code><link linkend="function-convert-morphological-codes">tan:convert-morphological-codes()</link></code></para></listitem><listitem><para><code><link linkend="function-greek-graves-to-acutes">tan:greek-graves-to-acutes()</link></code></para></listitem><listitem><para><code><link linkend="function-lang-catalog">tan:lang-catalog()</link></code></para></listitem><listitem><para><code><link linkend="function-lang-code">tan:lang-code()</link></code></para></listitem><listitem><para><code><link linkend="function-lang-name">tan:lang-name()</link></code></para></listitem><listitem><para><code><link linkend="function-lm-data">tan:lm-data()</link></code></para></listitem><listitem><para><code><link linkend="function-morphological-code-conversion-maps">tan:morphological-code-conversion-maps()</link></code></para></listitem><listitem><para><code><link linkend="function-syriac-marks-to-word-end">tan:syriac-marks-to-word-end()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-Latin"><title>Latin</title><para>functions related to the Latin language</para><para>See also: <link linkend="tan-function-group-language">language</link></para><para><itemizedlist><listitem><para><code><link linkend="function-rom-to-int">tan:rom-to-int()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-lexicomorphology"><title>lexicomorphology</title><para>functions that deal with natural languages</para><para>See also: <link linkend="tan-function-group-language">language</link></para><para><itemizedlist><listitem><para><code><link linkend="function-convert-morphological-codes">tan:convert-morphological-codes()</link></code></para></listitem><listitem><para><code><link linkend="function-lm-data">tan:lm-data()</link></code></para></listitem><listitem><para><code><link linkend="function-morphological-code-conversion-maps">tan:morphological-code-conversion-maps()</link></code></para></listitem><listitem><para><code><link linkend="function-search-for-entities">tan:search-for-entities()</link></code></para></listitem><listitem><para><code><link linkend="function-search-morpheus">tan:search-morpheus()</link></code></para></listitem><listitem><para><code><link linkend="function-search-results-to-claims">tan:search-results-to-claims()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-maps"><title>maps</title><para>functions that process or create maps</para><para><itemizedlist><listitem><para><code><link linkend="function-array-to-map">tan:array-to-map()</link></code></para></listitem><listitem><para><code><link linkend="function-map-contains">tan:map-contains()</link></code></para></listitem><listitem><para><code><link linkend="function-map-entries">tan:map-entries()</link></code></para></listitem><listitem><para><code><link linkend="function-map-invert">tan:map-invert()</link></code></para></listitem><listitem><para><code><link linkend="function-map-keys">tan:map-keys()</link></code></para></listitem><listitem><para><code><link linkend="function-map-put">tan:map-put()</link></code></para></listitem><listitem><para><code><link linkend="function-map-remove">tan:map-remove()</link></code></para></listitem><listitem><para><code><link linkend="function-map-to-array">tan:map-to-array()</link></code></para></listitem><listitem><para><code><link linkend="function-map-to-xml">tan:map-to-xml()</link></code></para></listitem><listitem><para><code><link linkend="function-xml-to-map">tan:xml-to-map()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-merging"><title>merging</title><para>functions that merge various items</para><para>See also: <link linkend="tan-function-group-grouping">grouping</link></para><para><itemizedlist><listitem><para><code><link linkend="function-group-divs">tan:group-divs()</link></code></para></listitem><listitem><para><code><link linkend="function-merge-divs">tan:merge-divs()</link></code></para></listitem><listitem><para><code><link linkend="function-merge-expanded-docs">tan:merge-expanded-docs()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-namespaces"><title>namespaces</title><para>functions that process namespaces</para><para><itemizedlist><listitem><para><code><link linkend="function-get-namespace-map">tan:get-namespace-map()</link></code></para></listitem><listitem><para><code><link linkend="function-namespace">tan:namespace()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-nodes"><title>nodes</title><para>functions that process nodes (documents, elements, comments, processing instructions, text)</para><para><itemizedlist><listitem><para><code><link linkend="function-add-attributes">tan:add-attributes()</link></code></para></listitem><listitem><para><code><link linkend="function-array-to-xml">tan:array-to-xml()</link></code></para></listitem><listitem><para><code><link linkend="function-attr">tan:attr()</link></code></para></listitem><listitem><para><code><link linkend="function-batch-replace-advanced">tan:batch-replace-advanced()</link></code></para></listitem><listitem><para><code><link linkend="function-chop-tree">tan:chop-tree()</link></code></para></listitem><listitem><para><code><link linkend="function-collate-sequences">tan:collate-sequences()</link></code></para></listitem><listitem><para><code><link linkend="function-convert-to-html">tan:convert-to-html()</link></code></para></listitem><listitem><para><code><link linkend="function-copy-indentation">tan:copy-indentation()</link></code></para></listitem><listitem><para><code><link linkend="function-copy-of-except">tan:copy-of-except()</link></code></para></listitem><listitem><para><code><link linkend="function-data-type-check">tan:data-type-check()</link></code></para></listitem><listitem><para><code><link linkend="function-distinct-items">tan:distinct-items()</link></code></para></listitem><listitem><para><code><link linkend="function-duplicate-items">tan:duplicate-items()</link></code></para></listitem><listitem><para><code><link linkend="function-element-fingerprint">tan:element-fingerprint()</link></code></para></listitem><listitem><para><code><link linkend="function-element-vocabulary">tan:element-vocabulary()</link></code></para></listitem><listitem><para><code><link linkend="function-get-namespace-map">tan:get-namespace-map()</link></code></para></listitem><listitem><para><code><link linkend="function-get-ref">tan:get-ref()</link></code></para></listitem><listitem><para><code><link linkend="function-group-elements-by-shared-node-values">tan:group-elements-by-shared-node-values()</link></code></para></listitem><listitem><para><code><link linkend="function-infuse-tree">tan:infuse-tree()</link></code></para></listitem><listitem><para><code><link linkend="function-insert-as-first-child">tan:insert-as-first-child()</link></code></para></listitem><listitem><para><code><link linkend="function-insert-as-last-child">tan:insert-as-last-child()</link></code></para></listitem><listitem><para><code><link linkend="function-item-type">tan:item-type()</link></code></para></listitem><listitem><para><code><link linkend="function-last-change-agent">tan:last-change-agent()</link></code></para></listitem><listitem><para><code><link linkend="function-make-non-mixed">tan:make-non-mixed()</link></code></para></listitem><listitem><para><code><link linkend="function-map-to-xml">tan:map-to-xml()</link></code></para></listitem><listitem><para><code><link linkend="function-normalize-tree-space">tan:normalize-tree-space()</link></code></para></listitem><listitem><para><code><link linkend="function-path">tan:path()</link></code></para></listitem><listitem><para><code><link linkend="function-pluck">tan:pluck()</link></code></para></listitem><listitem><para><code><link linkend="function-remove-duplicate-siblings">tan:remove-duplicate-siblings()</link></code></para></listitem><listitem><para><code><link linkend="function-replace-expanded-class-1-body">tan:replace-expanded-class-1-body()</link></code></para></listitem><listitem><para><code><link linkend="function-restore-chopped-tree">tan:restore-chopped-tree()</link></code></para></listitem><listitem><para><code><link linkend="function-sequence-to-tree">tan:sequence-to-tree()</link></code></para></listitem><listitem><para><code><link linkend="function-shallow-copy">tan:shallow-copy()</link></code></para></listitem><listitem><para><code><link linkend="function-sort-change-log">tan:sort-change-log()</link></code></para></listitem><listitem><para><code><link linkend="function-stamp-q-id">tan:stamp-q-id()</link></code></para></listitem><listitem><para><code><link linkend="function-strip-outer-indentation">tan:strip-outer-indentation()</link></code></para></listitem><listitem><para><code><link linkend="function-text-join">tan:text-join()</link></code></para></listitem><listitem><para><code><link linkend="function-tree-to-sequence">tan:tree-to-sequence()</link></code></para></listitem><listitem><para><code><link linkend="function-trim-long-text">tan:trim-long-text()</link></code></para></listitem><listitem><para><code><link linkend="function-trim-long-tree">tan:trim-long-tree()</link></code></para></listitem><listitem><para><code><link linkend="function-update-TAN-change-log">tan:update-TAN-change-log()</link></code></para></listitem><listitem><para><code><link linkend="function-wrap-text-nodes">tan:wrap-text-nodes()</link></code></para></listitem><listitem><para><code><link linkend="function-xml-to-array">tan:xml-to-array()</link></code></para></listitem><listitem><para><code><link linkend="function-xml-to-map">tan:xml-to-map()</link></code></para></listitem><listitem><para><code><link linkend="function-xml-to-string">tan:xml-to-string()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-numerals"><title>numerals</title><para>functions that process or numbers expressed in natural language</para><para>See also: <link linkend="tan-function-group-numerics">numerics</link></para><para><itemizedlist><listitem><para><code><link linkend="function-aaa-to-int">tan:aaa-to-int()</link></code></para></listitem><listitem><para><code><link linkend="function-ara-to-int">tan:ara-to-int()</link></code></para></listitem><listitem><para><code><link linkend="function-cardinal">tan:cardinal()</link></code></para></listitem><listitem><para><code><link linkend="function-expand-numerical-expression">tan:expand-numerical-expression()</link></code></para></listitem><listitem><para><code><link linkend="function-grc-to-int">tan:grc-to-int()</link></code></para></listitem><listitem><para><code><link linkend="function-int-to-aaa">tan:int-to-aaa()</link></code></para></listitem><listitem><para><code><link linkend="function-int-to-grc">tan:int-to-grc()</link></code></para></listitem><listitem><para><code><link linkend="function-integers-to-expression">tan:integers-to-expression()</link></code></para></listitem><listitem><para><code><link linkend="function-letter-to-number">tan:letter-to-number()</link></code></para></listitem><listitem><para><code><link linkend="function-ordinal">tan:ordinal()</link></code></para></listitem><listitem><para><code><link linkend="function-rom-to-int">tan:rom-to-int()</link></code></para></listitem><listitem><para><code><link linkend="function-string-to-numerals">tan:string-to-numerals()</link></code></para></listitem><listitem><para><code><link linkend="function-syr-to-int">tan:syr-to-int()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-numerics"><title>numerics</title><para>functions that process or create numbers (base-2 binary, octets, integers, hexadecimal, decimals, doubles)</para><para>See also: <link linkend="tan-function-group-numerals">numerals</link>, <link linkend="tan-function-group-binary">binary</link></para><para><itemizedlist><listitem><para><code><link linkend="function-aaa-to-int">tan:aaa-to-int()</link></code></para></listitem><listitem><para><code><link linkend="function-ara-to-int">tan:ara-to-int()</link></code></para></listitem><listitem><para><code><link linkend="function-base26-to-dec">tan:base26-to-dec()</link></code></para></listitem><listitem><para><code><link linkend="function-base64-to-base64Binary">tan:base64-to-base64Binary()</link></code></para></listitem><listitem><para><code><link linkend="function-base64-to-bin">tan:base64-to-bin()</link></code></para></listitem><listitem><para><code><link linkend="function-base64-to-dec">tan:base64-to-dec()</link></code></para></listitem><listitem><para><code><link linkend="function-base64-to-hex">tan:base64-to-hex()</link></code></para></listitem><listitem><para><code><link linkend="function-base64Binary-to-base64">tan:base64Binary-to-base64()</link></code></para></listitem><listitem><para><code><link linkend="function-base64Binary-to-bin">tan:base64Binary-to-bin()</link></code></para></listitem><listitem><para><code><link linkend="function-base64Binary-to-bits">tan:base64Binary-to-bits()</link></code></para></listitem><listitem><para><code><link linkend="function-base64Binary-to-eight-bit-chars">tan:base64Binary-to-eight-bit-chars()</link></code></para></listitem><listitem><para><code><link linkend="function-base64Binary-to-hex">tan:base64Binary-to-hex()</link></code></para></listitem><listitem><para><code><link linkend="function-base64Binary-to-octets">tan:base64Binary-to-octets()</link></code></para></listitem><listitem><para><code><link linkend="function-base64binary-to-bin">tan:base64binary-to-bin()</link></code></para></listitem><listitem><para><code><link linkend="function-bin-to-base64">tan:bin-to-base64()</link></code></para></listitem><listitem><para><code><link linkend="function-bin-to-base64Binary">tan:bin-to-base64Binary()</link></code></para></listitem><listitem><para><code><link linkend="function-bin-to-bits">tan:bin-to-bits()</link></code></para></listitem><listitem><para><code><link linkend="function-bin-to-dec">tan:bin-to-dec()</link></code></para></listitem><listitem><para><code><link linkend="function-bin-to-hex">tan:bin-to-hex()</link></code></para></listitem><listitem><para><code><link linkend="function-bin-to-hexBinary">tan:bin-to-hexBinary()</link></code></para></listitem><listitem><para><code><link linkend="function-bits-to-base64Binary">tan:bits-to-base64Binary()</link></code></para></listitem><listitem><para><code><link linkend="function-bits-to-bin">tan:bits-to-bin()</link></code></para></listitem><listitem><para><code><link linkend="function-bits-to-byte">tan:bits-to-byte()</link></code></para></listitem><listitem><para><code><link linkend="function-bits-to-eight-bit-chars">tan:bits-to-eight-bit-chars()</link></code></para></listitem><listitem><para><code><link linkend="function-bits-to-hex">tan:bits-to-hex()</link></code></para></listitem><listitem><para><code><link linkend="function-bits-to-hexBinary">tan:bits-to-hexBinary()</link></code></para></listitem><listitem><para><code><link linkend="function-bits-to-octets">tan:bits-to-octets()</link></code></para></listitem><listitem><para><code><link linkend="function-bits-to-word">tan:bits-to-word()</link></code></para></listitem><listitem><para><code><link linkend="function-bitwise-and">tan:bitwise-and()</link></code></para></listitem><listitem><para><code><link linkend="function-bitwise-not">tan:bitwise-not()</link></code></para></listitem><listitem><para><code><link linkend="function-bitwise-or">tan:bitwise-or()</link></code></para></listitem><listitem><para><code><link linkend="function-bitwise-plus">tan:bitwise-plus()</link></code></para></listitem><listitem><para><code><link linkend="function-bitwise-rotate">tan:bitwise-rotate()</link></code></para></listitem><listitem><para><code><link linkend="function-bitwise-xor">tan:bitwise-xor()</link></code></para></listitem><listitem><para><code><link linkend="function-cardinal">tan:cardinal()</link></code></para></listitem><listitem><para><code><link linkend="function-counts-to-lasts">tan:counts-to-lasts()</link></code></para></listitem><listitem><para><code><link linkend="function-dec-to-base26">tan:dec-to-base26()</link></code></para></listitem><listitem><para><code><link linkend="function-dec-to-base64">tan:dec-to-base64()</link></code></para></listitem><listitem><para><code><link linkend="function-dec-to-bin">tan:dec-to-bin()</link></code></para></listitem><listitem><para><code><link linkend="function-dec-to-hex">tan:dec-to-hex()</link></code></para></listitem><listitem><para><code><link linkend="function-dec-to-n">tan:dec-to-n()</link></code></para></listitem><listitem><para><code><link linkend="function-eight-bit-chars-to-base64Binary">tan:eight-bit-chars-to-base64Binary()</link></code></para></listitem><listitem><para><code><link linkend="function-eight-bit-chars-to-bits">tan:eight-bit-chars-to-bits()</link></code></para></listitem><listitem><para><code><link linkend="function-eight-bit-chars-to-hexBinary">tan:eight-bit-chars-to-hexBinary()</link></code></para></listitem><listitem><para><code><link linkend="function-expand-numerical-expression">tan:expand-numerical-expression()</link></code></para></listitem><listitem><para><code><link linkend="function-grc-to-int">tan:grc-to-int()</link></code></para></listitem><listitem><para><code><link linkend="function-hex-to-base64">tan:hex-to-base64()</link></code></para></listitem><listitem><para><code><link linkend="function-hex-to-base64Binary">tan:hex-to-base64Binary()</link></code></para></listitem><listitem><para><code><link linkend="function-hex-to-bin">tan:hex-to-bin()</link></code></para></listitem><listitem><para><code><link linkend="function-hex-to-bits">tan:hex-to-bits()</link></code></para></listitem><listitem><para><code><link linkend="function-hex-to-dec">tan:hex-to-dec()</link></code></para></listitem><listitem><para><code><link linkend="function-hex-to-hexBinary">tan:hex-to-hexBinary()</link></code></para></listitem><listitem><para><code><link linkend="function-hexBinary-to-bin">tan:hexBinary-to-bin()</link></code></para></listitem><listitem><para><code><link linkend="function-hexBinary-to-bits">tan:hexBinary-to-bits()</link></code></para></listitem><listitem><para><code><link linkend="function-hexBinary-to-eight-bit-chars">tan:hexBinary-to-eight-bit-chars()</link></code></para></listitem><listitem><para><code><link linkend="function-hexBinary-to-hex">tan:hexBinary-to-hex()</link></code></para></listitem><listitem><para><code><link linkend="function-hexBinary-to-octets">tan:hexBinary-to-octets()</link></code></para></listitem><listitem><para><code><link linkend="function-int-to-aaa">tan:int-to-aaa()</link></code></para></listitem><listitem><para><code><link linkend="function-int-to-grc">tan:int-to-grc()</link></code></para></listitem><listitem><para><code><link linkend="function-integer-groups">tan:integer-groups()</link></code></para></listitem><listitem><para><code><link linkend="function-integers-to-expression">tan:integers-to-expression()</link></code></para></listitem><listitem><para><code><link linkend="function-last-32-bits">tan:last-32-bits()</link></code></para></listitem><listitem><para><code><link linkend="function-lengths-to-positions">tan:lengths-to-positions()</link></code></para></listitem><listitem><para><code><link linkend="function-letter-to-number">tan:letter-to-number()</link></code></para></listitem><listitem><para><code><link linkend="function-log2">tan:log2()</link></code></para></listitem><listitem><para><code><link linkend="function-longest-ascending-subsequence">tan:longest-ascending-subsequence()</link></code></para></listitem><listitem><para><code><link linkend="function-n-to-dec">tan:n-to-dec()</link></code></para></listitem><listitem><para><code><link linkend="function-number-sort">tan:number-sort()</link></code></para></listitem><listitem><para><code><link linkend="function-numbers-to-portions">tan:numbers-to-portions()</link></code></para></listitem><listitem><para><code><link linkend="function-octets-to-base64Binary">tan:octets-to-base64Binary()</link></code></para></listitem><listitem><para><code><link linkend="function-octets-to-bits">tan:octets-to-bits()</link></code></para></listitem><listitem><para><code><link linkend="function-octets-to-hexBinary">tan:octets-to-hexBinary()</link></code></para></listitem><listitem><para><code><link linkend="function-ordinal">tan:ordinal()</link></code></para></listitem><listitem><para><code><link linkend="function-pad-bits">tan:pad-bits()</link></code></para></listitem><listitem><para><code><link linkend="function-product">tan:product()</link></code></para></listitem><listitem><para><code><link linkend="function-rom-to-int">tan:rom-to-int()</link></code></para></listitem><listitem><para><code><link linkend="function-string-to-utf-8-octets">tan:string-to-utf-8-octets()</link></code></para></listitem><listitem><para><code><link linkend="function-syr-to-int">tan:syr-to-int()</link></code></para></listitem><listitem><para><code><link linkend="function-unicode-to-eight-bit-chars">tan:unicode-to-eight-bit-chars()</link></code></para></listitem><listitem><para><code><link linkend="function-utf-8-octets-to-string">tan:utf-8-octets-to-string()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-pointers"><title>pointers</title><para>functions that process or create pointers relevant to TAN files</para><para><itemizedlist><listitem><para><code><link linkend="function-get-ref">tan:get-ref()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-regular_expressions"><title>regular expressions</title><para>functions that use or expand regular expressions</para><para><itemizedlist><listitem><para><code><link linkend="function-analyze-string">rgx:analyze-string()</link></code></para></listitem><listitem><para><code><link linkend="function-codepoints-to-string">rgx:codepoints-to-string()</link></code></para></listitem><listitem><para><code><link linkend="function-escape">rgx:escape()</link></code></para></listitem><listitem><para><code><link linkend="function-matches">rgx:matches()</link></code></para></listitem><listitem><para><code><link linkend="function-regex-is-valid">rgx:regex-is-valid()</link></code></para></listitem><listitem><para><code><link linkend="function-replace">rgx:replace()</link></code></para></listitem><listitem><para><code><link linkend="function-string-base">rgx:string-base()</link></code></para></listitem><listitem><para><code><link linkend="function-string-to-components">rgx:string-to-components()</link></code></para></listitem><listitem><para><code><link linkend="function-string-to-composites">rgx:string-to-composites()</link></code></para></listitem><listitem><para><code><link linkend="function-tokenize">rgx:tokenize()</link></code></para></listitem><listitem><para><code><link linkend="function-satisfies-regexes">tan:satisfies-regexes()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-resolution"><title>resolution</title><para>functions that resolve TAN documents or URIs</para><para><itemizedlist><listitem><para><code><link linkend="function-resolve-doc">tan:resolve-doc()</link></code></para></listitem><listitem><para><code><link linkend="function-resolve-href">tan:resolve-href()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-search"><title>search</title><para>functions that query search services or process search results</para><para><itemizedlist><listitem><para><code><link linkend="function-search-for-entities">tan:search-for-entities()</link></code></para></listitem><listitem><para><code><link linkend="function-search-for-persons">tan:search-for-persons()</link></code></para></listitem><listitem><para><code><link linkend="function-search-for-scripta">tan:search-for-scripta()</link></code></para></listitem><listitem><para><code><link linkend="function-search-morpheus">tan:search-morpheus()</link></code></para></listitem><listitem><para><code><link linkend="function-search-results-to-IRI-name-pattern">tan:search-results-to-IRI-name-pattern()</link></code></para></listitem><listitem><para><code><link linkend="function-search-results-to-claims">tan:search-results-to-claims()</link></code></para></listitem><listitem><para><code><link linkend="function-search-wikipedia">tan:search-wikipedia()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-sequences"><title>sequences</title><para>functions that process or create sequences of items</para><para><itemizedlist><listitem><para><code><link linkend="function-chop-string">tan:chop-string()</link></code></para></listitem><listitem><para><code><link linkend="function-collate-pair-of-sequences">tan:collate-pair-of-sequences()</link></code></para></listitem><listitem><para><code><link linkend="function-collate-sequences">tan:collate-sequences()</link></code></para></listitem><listitem><para><code><link linkend="function-counts-to-lasts">tan:counts-to-lasts()</link></code></para></listitem><listitem><para><code><link linkend="function-expand-numerical-expression">tan:expand-numerical-expression()</link></code></para></listitem><listitem><para><code><link linkend="function-integers-to-expression">tan:integers-to-expression()</link></code></para></listitem><listitem><para><code><link linkend="function-lengths-to-positions">tan:lengths-to-positions()</link></code></para></listitem><listitem><para><code><link linkend="function-longest-ascending-subsequence">tan:longest-ascending-subsequence()</link></code></para></listitem><listitem><para><code><link linkend="function-most-common-item">tan:most-common-item()</link></code></para></listitem><listitem><para><code><link linkend="function-most-common-item-count">tan:most-common-item-count()</link></code></para></listitem><listitem><para><code><link linkend="function-segment-string">tan:segment-string()</link></code></para></listitem><listitem><para><code><link linkend="function-tokenize-text">tan:tokenize-text()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-serialization"><title>serialization</title><para>functions that translate data structures or objects into a data format</para><para><itemizedlist><listitem><para><code><link linkend="function-xml-to-string">tan:xml-to-string()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-spacing"><title>spacing</title><para>functions that process or create space (word spaces, tabs, carriage returns, line feeds)</para><para><itemizedlist><listitem><para><code><link linkend="function-copy-indentation">tan:copy-indentation()</link></code></para></listitem><listitem><para><code><link linkend="function-fill">tan:fill()</link></code></para></listitem><listitem><para><code><link linkend="function-normalize-tree-space">tan:normalize-tree-space()</link></code></para></listitem><listitem><para><code><link linkend="function-strip-outer-indentation">tan:strip-outer-indentation()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-statistics"><title>statistics</title><para>functions that process or create statistics</para><para><itemizedlist><listitem><para><code><link linkend="function-get-diff-stats">tan:get-diff-stats()</link></code></para></listitem><listitem><para><code><link linkend="function-median">tan:median()</link></code></para></listitem><listitem><para><code><link linkend="function-no-outliers">tan:no-outliers()</link></code></para></listitem><listitem><para><code><link linkend="function-outliers">tan:outliers()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-strings"><title>strings</title><para>functions that process strings</para><para>See also: <link linkend="tan-function-group-codepoints">codepoints</link></para><para><itemizedlist><listitem><para><code><link linkend="function-analyze-string">rgx:analyze-string()</link></code></para></listitem><listitem><para><code><link linkend="function-codepoints-to-string">rgx:codepoints-to-string()</link></code></para></listitem><listitem><para><code><link linkend="function-escape">rgx:escape()</link></code></para></listitem><listitem><para><code><link linkend="function-matches">rgx:matches()</link></code></para></listitem><listitem><para><code><link linkend="function-replace">rgx:replace()</link></code></para></listitem><listitem><para><code><link linkend="function-string-base">rgx:string-base()</link></code></para></listitem><listitem><para><code><link linkend="function-string-to-components">rgx:string-to-components()</link></code></para></listitem><listitem><para><code><link linkend="function-string-to-composites">rgx:string-to-composites()</link></code></para></listitem><listitem><para><code><link linkend="function-tokenize">rgx:tokenize()</link></code></para></listitem><listitem><para><code><link linkend="function-acronym">tan:acronym()</link></code></para></listitem><listitem><para><code><link linkend="function-adjust-diff">tan:adjust-diff()</link></code></para></listitem><listitem><para><code><link linkend="function-apply-deltas">tan:apply-deltas()</link></code></para></listitem><listitem><para><code><link linkend="function-batch-replace">tan:batch-replace()</link></code></para></listitem><listitem><para><code><link linkend="function-batch-replace-advanced">tan:batch-replace-advanced()</link></code></para></listitem><listitem><para><code><link linkend="function-chop-diff-output">tan:chop-diff-output()</link></code></para></listitem><listitem><para><code><link linkend="function-chop-string">tan:chop-string()</link></code></para></listitem><listitem><para><code><link linkend="function-collate">tan:collate()</link></code></para></listitem><listitem><para><code><link linkend="function-collate-pair-of-sequences">tan:collate-pair-of-sequences()</link></code></para></listitem><listitem><para><code><link linkend="function-commas-and-ands">tan:commas-and-ands()</link></code></para></listitem><listitem><para><code><link linkend="function-common-start-or-end-string">tan:common-start-or-end-string()</link></code></para></listitem><listitem><para><code><link linkend="function-contains-only-once">tan:contains-only-once()</link></code></para></listitem><listitem><para><code><link linkend="function-diff">tan:diff()</link></code></para></listitem><listitem><para><code><link linkend="function-diff-to-collation">tan:diff-to-collation()</link></code></para></listitem><listitem><para><code><link linkend="function-diff-to-delta">tan:diff-to-delta()</link></code></para></listitem><listitem><para><code><link linkend="function-docx-to-text">tan:docx-to-text()</link></code></para></listitem><listitem><para><code><link linkend="function-ellipses">tan:ellipses()</link></code></para></listitem><listitem><para><code><link linkend="function-fill">tan:fill()</link></code></para></listitem><listitem><para><code><link linkend="function-get-collate-stats">tan:get-collate-stats()</link></code></para></listitem><listitem><para><code><link linkend="function-get-diff-output-transpositions">tan:get-diff-output-transpositions()</link></code></para></listitem><listitem><para><code><link linkend="function-glob-to-regex">tan:glob-to-regex()</link></code></para></listitem><listitem><para><code><link linkend="function-initial-upper-case">tan:initial-upper-case()</link></code></para></listitem><listitem><para><code><link linkend="function-lcs-distance">tan:lcs-distance()</link></code></para></listitem><listitem><para><code><link linkend="function-levenshtein-distance">tan:levenshtein-distance()</link></code></para></listitem><listitem><para><code><link linkend="function-namespace">tan:namespace()</link></code></para></listitem><listitem><para><code><link linkend="function-normalize-div-text">tan:normalize-div-text()</link></code></para></listitem><listitem><para><code><link linkend="function-normalize-text">tan:normalize-text()</link></code></para></listitem><listitem><para><code><link linkend="function-normalize-unicode">tan:normalize-unicode()</link></code></para></listitem><listitem><para><code><link linkend="function-parse-a-hrefs">tan:parse-a-hrefs()</link></code></para></listitem><listitem><para><code><link linkend="function-replace-collation">tan:replace-collation()</link></code></para></listitem><listitem><para><code><link linkend="function-replace-diff">tan:replace-diff()</link></code></para></listitem><listitem><para><code><link linkend="function-reverse-string">tan:reverse-string()</link></code></para></listitem><listitem><para><code><link linkend="function-satisfies-regexes">tan:satisfies-regexes()</link></code></para></listitem><listitem><para><code><link linkend="function-segment-string">tan:segment-string()</link></code></para></listitem><listitem><para><code><link linkend="function-stamp-diff-with-text-data">tan:stamp-diff-with-text-data()</link></code></para></listitem><listitem><para><code><link linkend="function-string-length">tan:string-length()</link></code></para></listitem><listitem><para><code><link linkend="function-string-to-numerals">tan:string-to-numerals()</link></code></para></listitem><listitem><para><code><link linkend="function-substring-after">tan:substring-after()</link></code></para></listitem><listitem><para><code><link linkend="function-substring-before">tan:substring-before()</link></code></para></listitem><listitem><para><code><link linkend="function-text-join">tan:text-join()</link></code></para></listitem><listitem><para><code><link linkend="function-title-case">tan:title-case()</link></code></para></listitem><listitem><para><code><link linkend="function-tokenize-div">tan:tokenize-div()</link></code></para></listitem><listitem><para><code><link linkend="function-tokenize-text">tan:tokenize-text()</link></code></para></listitem><listitem><para><code><link linkend="function-unique-char">tan:unique-char()</link></code></para></listitem><listitem><para><code><link linkend="function-xml-to-string">tan:xml-to-string()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-Syriac"><title>Syriac</title><para>functions related to the Syriac language</para><para>See also: <link linkend="tan-function-group-language">language</link></para><para><itemizedlist><listitem><para><code><link linkend="function-syr-to-int">tan:syr-to-int()</link></code></para></listitem><listitem><para><code><link linkend="function-syriac-marks-to-word-end">tan:syriac-marks-to-word-end()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-tree_manipulation"><title>tree manipulation</title><para>functions that manipulate trees (XML structures or fragments)</para><para><itemizedlist><listitem><para><code><link linkend="function-absolutize-hrefs">tan:absolutize-hrefs()</link></code></para></listitem><listitem><para><code><link linkend="function-add-attributes">tan:add-attributes()</link></code></para></listitem><listitem><para><code><link linkend="function-batch-replace-advanced">tan:batch-replace-advanced()</link></code></para></listitem><listitem><para><code><link linkend="function-chop-diff-output">tan:chop-diff-output()</link></code></para></listitem><listitem><para><code><link linkend="function-chop-tree">tan:chop-tree()</link></code></para></listitem><listitem><para><code><link linkend="function-convert-to-html">tan:convert-to-html()</link></code></para></listitem><listitem><para><code><link linkend="function-copy-indentation">tan:copy-indentation()</link></code></para></listitem><listitem><para><code><link linkend="function-copy-of-except">tan:copy-of-except()</link></code></para></listitem><listitem><para><code><link linkend="function-diff-or-collate-to-html">tan:diff-or-collate-to-html()</link></code></para></listitem><listitem><para><code><link linkend="function-docx-to-text">tan:docx-to-text()</link></code></para></listitem><listitem><para><code><link linkend="function-group-divs">tan:group-divs()</link></code></para></listitem><listitem><para><code><link linkend="function-infuse-tree">tan:infuse-tree()</link></code></para></listitem><listitem><para><code><link linkend="function-insert-as-first-child">tan:insert-as-first-child()</link></code></para></listitem><listitem><para><code><link linkend="function-insert-as-last-child">tan:insert-as-last-child()</link></code></para></listitem><listitem><para><code><link linkend="function-make-non-mixed">tan:make-non-mixed()</link></code></para></listitem><listitem><para><code><link linkend="function-merge-divs">tan:merge-divs()</link></code></para></listitem><listitem><para><code><link linkend="function-normalize-tree-space">tan:normalize-tree-space()</link></code></para></listitem><listitem><para><code><link linkend="function-normalize-unicode">tan:normalize-unicode()</link></code></para></listitem><listitem><para><code><link linkend="function-pluck">tan:pluck()</link></code></para></listitem><listitem><para><code><link linkend="function-relativize-hrefs">tan:relativize-hrefs()</link></code></para></listitem><listitem><para><code><link linkend="function-remove-duplicate-siblings">tan:remove-duplicate-siblings()</link></code></para></listitem><listitem><para><code><link linkend="function-restore-chopped-tree">tan:restore-chopped-tree()</link></code></para></listitem><listitem><para><code><link linkend="function-revise-hrefs">tan:revise-hrefs()</link></code></para></listitem><listitem><para><code><link linkend="function-sequence-to-tree">tan:sequence-to-tree()</link></code></para></listitem><listitem><para><code><link linkend="function-shallow-copy">tan:shallow-copy()</link></code></para></listitem><listitem><para><code><link linkend="function-stamp-diff-with-text-data">tan:stamp-diff-with-text-data()</link></code></para></listitem><listitem><para><code><link linkend="function-strip-outer-indentation">tan:strip-outer-indentation()</link></code></para></listitem><listitem><para><code><link linkend="function-tree-to-sequence">tan:tree-to-sequence()</link></code></para></listitem><listitem><para><code><link linkend="function-trim-long-text">tan:trim-long-text()</link></code></para></listitem><listitem><para><code><link linkend="function-trim-long-tree">tan:trim-long-tree()</link></code></para></listitem><listitem><para><code><link linkend="function-wrap-text-nodes">tan:wrap-text-nodes()</link></code></para></listitem><listitem><para><code><link linkend="function-xml-to-array">tan:xml-to-array()</link></code></para></listitem><listitem><para><code><link linkend="function-xml-to-map">tan:xml-to-map()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-uris"><title>uris</title><para>functions that process or create URIs</para><para>See also: <link linkend="tan-function-group-filenames">filenames</link></para><para><itemizedlist><listitem><para><code><link linkend="function-absolutize-hrefs">tan:absolutize-hrefs()</link></code></para></listitem><listitem><para><code><link linkend="function-base-uri">tan:base-uri()</link></code></para></listitem><listitem><para><code><link linkend="function-catalog-uris">tan:catalog-uris()</link></code></para></listitem><listitem><para><code><link linkend="function-catalogs">tan:catalogs()</link></code></para></listitem><listitem><para><code><link linkend="function-cfn">tan:cfn()</link></code></para></listitem><listitem><para><code><link linkend="function-cfne">tan:cfne()</link></code></para></listitem><listitem><para><code><link linkend="function-collection">tan:collection()</link></code></para></listitem><listitem><para><code><link linkend="function-doc-available">tan:doc-available()</link></code></para></listitem><listitem><para><code><link linkend="function-get-uuid">tan:get-uuid()</link></code></para></listitem><listitem><para><code><link linkend="function-is-valid-uri">tan:is-valid-uri()</link></code></para></listitem><listitem><para><code><link linkend="function-parse-urls">tan:parse-urls()</link></code></para></listitem><listitem><para><code><link linkend="function-relativize-hrefs">tan:relativize-hrefs()</link></code></para></listitem><listitem><para><code><link linkend="function-resolve-href">tan:resolve-href()</link></code></para></listitem><listitem><para><code><link linkend="function-revise-hrefs">tan:revise-hrefs()</link></code></para></listitem><listitem><para><code><link linkend="function-uri-collection-from-pattern">tan:uri-collection-from-pattern()</link></code></para></listitem><listitem><para><code><link linkend="function-uri-directory">tan:uri-directory()</link></code></para></listitem><listitem><para><code><link linkend="function-uri-is-relative">tan:uri-is-relative()</link></code></para></listitem><listitem><para><code><link linkend="function-uri-is-resolved">tan:uri-is-resolved()</link></code></para></listitem><listitem><para><code><link linkend="function-uri-relative-to">tan:uri-relative-to()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-versioning"><title>versioning</title><para>functions that process versioning in TAN files</para><para><itemizedlist><listitem><para><code><link linkend="function-get-doc-history">tan:get-doc-history()</link></code></para></listitem><listitem><para><code><link linkend="function-sort-change-log">tan:sort-change-log()</link></code></para></listitem><listitem><para><code><link linkend="function-update-TAN-change-log">tan:update-TAN-change-log()</link></code></para></listitem></itemizedlist></para></section>
      <section xml:id="tan-function-group-vocabulary"><title>vocabulary</title><para>functions that process or create TAN vocabulary</para><para><itemizedlist><listitem><para><code><link linkend="function-attribute-vocabulary">tan:attribute-vocabulary()</link></code></para></listitem><listitem><para><code><link linkend="function-element-vocabulary">tan:element-vocabulary()</link></code></para></listitem><listitem><para><code><link linkend="function-has-vocab">tan:has-vocab()</link></code></para></listitem><listitem><para><code><link linkend="function-search-for-persons">tan:search-for-persons()</link></code></para></listitem><listitem><para><code><link linkend="function-search-for-scripta">tan:search-for-scripta()</link></code></para></listitem><listitem><para><code><link linkend="function-search-results-to-IRI-name-pattern">tan:search-results-to-IRI-name-pattern()</link></code></para></listitem><listitem><para><code><link linkend="function-search-wikipedia">tan:search-wikipedia()</link></code></para></listitem><listitem><para><code><link linkend="function-vocabulary">tan:vocabulary()</link></code></para></listitem></itemizedlist></para></section>
      </section><section><title>All functions, keys, variables, and templates</title><para>The 958 global variables, 11 keys (ʞ = key), 267 functions, and 180 templates (Ŧ = named template; ŧ = template mode) defined in the TAN function library, are the following:</para><para>ŧ #all </para>
      <para><code><link linkend="function-aaa-to-int">tan:aaa-to-int()</link></code> <code><link linkend="function-absolutize-hrefs">tan:absolutize-hrefs()</link></code> <code><link linkend="function-acronym">tan:acronym()</link></code> <code><link linkend="function-add-attributes">tan:add-attributes()</link></code> <code><link linkend="function-adjust-diff">tan:adjust-diff()</link></code> <code><link linkend="template-adjust-diff-infusion">ŧ adjust-diff-infusion</link></code> <code><link linkend="variable-advanced-functions-available">$advanced-functions-available</link></code> <code><link linkend="variable-all-functions">$tan:all-functions</link></code> <code><link linkend="variable-all-head-iris">$tan:all-head-iris</link></code> <code><link linkend="variable-all-selector">$tan:all-selector</link></code> <code><link linkend="variable-all-vocabularies">$tan:all-vocabularies</link></code> <code><link linkend="variable-alphabet-numeral-key">$tan:alphabet-numeral-key</link></code> <code><link linkend="function-analyze-string">rgx:analyze-string()</link></code> <code><link linkend="variable-annotations-1st-da">$tan:annotations-1st-da</link></code> <code><link linkend="variable-annotations-resolved">$tan:annotations-resolved</link></code> <code><link linkend="variable-apos">$tan:apos</link></code> <code><link linkend="variable-applications-collection">$tan:applications-collection</link></code> <code><link linkend="variable-applications-uri-collection">$tan:applications-uri-collection</link></code> <code><link linkend="function-apply-deltas">tan:apply-deltas()</link></code> <code><link linkend="function-ara-to-int">tan:ara-to-int()</link></code> <code><link linkend="variable-arabic-indic-numeral-regex">$tan:arabic-indic-numeral-regex</link></code> <code><link linkend="function-archive-available">tan:archive-available()</link></code> <code><link linkend="function-array-permutations">tan:array-permutations()</link></code> <code><link linkend="function-array-to-map">tan:array-to-map()</link></code> <code><link linkend="function-array-to-xml">tan:array-to-xml()</link></code> <code><link linkend="function-atomize-string">tan:atomize-string()</link></code> <code><link linkend="function-attr">tan:attr()</link></code> <code><link linkend="variable-attr-n-regex">$tan:attr-n-regex</link></code> <code><link linkend="function-attribute-vocabulary">tan:attribute-vocabulary()</link></code> <code><link linkend="variable-attributes-to-preserve">$attributes-to-preserve</link></code> <code><link linkend="key-attrs-by-name">ʞ tan:attrs-by-name</link></code> </para>
      <para><code><link linkend="variable-base-marker-regex">$base-marker-regex</link></code> <code><link linkend="function-base-uri">tan:base-uri()</link></code> <code><link linkend="variable-base26-key">$tan:base26-key</link></code> <code><link linkend="function-base26-to-dec">tan:base26-to-dec()</link></code> <code><link linkend="variable-base64-key">$tan:base64-key</link></code> <code><link linkend="function-base64-to-base64Binary">tan:base64-to-base64Binary()</link></code> <code><link linkend="function-base64-to-bin">tan:base64-to-bin()</link></code> <code><link linkend="function-base64-to-dec">tan:base64-to-dec()</link></code> <code><link linkend="function-base64-to-hex">tan:base64-to-hex()</link></code> <code><link linkend="function-base64Binary-to-base64">tan:base64Binary-to-base64()</link></code> <code><link linkend="function-base64Binary-to-bin">tan:base64Binary-to-bin()</link></code> <code><link linkend="function-base64binary-to-bin">tan:base64binary-to-bin()</link></code> <code><link linkend="function-base64Binary-to-bits">tan:base64Binary-to-bits()</link></code> <code><link linkend="function-base64Binary-to-eight-bit-chars">tan:base64Binary-to-eight-bit-chars()</link></code> <code><link linkend="function-base64Binary-to-hex">tan:base64Binary-to-hex()</link></code> <code><link linkend="function-base64Binary-to-octets">tan:base64Binary-to-octets()</link></code> <code><link linkend="function-batch-replace">tan:batch-replace()</link></code> <code><link linkend="function-batch-replace-advanced">tan:batch-replace-advanced()</link></code> <code><link linkend="function-bin-to-base64">tan:bin-to-base64()</link></code> <code><link linkend="function-bin-to-base64Binary">tan:bin-to-base64Binary()</link></code> <code><link linkend="function-bin-to-bits">tan:bin-to-bits()</link></code> <code><link linkend="function-bin-to-dec">tan:bin-to-dec()</link></code> <code><link linkend="function-bin-to-hex">tan:bin-to-hex()</link></code> <code><link linkend="function-bin-to-hexBinary">tan:bin-to-hexBinary()</link></code> <code><link linkend="variable-binary-error-key">$tan:binary-error-key</link></code> <code><link linkend="function-bits-to-base64Binary">tan:bits-to-base64Binary()</link></code> <code><link linkend="function-bits-to-bin">tan:bits-to-bin()</link></code> <code><link linkend="function-bits-to-byte">tan:bits-to-byte()</link></code> <code><link linkend="function-bits-to-eight-bit-chars">tan:bits-to-eight-bit-chars()</link></code> <code><link linkend="function-bits-to-hex">tan:bits-to-hex()</link></code> <code><link linkend="function-bits-to-hexBinary">tan:bits-to-hexBinary()</link></code> <code><link linkend="function-bits-to-octets">tan:bits-to-octets()</link></code> <code><link linkend="function-bits-to-word">tan:bits-to-word()</link></code> <code><link linkend="function-bitwise-and">tan:bitwise-and()</link></code> <code><link linkend="function-bitwise-not">tan:bitwise-not()</link></code> <code><link linkend="function-bitwise-or">tan:bitwise-or()</link></code> <code><link linkend="function-bitwise-plus">tan:bitwise-plus()</link></code> <code><link linkend="function-bitwise-rotate">tan:bitwise-rotate()</link></code> <code><link linkend="function-bitwise-xor">tan:bitwise-xor()</link></code> <code><link linkend="function-blend-alpha-value">tan:blend-alpha-value()</link></code> <code><link linkend="function-blend-color-channel-value">tan:blend-color-channel-value()</link></code> <code><link linkend="function-blend-colors">tan:blend-colors()</link></code> <code><link linkend="variable-body">$tan:body</link></code> <code><link linkend="variable-break-marker-regex">$tan:break-marker-regex</link></code> </para>
      <para><code><link linkend="function-cardinal">tan:cardinal()</link></code> <code><link linkend="function-catalog-uris">tan:catalog-uris()</link></code> <code><link linkend="function-catalogs">tan:catalogs()</link></code> <code><link linkend="function-cfn">tan:cfn()</link></code> <code><link linkend="function-cfne">tan:cfne()</link></code> <code><link linkend="variable-char-regex">$tan:char-regex</link></code> <code><link linkend="variable-characters-allowed-in-ucd-names-regex">$characters-allowed-in-ucd-names-regex</link></code> <code><link linkend="variable-characters-to-escape-when-converting-string-to-regex">$characters-to-escape-when-converting-string-to-regex</link></code> <code><link linkend="function-checksum-fletcher-16">tan:checksum-fletcher-16()</link></code> <code><link linkend="function-checksum-fletcher-32">tan:checksum-fletcher-32()</link></code> <code><link linkend="function-checksum-fletcher-64">tan:checksum-fletcher-64()</link></code> <code><link linkend="function-chop-diff-output">tan:chop-diff-output()</link></code> <code><link linkend="function-chop-string">tan:chop-string()</link></code> <code><link linkend="function-chop-tree">tan:chop-tree()</link></code> <code><link linkend="variable-close-group-symbols-regex">$close-group-symbols-regex</link></code> <code><link linkend="function-codepoints-to-string">rgx:codepoints-to-string()</link></code> <code><link linkend="function-collate">tan:collate()</link></code> <code><link linkend="function-collate-pair-of-sequences">tan:collate-pair-of-sequences()</link></code> <code><link linkend="function-collate-sequences">tan:collate-sequences()</link></code> <code><link linkend="function-collection">tan:collection()</link></code> <code><link linkend="function-commas-and-ands">tan:commas-and-ands()</link></code> <code><link linkend="function-common-end-string">tan:common-end-string()</link></code> <code><link linkend="function-common-start-or-end-string">tan:common-start-or-end-string()</link></code> <code><link linkend="function-common-start-string">tan:common-start-string()</link></code> <code><link linkend="variable-composite-marker-regex">$composite-marker-regex</link></code> <code><link linkend="function-contains-only-once">tan:contains-only-once()</link></code> <code><link linkend="function-convert-morphological-codes">tan:convert-morphological-codes()</link></code> <code><link linkend="function-convert-to-html">tan:convert-to-html()</link></code> <code><link linkend="function-copy-indentation">tan:copy-indentation()</link></code> <code><link linkend="function-copy-of-except">tan:copy-of-except()</link></code> <code><link linkend="function-counts-to-lasts">tan:counts-to-lasts()</link></code> </para>
      <para><code><link linkend="function-data-type-check">tan:data-type-check()</link></code> <code><link linkend="variable-datatypes-that-require-unit-specification">$tan:datatypes-that-require-unit-specification</link></code> <code><link linkend="function-dec-to-base26">tan:dec-to-base26()</link></code> <code><link linkend="function-dec-to-base64">tan:dec-to-base64()</link></code> <code><link linkend="function-dec-to-bin">tan:dec-to-bin()</link></code> <code><link linkend="function-dec-to-hex">tan:dec-to-hex()</link></code> <code><link linkend="function-dec-to-n">tan:dec-to-n()</link></code> <code><link linkend="variable-default-ucd-decomp-db">$default-ucd-decomp-db</link></code> <code><link linkend="variable-default-ucd-decomp-simple-db">$default-ucd-decomp-simple-db</link></code> <code><link linkend="variable-default-ucd-names-db">$default-ucd-names-db</link></code> <code><link linkend="variable-dhy">$tan:dhy</link></code> <code><link linkend="function-diff">tan:diff()</link></code> <code><link linkend="variable-diff-and-collate-input-batch-replacements">$tan:diff-and-collate-input-batch-replacements</link></code> <code><link linkend="function-diff-cache">tan:diff-cache()</link></code> <code><link linkend="function-diff-or-collate-to-html">tan:diff-or-collate-to-html()</link></code> <code><link linkend="template-diff-or-collate-to-html-output-pass-1">ŧ diff-or-collate-to-html-output-pass-1</link></code> <code><link linkend="function-diff-to-collation">tan:diff-to-collation()</link></code> <code><link linkend="function-diff-to-delta">tan:diff-to-delta()</link></code> <code><link linkend="function-distinct-items">tan:distinct-items()</link></code> <code><link linkend="key-div-via-calculated-ref">ʞ tan:div-via-calculated-ref</link></code> <code><link linkend="key-div-via-ref">ʞ tan:div-via-ref</link></code> <code><link linkend="key-divs-to-reset">ʞ tan:divs-to-reset</link></code> <code><link linkend="function-doc-available">tan:doc-available()</link></code> <code><link linkend="variable-doc-catalog-uris">$tan:doc-catalog-uris</link></code> <code><link linkend="variable-doc-catalogs">$tan:doc-catalogs</link></code> <code><link linkend="variable-doc-class">$tan:doc-class</link></code> <code><link linkend="variable-doc-filename">$tan:doc-filename</link></code> <code><link linkend="variable-doc-history">$tan:doc-history</link></code> <code><link linkend="variable-doc-id">$tan:doc-id</link></code> <code><link linkend="variable-doc-id-namespace">$tan:doc-id-namespace</link></code> <code><link linkend="variable-doc-is-error-test">$tan:doc-is-error-test</link></code> <code><link linkend="variable-doc-namespace">$tan:doc-namespace</link></code> <code><link linkend="variable-doc-parent-directory">$tan:doc-parent-directory</link></code> <code><link linkend="variable-doc-type">$tan:doc-type</link></code> <code><link linkend="variable-doc-uri">$tan:doc-uri</link></code> <code><link linkend="variable-doc-vocabulary">$tan:doc-vocabulary</link></code> <code><link linkend="function-docx-file-available">tan:docx-file-available()</link></code> <code><link linkend="function-docx-to-text">tan:docx-to-text()</link></code> <code><link linkend="variable-duplicate-head-iris">$tan:duplicate-head-iris</link></code> <code><link linkend="function-duplicate-items">tan:duplicate-items()</link></code> <code><link linkend="function-duplicate-values">tan:duplicate-values()</link></code> </para>
      <para><code><link linkend="function-eight-bit-chars-to-base64Binary">tan:eight-bit-chars-to-base64Binary()</link></code> <code><link linkend="function-eight-bit-chars-to-bits">tan:eight-bit-chars-to-bits()</link></code> <code><link linkend="function-eight-bit-chars-to-hexBinary">tan:eight-bit-chars-to-hexBinary()</link></code> <code><link linkend="function-element-fingerprint">tan:element-fingerprint()</link></code> <code><link linkend="function-element-vocabulary">tan:element-vocabulary()</link></code> <code><link linkend="key-elements-by-name">ʞ tan:elements-by-name</link></code> <code><link linkend="variable-elements-supported-by-TAN-vocabulary-files">$tan:elements-supported-by-TAN-vocabulary-files</link></code> <code><link linkend="key-elements-with-attrs-named">ʞ tan:elements-with-attrs-named</link></code> <code><link linkend="function-ellipses">tan:ellipses()</link></code> <code><link linkend="variable-empty-doc">$tan:empty-doc</link></code> <code><link linkend="variable-empty-element">$tan:empty-element</link></code> <code><link linkend="variable-english-articles">$tan:english-articles</link></code> <code><link linkend="variable-english-prepositions">$tan:english-prepositions</link></code> <code><link linkend="variable-erroneously-looped-doc">$tan:erroneously-looped-doc</link></code> <code><link linkend="variable-error-key">$tan:error-key</link></code> <code><link linkend="variable-errors">$tan:errors</link></code> <code><link linkend="variable-errors-to-squelch">$tan:errors-to-squelch</link></code> <code><link linkend="function-escape">rgx:escape()</link></code> <code><link linkend="variable-escapes-in-regex">$escapes-in-regex</link></code> <code><link linkend="variable-excluded-class-characters-regex">$tan:excluded-class-characters-regex</link></code> <code><link linkend="function-expand-doc">tan:expand-doc()</link></code> <code><link linkend="function-expand-numerical-expression">tan:expand-numerical-expression()</link></code> <code><link linkend="variable-extra-vocabulary-files">$tan:extra-vocabulary-files</link></code> </para>
      <para><code><link linkend="function-fill">tan:fill()</link></code> <code><link linkend="function-first-loc-available">tan:first-loc-available()</link></code> <code><link linkend="variable-function-collection">$tan:function-collection</link></code> <code><link linkend="variable-function-collection-base-uri">$tan:function-collection-base-uri</link></code> </para>
      <para><code><link linkend="function-get-1st-doc">tan:get-1st-doc()</link></code> <code><link linkend="key-get-ana">ʞ tan:get-ana</link></code> <code><link linkend="key-get-chars-by-name">ʞ get-chars-by-name</link></code> <code><link linkend="function-get-collate-stats">tan:get-collate-stats()</link></code> <code><link linkend="function-get-diff-output-transpositions">tan:get-diff-output-transpositions()</link></code> <code><link linkend="function-get-diff-stats">tan:get-diff-stats()</link></code> <code><link linkend="function-get-doc-history">tan:get-doc-history()</link></code> <code><link linkend="function-get-namespace-map">tan:get-namespace-map()</link></code> <code><link linkend="function-get-ref">tan:get-ref()</link></code> <code><link linkend="function-get-uuid">tan:get-uuid()</link></code> <code><link linkend="function-get-via-q-ref">tan:get-via-q-ref()</link></code> <code><link linkend="function-glob-to-regex">tan:glob-to-regex()</link></code> <code><link linkend="variable-global-html-attributes">$tan:global-html-attributes</link></code> <code><link linkend="function-grc-to-int">tan:grc-to-int()</link></code> <code><link linkend="variable-grc-tokens-without-accents">$tan:grc-tokens-without-accents</link></code> <code><link linkend="function-greek-graves-to-acutes">tan:greek-graves-to-acutes()</link></code> <code><link linkend="variable-greek-hundreds-regex">$tan:greek-hundreds-regex</link></code> <code><link linkend="variable-greek-letter-numeral-regex">$tan:greek-letter-numeral-regex</link></code> <code><link linkend="variable-greek-tens-regex">$tan:greek-tens-regex</link></code> <code><link linkend="variable-greek-unit-regex">$tan:greek-unit-regex</link></code> <code><link linkend="function-group-divs">tan:group-divs()</link></code> <code><link linkend="function-group-elements-by-shared-node-values">tan:group-elements-by-shared-node-values()</link></code> </para>
      <para><code><link linkend="function-has-vocab">tan:has-vocab()</link></code> <code><link linkend="variable-hash-error-key">$tan:hash-error-key</link></code> <code><link linkend="variable-head">$tan:head</link></code> <code><link linkend="variable-help-trigger-regex">$tan:help-trigger-regex</link></code> <code><link linkend="variable-hex-key">$tan:hex-key</link></code> <code><link linkend="function-hex-to-base64">tan:hex-to-base64()</link></code> <code><link linkend="function-hex-to-base64Binary">tan:hex-to-base64Binary()</link></code> <code><link linkend="function-hex-to-bin">tan:hex-to-bin()</link></code> <code><link linkend="function-hex-to-bits">tan:hex-to-bits()</link></code> <code><link linkend="function-hex-to-dec">tan:hex-to-dec()</link></code> <code><link linkend="function-hex-to-hexBinary">tan:hex-to-hexBinary()</link></code> <code><link linkend="function-hexBinary-to-bin">tan:hexBinary-to-bin()</link></code> <code><link linkend="function-hexBinary-to-bits">tan:hexBinary-to-bits()</link></code> <code><link linkend="function-hexBinary-to-eight-bit-chars">tan:hexBinary-to-eight-bit-chars()</link></code> <code><link linkend="function-hexBinary-to-hex">tan:hexBinary-to-hex()</link></code> <code><link linkend="function-hexBinary-to-octets">tan:hexBinary-to-octets()</link></code> </para>
      <para><code><link linkend="variable-id-idrefs">$tan:id-idrefs</link></code> <code><link linkend="variable-inclusions-resolved">$tan:inclusions-resolved</link></code> <code><link linkend="template-infuse-primary-file-with-diff-results">ŧ infuse-primary-file-with-diff-results</link></code> <code><link linkend="function-infuse-tree">tan:infuse-tree()</link></code> <code><link linkend="function-initial-upper-case">tan:initial-upper-case()</link></code> <code><link linkend="function-insert-as-first-child">tan:insert-as-first-child()</link></code> <code><link linkend="function-insert-as-last-child">tan:insert-as-last-child()</link></code> <code><link linkend="function-int-to-aaa">tan:int-to-aaa()</link></code> <code><link linkend="function-int-to-grc">tan:int-to-grc()</link></code> <code><link linkend="function-integer-groups">tan:integer-groups()</link></code> <code><link linkend="function-integers-to-expression">tan:integers-to-expression()</link></code> <code><link linkend="variable-internet-available">$tan:internet-available</link></code> <code><link linkend="function-is-valid-uri">tan:is-valid-uri()</link></code> <code><link linkend="variable-iso-639-3">$tan:iso-639-3</link></code> <code><link linkend="function-item-type">tan:item-type()</link></code> <code><link linkend="key-item-via-node-name">ʞ tan:item-via-node-name</link></code> </para>
      <para><code><link linkend="function-lang-catalog">tan:lang-catalog()</link></code> <code><link linkend="function-lang-code">tan:lang-code()</link></code> <code><link linkend="function-lang-name">tan:lang-name()</link></code> <code><link linkend="variable-languages-supported">$languages-supported</link></code> <code><link linkend="function-last-32-bits">tan:last-32-bits()</link></code> <code><link linkend="function-last-change-agent">tan:last-change-agent()</link></code> <code><link linkend="variable-latin-letter-numeral-regex">$tan:latin-letter-numeral-regex</link></code> <code><link linkend="function-lcs-distance">tan:lcs-distance()</link></code> <code><link linkend="function-lengths-to-positions">tan:lengths-to-positions()</link></code> <code><link linkend="function-letter-to-number">tan:letter-to-number()</link></code> <code><link linkend="function-levenshtein-distance">tan:levenshtein-distance()</link></code> <code><link linkend="function-lm-data">tan:lm-data()</link></code> <code><link linkend="variable-local-catalog">$tan:local-catalog</link></code> <code><link linkend="variable-local-TAN-collection">$tan:local-TAN-collection</link></code> <code><link linkend="variable-local-TAN-voc-collection">$tan:local-TAN-voc-collection</link></code> <code><link linkend="function-log2">tan:log2()</link></code> <code><link linkend="function-longest-ascending-subsequence">tan:longest-ascending-subsequence()</link></code> </para>
      <para><code><link linkend="function-make-non-mixed">tan:make-non-mixed()</link></code> <code><link linkend="function-map-contains">tan:map-contains()</link></code> <code><link linkend="function-map-entries">tan:map-entries()</link></code> <code><link linkend="function-map-invert">tan:map-invert()</link></code> <code><link linkend="function-map-keys">tan:map-keys()</link></code> <code><link linkend="function-map-put">tan:map-put()</link></code> <code><link linkend="function-map-remove">tan:map-remove()</link></code> <code><link linkend="function-map-to-array">tan:map-to-array()</link></code> <code><link linkend="function-map-to-xml">tan:map-to-xml()</link></code> <code><link linkend="function-matches">rgx:matches()</link></code> <code><link linkend="function-md5">tan:md5()</link></code> <code><link linkend="variable-md5-a0">$tan:md5-a0</link></code> <code><link linkend="variable-md5-b0">$tan:md5-b0</link></code> <code><link linkend="variable-md5-c0">$tan:md5-c0</link></code> <code><link linkend="variable-md5-d0">$tan:md5-d0</link></code> <code><link linkend="variable-md5-K">$tan:md5-K</link></code> <code><link linkend="variable-md5-shifts">$tan:md5-shifts</link></code> <code><link linkend="function-median">tan:median()</link></code> <code><link linkend="function-merge-divs">tan:merge-divs()</link></code> <code><link linkend="function-merge-expanded-docs">tan:merge-expanded-docs()</link></code> <code><link linkend="variable-model-1st-da">$tan:model-1st-da</link></code> <code><link linkend="variable-model-resolved">$tan:model-resolved</link></code> <code><link linkend="variable-morpheus-map">$morpheus-map</link></code> <code><link linkend="function-morphological-code-conversion-maps">tan:morphological-code-conversion-maps()</link></code> <code><link linkend="variable-morphologies-expanded">$tan:morphologies-expanded</link></code> <code><link linkend="variable-morphologies-resolved">$tan:morphologies-resolved</link></code> <code><link linkend="variable-most-common-indentations">$tan:most-common-indentations</link></code> <code><link linkend="function-most-common-item">tan:most-common-item()</link></code> <code><link linkend="function-most-common-item-count">tan:most-common-item-count()</link></code> </para>
      <para><code><link linkend="function-n-to-dec">tan:n-to-dec()</link></code> <code><link linkend="variable-n-type">$tan:n-type</link></code> <code><link linkend="variable-n-type-label">$tan:n-type-label</link></code> <code><link linkend="variable-n-type-regex">$tan:n-type-regex</link></code> <code><link linkend="variable-name-marker-regex">$name-marker-regex</link></code> <code><link linkend="variable-names-of-attributes-that-are-case-indifferent">$tan:names-of-attributes-that-are-case-indifferent</link></code> <code><link linkend="variable-names-of-attributes-that-may-take-multiple-space-delimited-values">$tan:names-of-attributes-that-may-take-multiple-space-delimited-values</link></code> <code><link linkend="variable-names-of-attributes-that-permit-keyword-last">$tan:names-of-attributes-that-permit-keyword-last</link></code> <code><link linkend="variable-names-of-attributes-that-take-idrefs">$tan:names-of-attributes-that-take-idrefs</link></code> <code><link linkend="variable-names-of-elements-targeted-by-objects">$tan:names-of-elements-targeted-by-objects</link></code> <code><link linkend="variable-names-of-elements-targeted-by-subjects">$tan:names-of-elements-targeted-by-subjects</link></code> <code><link linkend="variable-names-of-elements-that-describe-text-bearers">$tan:names-of-elements-that-describe-text-bearers</link></code> <code><link linkend="variable-names-of-elements-that-describe-text-creators">$tan:names-of-elements-that-describe-text-creators</link></code> <code><link linkend="variable-names-of-elements-that-describe-textual-entities">$tan:names-of-elements-that-describe-textual-entities</link></code> <code><link linkend="variable-names-of-elements-that-make-adjustments">$tan:names-of-elements-that-make-adjustments</link></code> <code><link linkend="variable-names-of-elements-that-must-always-refer-to-tan-files">$tan:names-of-elements-that-must-always-refer-to-tan-files</link></code> <code><link linkend="variable-names-of-elements-that-take-idrefs">$tan:names-of-elements-that-take-idrefs</link></code> <code><link linkend="variable-names-of-elements-that-take-which">$tan:names-of-elements-that-take-which</link></code> <code><link linkend="function-namespace">tan:namespace()</link></code> <code><link linkend="variable-namespaces-and-prefixes">$tan:namespaces-and-prefixes</link></code> <code><link linkend="variable-nested-phrase-close-marker-regex">$tan:nested-phrase-close-marker-regex</link></code> <code><link linkend="variable-nested-phrase-marker-regex">$tan:nested-phrase-marker-regex</link></code> <code><link linkend="variable-nested-phrase-markers">$tan:nested-phrase-markers</link></code> <code><link linkend="function-no-outliers">tan:no-outliers()</link></code> <code><link linkend="variable-nonlatin-letter-numeral-regex">$tan:nonlatin-letter-numeral-regex</link></code> <code><link linkend="function-normalize-div-text">tan:normalize-div-text()</link></code> <code><link linkend="function-normalize-name">tan:normalize-name()</link></code> <code><link linkend="function-normalize-text">tan:normalize-text()</link></code> <code><link linkend="function-normalize-tree-space">tan:normalize-tree-space()</link></code> <code><link linkend="function-normalize-unicode">tan:normalize-unicode()</link></code> <code><link linkend="variable-now">$tan:now</link></code> <code><link linkend="function-number-sort">tan:number-sort()</link></code> <code><link linkend="function-numbers-to-portions">tan:numbers-to-portions()</link></code> <code><link linkend="variable-numeric-conversion-error-key">$tan:numeric-conversion-error-key</link></code> </para>
      <para><code><link linkend="variable-octet-error-key">$tan:octet-error-key</link></code> <code><link linkend="function-octets-to-base64Binary">tan:octets-to-base64Binary()</link></code> <code><link linkend="function-octets-to-bits">tan:octets-to-bits()</link></code> <code><link linkend="function-octets-to-hexBinary">tan:octets-to-hexBinary()</link></code> <code><link linkend="variable-official-urn-namespaces">$tan:official-urn-namespaces</link></code> <code><link linkend="function-open-archive">tan:open-archive()</link></code> <code><link linkend="function-open-docx">tan:open-docx()</link></code> <code><link linkend="function-open-file">tan:open-file()</link></code> <code><link linkend="variable-open-group-symbols-regex">$open-group-symbols-regex</link></code> <code><link linkend="function-open-raw-archive">tan:open-raw-archive()</link></code> <code><link linkend="function-open-xlsx">tan:open-xlsx()</link></code> <code><link linkend="function-ordinal">tan:ordinal()</link></code> <code><link linkend="variable-orig-self">$tan:orig-self</link></code> <code><link linkend="variable-orig-self-validated">$tan:orig-self-validated</link></code> <code><link linkend="function-outliers">tan:outliers()</link></code> </para>
      <para><code><link linkend="function-pad-bits">tan:pad-bits()</link></code> <code><link linkend="function-parse-a-hrefs">tan:parse-a-hrefs()</link></code> <code><link linkend="function-parse-urls">tan:parse-urls()</link></code> <code><link linkend="function-path">tan:path()</link></code> <code><link linkend="function-pluck">tan:pluck()</link></code> <code><link linkend="variable-pow2-32">$tan:pow2-32</link></code> <code><link linkend="variable-pow2-64">$tan:pow2-64</link></code> <code><link linkend="variable-predecessors-1st-da">$tan:predecessors-1st-da</link></code> <code><link linkend="variable-predecessors-resolved">$tan:predecessors-resolved</link></code> <code><link linkend="variable-previous-TAN-versions">$tan:previous-TAN-versions</link></code> <code><link linkend="variable-primary-agents">$tan:primary-agents</link></code> <code><link linkend="function-product">tan:product()</link></code> </para>
      <para><code><link linkend="key-q-ref">ʞ tan:q-ref</link></code> <code><link linkend="variable-quot">$tan:quot</link></code> </para>
      <para><code><link linkend="variable-redivisions-1st-da">$tan:redivisions-1st-da</link></code> <code><link linkend="variable-redivisions-resolved">$tan:redivisions-resolved</link></code> <code><link linkend="variable-regex-characters-not-permitted">$tan:regex-characters-not-permitted</link></code> <code><link linkend="template-regex-group-count">Ŧ tan:regex-group-count</link></code> <code><link linkend="function-regex-is-valid">rgx:regex-is-valid()</link></code> <code><link linkend="variable-regex-name-space-characters">$tan:regex-name-space-characters</link></code> <code><link linkend="function-relativize-hrefs">tan:relativize-hrefs()</link></code> <code><link linkend="function-remove-duplicate-siblings">tan:remove-duplicate-siblings()</link></code> <code><link linkend="function-replace">rgx:replace()</link></code> <code><link linkend="function-replace-by-char-name">rgx:replace-by-char-name()</link></code> <code><link linkend="function-replace-collation">tan:replace-collation()</link></code> <code><link linkend="function-replace-diff">tan:replace-diff()</link></code> <code><link linkend="function-replace-expanded-class-1-body">tan:replace-expanded-class-1-body()</link></code> <code><link linkend="function-resolve-doc">tan:resolve-doc()</link></code> <code><link linkend="function-resolve-href">tan:resolve-href()</link></code> <code><link linkend="function-restore-chopped-tree">tan:restore-chopped-tree()</link></code> <code><link linkend="function-reverse-string">tan:reverse-string()</link></code> <code><link linkend="function-revise-hrefs">tan:revise-hrefs()</link></code> <code><link linkend="variable-rgb-alice-blue">$tan:rgb-alice-blue</link></code> <code><link linkend="variable-rgb-AliceBlue">$tan:rgb-AliceBlue</link></code> <code><link linkend="variable-rgb-antique-white">$tan:rgb-antique-white</link></code> <code><link linkend="variable-rgb-AntiqueWhite">$tan:rgb-AntiqueWhite</link></code> <code><link linkend="variable-rgb-AntiqueWhite1">$tan:rgb-AntiqueWhite1</link></code> <code><link linkend="variable-rgb-AntiqueWhite2">$tan:rgb-AntiqueWhite2</link></code> <code><link linkend="variable-rgb-AntiqueWhite3">$tan:rgb-AntiqueWhite3</link></code> <code><link linkend="variable-rgb-AntiqueWhite4">$tan:rgb-AntiqueWhite4</link></code> <code><link linkend="variable-rgb-aquamarine">$tan:rgb-aquamarine</link></code> <code><link linkend="variable-rgb-aquamarine1">$tan:rgb-aquamarine1</link></code> <code><link linkend="variable-rgb-aquamarine2">$tan:rgb-aquamarine2</link></code> <code><link linkend="variable-rgb-aquamarine3">$tan:rgb-aquamarine3</link></code> <code><link linkend="variable-rgb-aquamarine4">$tan:rgb-aquamarine4</link></code> <code><link linkend="variable-rgb-azure">$tan:rgb-azure</link></code> <code><link linkend="variable-rgb-azure1">$tan:rgb-azure1</link></code> <code><link linkend="variable-rgb-azure2">$tan:rgb-azure2</link></code> <code><link linkend="variable-rgb-azure3">$tan:rgb-azure3</link></code> <code><link linkend="variable-rgb-azure4">$tan:rgb-azure4</link></code> <code><link linkend="variable-rgb-beige">$tan:rgb-beige</link></code> <code><link linkend="variable-rgb-bisque">$tan:rgb-bisque</link></code> <code><link linkend="variable-rgb-bisque1">$tan:rgb-bisque1</link></code> <code><link linkend="variable-rgb-bisque2">$tan:rgb-bisque2</link></code> <code><link linkend="variable-rgb-bisque3">$tan:rgb-bisque3</link></code> <code><link linkend="variable-rgb-bisque4">$tan:rgb-bisque4</link></code> <code><link linkend="variable-rgb-black">$tan:rgb-black</link></code> <code><link linkend="variable-rgb-blanched-almond">$tan:rgb-blanched-almond</link></code> <code><link linkend="variable-rgb-BlanchedAlmond">$tan:rgb-BlanchedAlmond</link></code> <code><link linkend="variable-rgb-blue">$tan:rgb-blue</link></code> <code><link linkend="variable-rgb-blue-violet">$tan:rgb-blue-violet</link></code> <code><link linkend="variable-rgb-blue1">$tan:rgb-blue1</link></code> <code><link linkend="variable-rgb-blue2">$tan:rgb-blue2</link></code> <code><link linkend="variable-rgb-blue3">$tan:rgb-blue3</link></code> <code><link linkend="variable-rgb-blue4">$tan:rgb-blue4</link></code> <code><link linkend="variable-rgb-BlueViolet">$tan:rgb-BlueViolet</link></code> <code><link linkend="variable-rgb-brown">$tan:rgb-brown</link></code> <code><link linkend="variable-rgb-brown1">$tan:rgb-brown1</link></code> <code><link linkend="variable-rgb-brown2">$tan:rgb-brown2</link></code> <code><link linkend="variable-rgb-brown3">$tan:rgb-brown3</link></code> <code><link linkend="variable-rgb-brown4">$tan:rgb-brown4</link></code> <code><link linkend="variable-rgb-burlywood">$tan:rgb-burlywood</link></code> <code><link linkend="variable-rgb-burlywood1">$tan:rgb-burlywood1</link></code> <code><link linkend="variable-rgb-burlywood2">$tan:rgb-burlywood2</link></code> <code><link linkend="variable-rgb-burlywood3">$tan:rgb-burlywood3</link></code> <code><link linkend="variable-rgb-burlywood4">$tan:rgb-burlywood4</link></code> <code><link linkend="variable-rgb-cadet-blue">$tan:rgb-cadet-blue</link></code> <code><link linkend="variable-rgb-CadetBlue">$tan:rgb-CadetBlue</link></code> <code><link linkend="variable-rgb-CadetBlue1">$tan:rgb-CadetBlue1</link></code> <code><link linkend="variable-rgb-CadetBlue2">$tan:rgb-CadetBlue2</link></code> <code><link linkend="variable-rgb-CadetBlue3">$tan:rgb-CadetBlue3</link></code> <code><link linkend="variable-rgb-CadetBlue4">$tan:rgb-CadetBlue4</link></code> <code><link linkend="variable-rgb-chartreuse">$tan:rgb-chartreuse</link></code> <code><link linkend="variable-rgb-chartreuse1">$tan:rgb-chartreuse1</link></code> <code><link linkend="variable-rgb-chartreuse2">$tan:rgb-chartreuse2</link></code> <code><link linkend="variable-rgb-chartreuse3">$tan:rgb-chartreuse3</link></code> <code><link linkend="variable-rgb-chartreuse4">$tan:rgb-chartreuse4</link></code> <code><link linkend="variable-rgb-chocolate">$tan:rgb-chocolate</link></code> <code><link linkend="variable-rgb-chocolate1">$tan:rgb-chocolate1</link></code> <code><link linkend="variable-rgb-chocolate2">$tan:rgb-chocolate2</link></code> <code><link linkend="variable-rgb-chocolate3">$tan:rgb-chocolate3</link></code> <code><link linkend="variable-rgb-chocolate4">$tan:rgb-chocolate4</link></code> <code><link linkend="variable-rgb-coral">$tan:rgb-coral</link></code> <code><link linkend="variable-rgb-coral1">$tan:rgb-coral1</link></code> <code><link linkend="variable-rgb-coral2">$tan:rgb-coral2</link></code> <code><link linkend="variable-rgb-coral3">$tan:rgb-coral3</link></code> <code><link linkend="variable-rgb-coral4">$tan:rgb-coral4</link></code> <code><link linkend="variable-rgb-cornflower-blue">$tan:rgb-cornflower-blue</link></code> <code><link linkend="variable-rgb-CornflowerBlue">$tan:rgb-CornflowerBlue</link></code> <code><link linkend="variable-rgb-cornsilk">$tan:rgb-cornsilk</link></code> <code><link linkend="variable-rgb-cornsilk1">$tan:rgb-cornsilk1</link></code> <code><link linkend="variable-rgb-cornsilk2">$tan:rgb-cornsilk2</link></code> <code><link linkend="variable-rgb-cornsilk3">$tan:rgb-cornsilk3</link></code> <code><link linkend="variable-rgb-cornsilk4">$tan:rgb-cornsilk4</link></code> <code><link linkend="variable-rgb-cyan">$tan:rgb-cyan</link></code> <code><link linkend="variable-rgb-cyan1">$tan:rgb-cyan1</link></code> <code><link linkend="variable-rgb-cyan2">$tan:rgb-cyan2</link></code> <code><link linkend="variable-rgb-cyan3">$tan:rgb-cyan3</link></code> <code><link linkend="variable-rgb-cyan4">$tan:rgb-cyan4</link></code> <code><link linkend="variable-rgb-dark-blue">$tan:rgb-dark-blue</link></code> <code><link linkend="variable-rgb-dark-cyan">$tan:rgb-dark-cyan</link></code> <code><link linkend="variable-rgb-dark-goldenrod">$tan:rgb-dark-goldenrod</link></code> <code><link linkend="variable-rgb-dark-gray">$tan:rgb-dark-gray</link></code> <code><link linkend="variable-rgb-dark-green">$tan:rgb-dark-green</link></code> <code><link linkend="variable-rgb-dark-grey">$tan:rgb-dark-grey</link></code> <code><link linkend="variable-rgb-dark-khaki">$tan:rgb-dark-khaki</link></code> <code><link linkend="variable-rgb-dark-magenta">$tan:rgb-dark-magenta</link></code> <code><link linkend="variable-rgb-dark-olive-green">$tan:rgb-dark-olive-green</link></code> <code><link linkend="variable-rgb-dark-orange">$tan:rgb-dark-orange</link></code> <code><link linkend="variable-rgb-dark-orchid">$tan:rgb-dark-orchid</link></code> <code><link linkend="variable-rgb-dark-red">$tan:rgb-dark-red</link></code> <code><link linkend="variable-rgb-dark-salmon">$tan:rgb-dark-salmon</link></code> <code><link linkend="variable-rgb-dark-sea-green">$tan:rgb-dark-sea-green</link></code> <code><link linkend="variable-rgb-dark-slate-blue">$tan:rgb-dark-slate-blue</link></code> <code><link linkend="variable-rgb-dark-slate-gray">$tan:rgb-dark-slate-gray</link></code> <code><link linkend="variable-rgb-dark-slate-grey">$tan:rgb-dark-slate-grey</link></code> <code><link linkend="variable-rgb-dark-turquoise">$tan:rgb-dark-turquoise</link></code> <code><link linkend="variable-rgb-dark-violet">$tan:rgb-dark-violet</link></code> <code><link linkend="variable-rgb-DarkBlue">$tan:rgb-DarkBlue</link></code> <code><link linkend="variable-rgb-DarkCyan">$tan:rgb-DarkCyan</link></code> <code><link linkend="variable-rgb-DarkGoldenrod">$tan:rgb-DarkGoldenrod</link></code> <code><link linkend="variable-rgb-DarkGoldenrod1">$tan:rgb-DarkGoldenrod1</link></code> <code><link linkend="variable-rgb-DarkGoldenrod2">$tan:rgb-DarkGoldenrod2</link></code> <code><link linkend="variable-rgb-DarkGoldenrod3">$tan:rgb-DarkGoldenrod3</link></code> <code><link linkend="variable-rgb-DarkGoldenrod4">$tan:rgb-DarkGoldenrod4</link></code> <code><link linkend="variable-rgb-DarkGray">$tan:rgb-DarkGray</link></code> <code><link linkend="variable-rgb-DarkGreen">$tan:rgb-DarkGreen</link></code> <code><link linkend="variable-rgb-DarkGrey">$tan:rgb-DarkGrey</link></code> <code><link linkend="variable-rgb-DarkKhaki">$tan:rgb-DarkKhaki</link></code> <code><link linkend="variable-rgb-DarkMagenta">$tan:rgb-DarkMagenta</link></code> <code><link linkend="variable-rgb-DarkOliveGreen">$tan:rgb-DarkOliveGreen</link></code> <code><link linkend="variable-rgb-DarkOliveGreen1">$tan:rgb-DarkOliveGreen1</link></code> <code><link linkend="variable-rgb-DarkOliveGreen2">$tan:rgb-DarkOliveGreen2</link></code> <code><link linkend="variable-rgb-DarkOliveGreen3">$tan:rgb-DarkOliveGreen3</link></code> <code><link linkend="variable-rgb-DarkOliveGreen4">$tan:rgb-DarkOliveGreen4</link></code> <code><link linkend="variable-rgb-DarkOrange">$tan:rgb-DarkOrange</link></code> <code><link linkend="variable-rgb-DarkOrange1">$tan:rgb-DarkOrange1</link></code> <code><link linkend="variable-rgb-DarkOrange2">$tan:rgb-DarkOrange2</link></code> <code><link linkend="variable-rgb-DarkOrange3">$tan:rgb-DarkOrange3</link></code> <code><link linkend="variable-rgb-DarkOrange4">$tan:rgb-DarkOrange4</link></code> <code><link linkend="variable-rgb-DarkOrchid">$tan:rgb-DarkOrchid</link></code> <code><link linkend="variable-rgb-DarkOrchid1">$tan:rgb-DarkOrchid1</link></code> <code><link linkend="variable-rgb-DarkOrchid2">$tan:rgb-DarkOrchid2</link></code> <code><link linkend="variable-rgb-DarkOrchid3">$tan:rgb-DarkOrchid3</link></code> <code><link linkend="variable-rgb-DarkOrchid4">$tan:rgb-DarkOrchid4</link></code> <code><link linkend="variable-rgb-DarkRed">$tan:rgb-DarkRed</link></code> <code><link linkend="variable-rgb-DarkSalmon">$tan:rgb-DarkSalmon</link></code> <code><link linkend="variable-rgb-DarkSeaGreen">$tan:rgb-DarkSeaGreen</link></code> <code><link linkend="variable-rgb-DarkSeaGreen1">$tan:rgb-DarkSeaGreen1</link></code> <code><link linkend="variable-rgb-DarkSeaGreen2">$tan:rgb-DarkSeaGreen2</link></code> <code><link linkend="variable-rgb-DarkSeaGreen3">$tan:rgb-DarkSeaGreen3</link></code> <code><link linkend="variable-rgb-DarkSeaGreen4">$tan:rgb-DarkSeaGreen4</link></code> <code><link linkend="variable-rgb-DarkSlateBlue">$tan:rgb-DarkSlateBlue</link></code> <code><link linkend="variable-rgb-DarkSlateGray">$tan:rgb-DarkSlateGray</link></code> <code><link linkend="variable-rgb-DarkSlateGray1">$tan:rgb-DarkSlateGray1</link></code> <code><link linkend="variable-rgb-DarkSlateGray2">$tan:rgb-DarkSlateGray2</link></code> <code><link linkend="variable-rgb-DarkSlateGray3">$tan:rgb-DarkSlateGray3</link></code> <code><link linkend="variable-rgb-DarkSlateGray4">$tan:rgb-DarkSlateGray4</link></code> <code><link linkend="variable-rgb-DarkSlateGrey">$tan:rgb-DarkSlateGrey</link></code> <code><link linkend="variable-rgb-DarkTurquoise">$tan:rgb-DarkTurquoise</link></code> <code><link linkend="variable-rgb-DarkViolet">$tan:rgb-DarkViolet</link></code> <code><link linkend="variable-rgb-deep-pink">$tan:rgb-deep-pink</link></code> <code><link linkend="variable-rgb-deep-sky-blue">$tan:rgb-deep-sky-blue</link></code> <code><link linkend="variable-rgb-DeepPink">$tan:rgb-DeepPink</link></code> <code><link linkend="variable-rgb-DeepPink1">$tan:rgb-DeepPink1</link></code> <code><link linkend="variable-rgb-DeepPink2">$tan:rgb-DeepPink2</link></code> <code><link linkend="variable-rgb-DeepPink3">$tan:rgb-DeepPink3</link></code> <code><link linkend="variable-rgb-DeepPink4">$tan:rgb-DeepPink4</link></code> <code><link linkend="variable-rgb-DeepSkyBlue">$tan:rgb-DeepSkyBlue</link></code> <code><link linkend="variable-rgb-DeepSkyBlue1">$tan:rgb-DeepSkyBlue1</link></code> <code><link linkend="variable-rgb-DeepSkyBlue2">$tan:rgb-DeepSkyBlue2</link></code> <code><link linkend="variable-rgb-DeepSkyBlue3">$tan:rgb-DeepSkyBlue3</link></code> <code><link linkend="variable-rgb-DeepSkyBlue4">$tan:rgb-DeepSkyBlue4</link></code> <code><link linkend="variable-rgb-dim-gray">$tan:rgb-dim-gray</link></code> <code><link linkend="variable-rgb-dim-grey">$tan:rgb-dim-grey</link></code> <code><link linkend="variable-rgb-DimGray">$tan:rgb-DimGray</link></code> <code><link linkend="variable-rgb-DimGrey">$tan:rgb-DimGrey</link></code> <code><link linkend="variable-rgb-dodger-blue">$tan:rgb-dodger-blue</link></code> <code><link linkend="variable-rgb-DodgerBlue">$tan:rgb-DodgerBlue</link></code> <code><link linkend="variable-rgb-DodgerBlue1">$tan:rgb-DodgerBlue1</link></code> <code><link linkend="variable-rgb-DodgerBlue2">$tan:rgb-DodgerBlue2</link></code> <code><link linkend="variable-rgb-DodgerBlue3">$tan:rgb-DodgerBlue3</link></code> <code><link linkend="variable-rgb-DodgerBlue4">$tan:rgb-DodgerBlue4</link></code> <code><link linkend="variable-rgb-firebrick">$tan:rgb-firebrick</link></code> <code><link linkend="variable-rgb-firebrick1">$tan:rgb-firebrick1</link></code> <code><link linkend="variable-rgb-firebrick2">$tan:rgb-firebrick2</link></code> <code><link linkend="variable-rgb-firebrick3">$tan:rgb-firebrick3</link></code> <code><link linkend="variable-rgb-firebrick4">$tan:rgb-firebrick4</link></code> <code><link linkend="variable-rgb-floral-white">$tan:rgb-floral-white</link></code> <code><link linkend="variable-rgb-FloralWhite">$tan:rgb-FloralWhite</link></code> <code><link linkend="variable-rgb-forest-green">$tan:rgb-forest-green</link></code> <code><link linkend="variable-rgb-ForestGreen">$tan:rgb-ForestGreen</link></code> <code><link linkend="variable-rgb-gainsboro">$tan:rgb-gainsboro</link></code> <code><link linkend="variable-rgb-ghost-white">$tan:rgb-ghost-white</link></code> <code><link linkend="variable-rgb-GhostWhite">$tan:rgb-GhostWhite</link></code> <code><link linkend="variable-rgb-gold">$tan:rgb-gold</link></code> <code><link linkend="variable-rgb-gold1">$tan:rgb-gold1</link></code> <code><link linkend="variable-rgb-gold2">$tan:rgb-gold2</link></code> <code><link linkend="variable-rgb-gold3">$tan:rgb-gold3</link></code> <code><link linkend="variable-rgb-gold4">$tan:rgb-gold4</link></code> <code><link linkend="variable-rgb-goldenrod">$tan:rgb-goldenrod</link></code> <code><link linkend="variable-rgb-goldenrod1">$tan:rgb-goldenrod1</link></code> <code><link linkend="variable-rgb-goldenrod2">$tan:rgb-goldenrod2</link></code> <code><link linkend="variable-rgb-goldenrod3">$tan:rgb-goldenrod3</link></code> <code><link linkend="variable-rgb-goldenrod4">$tan:rgb-goldenrod4</link></code> <code><link linkend="variable-rgb-gray">$tan:rgb-gray</link></code> <code><link linkend="variable-rgb-gray0">$tan:rgb-gray0</link></code> <code><link linkend="variable-rgb-gray1">$tan:rgb-gray1</link></code> <code><link linkend="variable-rgb-gray10">$tan:rgb-gray10</link></code> <code><link linkend="variable-rgb-gray100">$tan:rgb-gray100</link></code> <code><link linkend="variable-rgb-gray11">$tan:rgb-gray11</link></code> <code><link linkend="variable-rgb-gray12">$tan:rgb-gray12</link></code> <code><link linkend="variable-rgb-gray13">$tan:rgb-gray13</link></code> <code><link linkend="variable-rgb-gray14">$tan:rgb-gray14</link></code> <code><link linkend="variable-rgb-gray15">$tan:rgb-gray15</link></code> <code><link linkend="variable-rgb-gray16">$tan:rgb-gray16</link></code> <code><link linkend="variable-rgb-gray17">$tan:rgb-gray17</link></code> <code><link linkend="variable-rgb-gray18">$tan:rgb-gray18</link></code> <code><link linkend="variable-rgb-gray19">$tan:rgb-gray19</link></code> <code><link linkend="variable-rgb-gray2">$tan:rgb-gray2</link></code> <code><link linkend="variable-rgb-gray20">$tan:rgb-gray20</link></code> <code><link linkend="variable-rgb-gray21">$tan:rgb-gray21</link></code> <code><link linkend="variable-rgb-gray22">$tan:rgb-gray22</link></code> <code><link linkend="variable-rgb-gray23">$tan:rgb-gray23</link></code> <code><link linkend="variable-rgb-gray24">$tan:rgb-gray24</link></code> <code><link linkend="variable-rgb-gray25">$tan:rgb-gray25</link></code> <code><link linkend="variable-rgb-gray26">$tan:rgb-gray26</link></code> <code><link linkend="variable-rgb-gray27">$tan:rgb-gray27</link></code> <code><link linkend="variable-rgb-gray28">$tan:rgb-gray28</link></code> <code><link linkend="variable-rgb-gray29">$tan:rgb-gray29</link></code> <code><link linkend="variable-rgb-gray3">$tan:rgb-gray3</link></code> <code><link linkend="variable-rgb-gray30">$tan:rgb-gray30</link></code> <code><link linkend="variable-rgb-gray31">$tan:rgb-gray31</link></code> <code><link linkend="variable-rgb-gray32">$tan:rgb-gray32</link></code> <code><link linkend="variable-rgb-gray33">$tan:rgb-gray33</link></code> <code><link linkend="variable-rgb-gray34">$tan:rgb-gray34</link></code> <code><link linkend="variable-rgb-gray35">$tan:rgb-gray35</link></code> <code><link linkend="variable-rgb-gray36">$tan:rgb-gray36</link></code> <code><link linkend="variable-rgb-gray37">$tan:rgb-gray37</link></code> <code><link linkend="variable-rgb-gray38">$tan:rgb-gray38</link></code> <code><link linkend="variable-rgb-gray39">$tan:rgb-gray39</link></code> <code><link linkend="variable-rgb-gray4">$tan:rgb-gray4</link></code> <code><link linkend="variable-rgb-gray40">$tan:rgb-gray40</link></code> <code><link linkend="variable-rgb-gray41">$tan:rgb-gray41</link></code> <code><link linkend="variable-rgb-gray42">$tan:rgb-gray42</link></code> <code><link linkend="variable-rgb-gray43">$tan:rgb-gray43</link></code> <code><link linkend="variable-rgb-gray44">$tan:rgb-gray44</link></code> <code><link linkend="variable-rgb-gray45">$tan:rgb-gray45</link></code> <code><link linkend="variable-rgb-gray46">$tan:rgb-gray46</link></code> <code><link linkend="variable-rgb-gray47">$tan:rgb-gray47</link></code> <code><link linkend="variable-rgb-gray48">$tan:rgb-gray48</link></code> <code><link linkend="variable-rgb-gray49">$tan:rgb-gray49</link></code> <code><link linkend="variable-rgb-gray5">$tan:rgb-gray5</link></code> <code><link linkend="variable-rgb-gray50">$tan:rgb-gray50</link></code> <code><link linkend="variable-rgb-gray51">$tan:rgb-gray51</link></code> <code><link linkend="variable-rgb-gray52">$tan:rgb-gray52</link></code> <code><link linkend="variable-rgb-gray53">$tan:rgb-gray53</link></code> <code><link linkend="variable-rgb-gray54">$tan:rgb-gray54</link></code> <code><link linkend="variable-rgb-gray55">$tan:rgb-gray55</link></code> <code><link linkend="variable-rgb-gray56">$tan:rgb-gray56</link></code> <code><link linkend="variable-rgb-gray57">$tan:rgb-gray57</link></code> <code><link linkend="variable-rgb-gray58">$tan:rgb-gray58</link></code> <code><link linkend="variable-rgb-gray59">$tan:rgb-gray59</link></code> <code><link linkend="variable-rgb-gray6">$tan:rgb-gray6</link></code> <code><link linkend="variable-rgb-gray60">$tan:rgb-gray60</link></code> <code><link linkend="variable-rgb-gray61">$tan:rgb-gray61</link></code> <code><link linkend="variable-rgb-gray62">$tan:rgb-gray62</link></code> <code><link linkend="variable-rgb-gray63">$tan:rgb-gray63</link></code> <code><link linkend="variable-rgb-gray64">$tan:rgb-gray64</link></code> <code><link linkend="variable-rgb-gray65">$tan:rgb-gray65</link></code> <code><link linkend="variable-rgb-gray66">$tan:rgb-gray66</link></code> <code><link linkend="variable-rgb-gray67">$tan:rgb-gray67</link></code> <code><link linkend="variable-rgb-gray68">$tan:rgb-gray68</link></code> <code><link linkend="variable-rgb-gray69">$tan:rgb-gray69</link></code> <code><link linkend="variable-rgb-gray7">$tan:rgb-gray7</link></code> <code><link linkend="variable-rgb-gray70">$tan:rgb-gray70</link></code> <code><link linkend="variable-rgb-gray71">$tan:rgb-gray71</link></code> <code><link linkend="variable-rgb-gray72">$tan:rgb-gray72</link></code> <code><link linkend="variable-rgb-gray73">$tan:rgb-gray73</link></code> <code><link linkend="variable-rgb-gray74">$tan:rgb-gray74</link></code> <code><link linkend="variable-rgb-gray75">$tan:rgb-gray75</link></code> <code><link linkend="variable-rgb-gray76">$tan:rgb-gray76</link></code> <code><link linkend="variable-rgb-gray77">$tan:rgb-gray77</link></code> <code><link linkend="variable-rgb-gray78">$tan:rgb-gray78</link></code> <code><link linkend="variable-rgb-gray79">$tan:rgb-gray79</link></code> <code><link linkend="variable-rgb-gray8">$tan:rgb-gray8</link></code> <code><link linkend="variable-rgb-gray80">$tan:rgb-gray80</link></code> <code><link linkend="variable-rgb-gray81">$tan:rgb-gray81</link></code> <code><link linkend="variable-rgb-gray82">$tan:rgb-gray82</link></code> <code><link linkend="variable-rgb-gray83">$tan:rgb-gray83</link></code> <code><link linkend="variable-rgb-gray84">$tan:rgb-gray84</link></code> <code><link linkend="variable-rgb-gray85">$tan:rgb-gray85</link></code> <code><link linkend="variable-rgb-gray86">$tan:rgb-gray86</link></code> <code><link linkend="variable-rgb-gray87">$tan:rgb-gray87</link></code> <code><link linkend="variable-rgb-gray88">$tan:rgb-gray88</link></code> <code><link linkend="variable-rgb-gray89">$tan:rgb-gray89</link></code> <code><link linkend="variable-rgb-gray9">$tan:rgb-gray9</link></code> <code><link linkend="variable-rgb-gray90">$tan:rgb-gray90</link></code> <code><link linkend="variable-rgb-gray91">$tan:rgb-gray91</link></code> <code><link linkend="variable-rgb-gray92">$tan:rgb-gray92</link></code> <code><link linkend="variable-rgb-gray93">$tan:rgb-gray93</link></code> <code><link linkend="variable-rgb-gray94">$tan:rgb-gray94</link></code> <code><link linkend="variable-rgb-gray95">$tan:rgb-gray95</link></code> <code><link linkend="variable-rgb-gray96">$tan:rgb-gray96</link></code> <code><link linkend="variable-rgb-gray97">$tan:rgb-gray97</link></code> <code><link linkend="variable-rgb-gray98">$tan:rgb-gray98</link></code> <code><link linkend="variable-rgb-gray99">$tan:rgb-gray99</link></code> <code><link linkend="variable-rgb-green">$tan:rgb-green</link></code> <code><link linkend="variable-rgb-green-yellow">$tan:rgb-green-yellow</link></code> <code><link linkend="variable-rgb-green1">$tan:rgb-green1</link></code> <code><link linkend="variable-rgb-green2">$tan:rgb-green2</link></code> <code><link linkend="variable-rgb-green3">$tan:rgb-green3</link></code> <code><link linkend="variable-rgb-green4">$tan:rgb-green4</link></code> <code><link linkend="variable-rgb-GreenYellow">$tan:rgb-GreenYellow</link></code> <code><link linkend="variable-rgb-grey">$tan:rgb-grey</link></code> <code><link linkend="variable-rgb-grey0">$tan:rgb-grey0</link></code> <code><link linkend="variable-rgb-grey1">$tan:rgb-grey1</link></code> <code><link linkend="variable-rgb-grey10">$tan:rgb-grey10</link></code> <code><link linkend="variable-rgb-grey100">$tan:rgb-grey100</link></code> <code><link linkend="variable-rgb-grey11">$tan:rgb-grey11</link></code> <code><link linkend="variable-rgb-grey12">$tan:rgb-grey12</link></code> <code><link linkend="variable-rgb-grey13">$tan:rgb-grey13</link></code> <code><link linkend="variable-rgb-grey14">$tan:rgb-grey14</link></code> <code><link linkend="variable-rgb-grey15">$tan:rgb-grey15</link></code> <code><link linkend="variable-rgb-grey16">$tan:rgb-grey16</link></code> <code><link linkend="variable-rgb-grey17">$tan:rgb-grey17</link></code> <code><link linkend="variable-rgb-grey18">$tan:rgb-grey18</link></code> <code><link linkend="variable-rgb-grey19">$tan:rgb-grey19</link></code> <code><link linkend="variable-rgb-grey2">$tan:rgb-grey2</link></code> <code><link linkend="variable-rgb-grey20">$tan:rgb-grey20</link></code> <code><link linkend="variable-rgb-grey21">$tan:rgb-grey21</link></code> <code><link linkend="variable-rgb-grey22">$tan:rgb-grey22</link></code> <code><link linkend="variable-rgb-grey23">$tan:rgb-grey23</link></code> <code><link linkend="variable-rgb-grey24">$tan:rgb-grey24</link></code> <code><link linkend="variable-rgb-grey25">$tan:rgb-grey25</link></code> <code><link linkend="variable-rgb-grey26">$tan:rgb-grey26</link></code> <code><link linkend="variable-rgb-grey27">$tan:rgb-grey27</link></code> <code><link linkend="variable-rgb-grey28">$tan:rgb-grey28</link></code> <code><link linkend="variable-rgb-grey29">$tan:rgb-grey29</link></code> <code><link linkend="variable-rgb-grey3">$tan:rgb-grey3</link></code> <code><link linkend="variable-rgb-grey30">$tan:rgb-grey30</link></code> <code><link linkend="variable-rgb-grey31">$tan:rgb-grey31</link></code> <code><link linkend="variable-rgb-grey32">$tan:rgb-grey32</link></code> <code><link linkend="variable-rgb-grey33">$tan:rgb-grey33</link></code> <code><link linkend="variable-rgb-grey34">$tan:rgb-grey34</link></code> <code><link linkend="variable-rgb-grey35">$tan:rgb-grey35</link></code> <code><link linkend="variable-rgb-grey36">$tan:rgb-grey36</link></code> <code><link linkend="variable-rgb-grey37">$tan:rgb-grey37</link></code> <code><link linkend="variable-rgb-grey38">$tan:rgb-grey38</link></code> <code><link linkend="variable-rgb-grey39">$tan:rgb-grey39</link></code> <code><link linkend="variable-rgb-grey4">$tan:rgb-grey4</link></code> <code><link linkend="variable-rgb-grey40">$tan:rgb-grey40</link></code> <code><link linkend="variable-rgb-grey41">$tan:rgb-grey41</link></code> <code><link linkend="variable-rgb-grey42">$tan:rgb-grey42</link></code> <code><link linkend="variable-rgb-grey43">$tan:rgb-grey43</link></code> <code><link linkend="variable-rgb-grey44">$tan:rgb-grey44</link></code> <code><link linkend="variable-rgb-grey45">$tan:rgb-grey45</link></code> <code><link linkend="variable-rgb-grey46">$tan:rgb-grey46</link></code> <code><link linkend="variable-rgb-grey47">$tan:rgb-grey47</link></code> <code><link linkend="variable-rgb-grey48">$tan:rgb-grey48</link></code> <code><link linkend="variable-rgb-grey49">$tan:rgb-grey49</link></code> <code><link linkend="variable-rgb-grey5">$tan:rgb-grey5</link></code> <code><link linkend="variable-rgb-grey50">$tan:rgb-grey50</link></code> <code><link linkend="variable-rgb-grey51">$tan:rgb-grey51</link></code> <code><link linkend="variable-rgb-grey52">$tan:rgb-grey52</link></code> <code><link linkend="variable-rgb-grey53">$tan:rgb-grey53</link></code> <code><link linkend="variable-rgb-grey54">$tan:rgb-grey54</link></code> <code><link linkend="variable-rgb-grey55">$tan:rgb-grey55</link></code> <code><link linkend="variable-rgb-grey56">$tan:rgb-grey56</link></code> <code><link linkend="variable-rgb-grey57">$tan:rgb-grey57</link></code> <code><link linkend="variable-rgb-grey58">$tan:rgb-grey58</link></code> <code><link linkend="variable-rgb-grey59">$tan:rgb-grey59</link></code> <code><link linkend="variable-rgb-grey6">$tan:rgb-grey6</link></code> <code><link linkend="variable-rgb-grey60">$tan:rgb-grey60</link></code> <code><link linkend="variable-rgb-grey61">$tan:rgb-grey61</link></code> <code><link linkend="variable-rgb-grey62">$tan:rgb-grey62</link></code> <code><link linkend="variable-rgb-grey63">$tan:rgb-grey63</link></code> <code><link linkend="variable-rgb-grey64">$tan:rgb-grey64</link></code> <code><link linkend="variable-rgb-grey65">$tan:rgb-grey65</link></code> <code><link linkend="variable-rgb-grey66">$tan:rgb-grey66</link></code> <code><link linkend="variable-rgb-grey67">$tan:rgb-grey67</link></code> <code><link linkend="variable-rgb-grey68">$tan:rgb-grey68</link></code> <code><link linkend="variable-rgb-grey69">$tan:rgb-grey69</link></code> <code><link linkend="variable-rgb-grey7">$tan:rgb-grey7</link></code> <code><link linkend="variable-rgb-grey70">$tan:rgb-grey70</link></code> <code><link linkend="variable-rgb-grey71">$tan:rgb-grey71</link></code> <code><link linkend="variable-rgb-grey72">$tan:rgb-grey72</link></code> <code><link linkend="variable-rgb-grey73">$tan:rgb-grey73</link></code> <code><link linkend="variable-rgb-grey74">$tan:rgb-grey74</link></code> <code><link linkend="variable-rgb-grey75">$tan:rgb-grey75</link></code> <code><link linkend="variable-rgb-grey76">$tan:rgb-grey76</link></code> <code><link linkend="variable-rgb-grey77">$tan:rgb-grey77</link></code> <code><link linkend="variable-rgb-grey78">$tan:rgb-grey78</link></code> <code><link linkend="variable-rgb-grey79">$tan:rgb-grey79</link></code> <code><link linkend="variable-rgb-grey8">$tan:rgb-grey8</link></code> <code><link linkend="variable-rgb-grey80">$tan:rgb-grey80</link></code> <code><link linkend="variable-rgb-grey81">$tan:rgb-grey81</link></code> <code><link linkend="variable-rgb-grey82">$tan:rgb-grey82</link></code> <code><link linkend="variable-rgb-grey83">$tan:rgb-grey83</link></code> <code><link linkend="variable-rgb-grey84">$tan:rgb-grey84</link></code> <code><link linkend="variable-rgb-grey85">$tan:rgb-grey85</link></code> <code><link linkend="variable-rgb-grey86">$tan:rgb-grey86</link></code> <code><link linkend="variable-rgb-grey87">$tan:rgb-grey87</link></code> <code><link linkend="variable-rgb-grey88">$tan:rgb-grey88</link></code> <code><link linkend="variable-rgb-grey89">$tan:rgb-grey89</link></code> <code><link linkend="variable-rgb-grey9">$tan:rgb-grey9</link></code> <code><link linkend="variable-rgb-grey90">$tan:rgb-grey90</link></code> <code><link linkend="variable-rgb-grey91">$tan:rgb-grey91</link></code> <code><link linkend="variable-rgb-grey92">$tan:rgb-grey92</link></code> <code><link linkend="variable-rgb-grey93">$tan:rgb-grey93</link></code> <code><link linkend="variable-rgb-grey94">$tan:rgb-grey94</link></code> <code><link linkend="variable-rgb-grey95">$tan:rgb-grey95</link></code> <code><link linkend="variable-rgb-grey96">$tan:rgb-grey96</link></code> <code><link linkend="variable-rgb-grey97">$tan:rgb-grey97</link></code> <code><link linkend="variable-rgb-grey98">$tan:rgb-grey98</link></code> <code><link linkend="variable-rgb-grey99">$tan:rgb-grey99</link></code> <code><link linkend="variable-rgb-honeydew">$tan:rgb-honeydew</link></code> <code><link linkend="variable-rgb-honeydew1">$tan:rgb-honeydew1</link></code> <code><link linkend="variable-rgb-honeydew2">$tan:rgb-honeydew2</link></code> <code><link linkend="variable-rgb-honeydew3">$tan:rgb-honeydew3</link></code> <code><link linkend="variable-rgb-honeydew4">$tan:rgb-honeydew4</link></code> <code><link linkend="variable-rgb-hot-pink">$tan:rgb-hot-pink</link></code> <code><link linkend="variable-rgb-HotPink">$tan:rgb-HotPink</link></code> <code><link linkend="variable-rgb-HotPink1">$tan:rgb-HotPink1</link></code> <code><link linkend="variable-rgb-HotPink2">$tan:rgb-HotPink2</link></code> <code><link linkend="variable-rgb-HotPink3">$tan:rgb-HotPink3</link></code> <code><link linkend="variable-rgb-HotPink4">$tan:rgb-HotPink4</link></code> <code><link linkend="variable-rgb-indian-red">$tan:rgb-indian-red</link></code> <code><link linkend="variable-rgb-IndianRed">$tan:rgb-IndianRed</link></code> <code><link linkend="variable-rgb-IndianRed1">$tan:rgb-IndianRed1</link></code> <code><link linkend="variable-rgb-IndianRed2">$tan:rgb-IndianRed2</link></code> <code><link linkend="variable-rgb-IndianRed3">$tan:rgb-IndianRed3</link></code> <code><link linkend="variable-rgb-IndianRed4">$tan:rgb-IndianRed4</link></code> <code><link linkend="variable-rgb-ivory">$tan:rgb-ivory</link></code> <code><link linkend="variable-rgb-ivory1">$tan:rgb-ivory1</link></code> <code><link linkend="variable-rgb-ivory2">$tan:rgb-ivory2</link></code> <code><link linkend="variable-rgb-ivory3">$tan:rgb-ivory3</link></code> <code><link linkend="variable-rgb-ivory4">$tan:rgb-ivory4</link></code> <code><link linkend="variable-rgb-khaki">$tan:rgb-khaki</link></code> <code><link linkend="variable-rgb-khaki1">$tan:rgb-khaki1</link></code> <code><link linkend="variable-rgb-khaki2">$tan:rgb-khaki2</link></code> <code><link linkend="variable-rgb-khaki3">$tan:rgb-khaki3</link></code> <code><link linkend="variable-rgb-khaki4">$tan:rgb-khaki4</link></code> <code><link linkend="variable-rgb-lavender">$tan:rgb-lavender</link></code> <code><link linkend="variable-rgb-lavender-blush">$tan:rgb-lavender-blush</link></code> <code><link linkend="variable-rgb-LavenderBlush">$tan:rgb-LavenderBlush</link></code> <code><link linkend="variable-rgb-LavenderBlush1">$tan:rgb-LavenderBlush1</link></code> <code><link linkend="variable-rgb-LavenderBlush2">$tan:rgb-LavenderBlush2</link></code> <code><link linkend="variable-rgb-LavenderBlush3">$tan:rgb-LavenderBlush3</link></code> <code><link linkend="variable-rgb-LavenderBlush4">$tan:rgb-LavenderBlush4</link></code> <code><link linkend="variable-rgb-lawn-green">$tan:rgb-lawn-green</link></code> <code><link linkend="variable-rgb-LawnGreen">$tan:rgb-LawnGreen</link></code> <code><link linkend="variable-rgb-lemon-chiffon">$tan:rgb-lemon-chiffon</link></code> <code><link linkend="variable-rgb-LemonChiffon">$tan:rgb-LemonChiffon</link></code> <code><link linkend="variable-rgb-LemonChiffon1">$tan:rgb-LemonChiffon1</link></code> <code><link linkend="variable-rgb-LemonChiffon2">$tan:rgb-LemonChiffon2</link></code> <code><link linkend="variable-rgb-LemonChiffon3">$tan:rgb-LemonChiffon3</link></code> <code><link linkend="variable-rgb-LemonChiffon4">$tan:rgb-LemonChiffon4</link></code> <code><link linkend="variable-rgb-light-blue">$tan:rgb-light-blue</link></code> <code><link linkend="variable-rgb-light-coral">$tan:rgb-light-coral</link></code> <code><link linkend="variable-rgb-light-cyan">$tan:rgb-light-cyan</link></code> <code><link linkend="variable-rgb-light-goldenrod">$tan:rgb-light-goldenrod</link></code> <code><link linkend="variable-rgb-light-goldenrod-yellow">$tan:rgb-light-goldenrod-yellow</link></code> <code><link linkend="variable-rgb-light-gray">$tan:rgb-light-gray</link></code> <code><link linkend="variable-rgb-light-green">$tan:rgb-light-green</link></code> <code><link linkend="variable-rgb-light-grey">$tan:rgb-light-grey</link></code> <code><link linkend="variable-rgb-light-pink">$tan:rgb-light-pink</link></code> <code><link linkend="variable-rgb-light-salmon">$tan:rgb-light-salmon</link></code> <code><link linkend="variable-rgb-light-sea-green">$tan:rgb-light-sea-green</link></code> <code><link linkend="variable-rgb-light-sky-blue">$tan:rgb-light-sky-blue</link></code> <code><link linkend="variable-rgb-light-slate-blue">$tan:rgb-light-slate-blue</link></code> <code><link linkend="variable-rgb-light-slate-gray">$tan:rgb-light-slate-gray</link></code> <code><link linkend="variable-rgb-light-slate-grey">$tan:rgb-light-slate-grey</link></code> <code><link linkend="variable-rgb-light-steel-blue">$tan:rgb-light-steel-blue</link></code> <code><link linkend="variable-rgb-light-yellow">$tan:rgb-light-yellow</link></code> <code><link linkend="variable-rgb-LightBlue">$tan:rgb-LightBlue</link></code> <code><link linkend="variable-rgb-LightBlue1">$tan:rgb-LightBlue1</link></code> <code><link linkend="variable-rgb-LightBlue2">$tan:rgb-LightBlue2</link></code> <code><link linkend="variable-rgb-LightBlue3">$tan:rgb-LightBlue3</link></code> <code><link linkend="variable-rgb-LightBlue4">$tan:rgb-LightBlue4</link></code> <code><link linkend="variable-rgb-LightCoral">$tan:rgb-LightCoral</link></code> <code><link linkend="variable-rgb-LightCyan">$tan:rgb-LightCyan</link></code> <code><link linkend="variable-rgb-LightCyan1">$tan:rgb-LightCyan1</link></code> <code><link linkend="variable-rgb-LightCyan2">$tan:rgb-LightCyan2</link></code> <code><link linkend="variable-rgb-LightCyan3">$tan:rgb-LightCyan3</link></code> <code><link linkend="variable-rgb-LightCyan4">$tan:rgb-LightCyan4</link></code> <code><link linkend="variable-rgb-LightGoldenrod">$tan:rgb-LightGoldenrod</link></code> <code><link linkend="variable-rgb-LightGoldenrod1">$tan:rgb-LightGoldenrod1</link></code> <code><link linkend="variable-rgb-LightGoldenrod2">$tan:rgb-LightGoldenrod2</link></code> <code><link linkend="variable-rgb-LightGoldenrod3">$tan:rgb-LightGoldenrod3</link></code> <code><link linkend="variable-rgb-LightGoldenrod4">$tan:rgb-LightGoldenrod4</link></code> <code><link linkend="variable-rgb-LightGoldenrodYellow">$tan:rgb-LightGoldenrodYellow</link></code> <code><link linkend="variable-rgb-LightGray">$tan:rgb-LightGray</link></code> <code><link linkend="variable-rgb-LightGreen">$tan:rgb-LightGreen</link></code> <code><link linkend="variable-rgb-LightGrey">$tan:rgb-LightGrey</link></code> <code><link linkend="variable-rgb-LightPink">$tan:rgb-LightPink</link></code> <code><link linkend="variable-rgb-LightPink1">$tan:rgb-LightPink1</link></code> <code><link linkend="variable-rgb-LightPink2">$tan:rgb-LightPink2</link></code> <code><link linkend="variable-rgb-LightPink3">$tan:rgb-LightPink3</link></code> <code><link linkend="variable-rgb-LightPink4">$tan:rgb-LightPink4</link></code> <code><link linkend="variable-rgb-LightSalmon">$tan:rgb-LightSalmon</link></code> <code><link linkend="variable-rgb-LightSalmon1">$tan:rgb-LightSalmon1</link></code> <code><link linkend="variable-rgb-LightSalmon2">$tan:rgb-LightSalmon2</link></code> <code><link linkend="variable-rgb-LightSalmon3">$tan:rgb-LightSalmon3</link></code> <code><link linkend="variable-rgb-LightSalmon4">$tan:rgb-LightSalmon4</link></code> <code><link linkend="variable-rgb-LightSeaGreen">$tan:rgb-LightSeaGreen</link></code> <code><link linkend="variable-rgb-LightSkyBlue">$tan:rgb-LightSkyBlue</link></code> <code><link linkend="variable-rgb-LightSkyBlue1">$tan:rgb-LightSkyBlue1</link></code> <code><link linkend="variable-rgb-LightSkyBlue2">$tan:rgb-LightSkyBlue2</link></code> <code><link linkend="variable-rgb-LightSkyBlue3">$tan:rgb-LightSkyBlue3</link></code> <code><link linkend="variable-rgb-LightSkyBlue4">$tan:rgb-LightSkyBlue4</link></code> <code><link linkend="variable-rgb-LightSlateBlue">$tan:rgb-LightSlateBlue</link></code> <code><link linkend="variable-rgb-LightSlateGray">$tan:rgb-LightSlateGray</link></code> <code><link linkend="variable-rgb-LightSlateGrey">$tan:rgb-LightSlateGrey</link></code> <code><link linkend="variable-rgb-LightSteelBlue">$tan:rgb-LightSteelBlue</link></code> <code><link linkend="variable-rgb-LightSteelBlue1">$tan:rgb-LightSteelBlue1</link></code> <code><link linkend="variable-rgb-LightSteelBlue2">$tan:rgb-LightSteelBlue2</link></code> <code><link linkend="variable-rgb-LightSteelBlue3">$tan:rgb-LightSteelBlue3</link></code> <code><link linkend="variable-rgb-LightSteelBlue4">$tan:rgb-LightSteelBlue4</link></code> <code><link linkend="variable-rgb-LightYellow">$tan:rgb-LightYellow</link></code> <code><link linkend="variable-rgb-LightYellow1">$tan:rgb-LightYellow1</link></code> <code><link linkend="variable-rgb-LightYellow2">$tan:rgb-LightYellow2</link></code> <code><link linkend="variable-rgb-LightYellow3">$tan:rgb-LightYellow3</link></code> <code><link linkend="variable-rgb-LightYellow4">$tan:rgb-LightYellow4</link></code> <code><link linkend="variable-rgb-lime-green">$tan:rgb-lime-green</link></code> <code><link linkend="variable-rgb-LimeGreen">$tan:rgb-LimeGreen</link></code> <code><link linkend="variable-rgb-linen">$tan:rgb-linen</link></code> <code><link linkend="variable-rgb-magenta">$tan:rgb-magenta</link></code> <code><link linkend="variable-rgb-magenta1">$tan:rgb-magenta1</link></code> <code><link linkend="variable-rgb-magenta2">$tan:rgb-magenta2</link></code> <code><link linkend="variable-rgb-magenta3">$tan:rgb-magenta3</link></code> <code><link linkend="variable-rgb-magenta4">$tan:rgb-magenta4</link></code> <code><link linkend="variable-rgb-maroon">$tan:rgb-maroon</link></code> <code><link linkend="variable-rgb-maroon1">$tan:rgb-maroon1</link></code> <code><link linkend="variable-rgb-maroon2">$tan:rgb-maroon2</link></code> <code><link linkend="variable-rgb-maroon3">$tan:rgb-maroon3</link></code> <code><link linkend="variable-rgb-maroon4">$tan:rgb-maroon4</link></code> <code><link linkend="variable-rgb-medium-aquamarine">$tan:rgb-medium-aquamarine</link></code> <code><link linkend="variable-rgb-medium-blue">$tan:rgb-medium-blue</link></code> <code><link linkend="variable-rgb-medium-orchid">$tan:rgb-medium-orchid</link></code> <code><link linkend="variable-rgb-medium-purple">$tan:rgb-medium-purple</link></code> <code><link linkend="variable-rgb-medium-sea-green">$tan:rgb-medium-sea-green</link></code> <code><link linkend="variable-rgb-medium-slate-blue">$tan:rgb-medium-slate-blue</link></code> <code><link linkend="variable-rgb-medium-spring-green">$tan:rgb-medium-spring-green</link></code> <code><link linkend="variable-rgb-medium-turquoise">$tan:rgb-medium-turquoise</link></code> <code><link linkend="variable-rgb-medium-violet-red">$tan:rgb-medium-violet-red</link></code> <code><link linkend="variable-rgb-MediumAquamarine">$tan:rgb-MediumAquamarine</link></code> <code><link linkend="variable-rgb-MediumBlue">$tan:rgb-MediumBlue</link></code> <code><link linkend="variable-rgb-MediumOrchid">$tan:rgb-MediumOrchid</link></code> <code><link linkend="variable-rgb-MediumOrchid1">$tan:rgb-MediumOrchid1</link></code> <code><link linkend="variable-rgb-MediumOrchid2">$tan:rgb-MediumOrchid2</link></code> <code><link linkend="variable-rgb-MediumOrchid3">$tan:rgb-MediumOrchid3</link></code> <code><link linkend="variable-rgb-MediumOrchid4">$tan:rgb-MediumOrchid4</link></code> <code><link linkend="variable-rgb-MediumPurple">$tan:rgb-MediumPurple</link></code> <code><link linkend="variable-rgb-MediumPurple1">$tan:rgb-MediumPurple1</link></code> <code><link linkend="variable-rgb-MediumPurple2">$tan:rgb-MediumPurple2</link></code> <code><link linkend="variable-rgb-MediumPurple3">$tan:rgb-MediumPurple3</link></code> <code><link linkend="variable-rgb-MediumPurple4">$tan:rgb-MediumPurple4</link></code> <code><link linkend="variable-rgb-MediumSeaGreen">$tan:rgb-MediumSeaGreen</link></code> <code><link linkend="variable-rgb-MediumSlateBlue">$tan:rgb-MediumSlateBlue</link></code> <code><link linkend="variable-rgb-MediumSpringGreen">$tan:rgb-MediumSpringGreen</link></code> <code><link linkend="variable-rgb-MediumTurquoise">$tan:rgb-MediumTurquoise</link></code> <code><link linkend="variable-rgb-MediumVioletRed">$tan:rgb-MediumVioletRed</link></code> <code><link linkend="variable-rgb-midnight-blue">$tan:rgb-midnight-blue</link></code> <code><link linkend="variable-rgb-MidnightBlue">$tan:rgb-MidnightBlue</link></code> <code><link linkend="variable-rgb-mint-cream">$tan:rgb-mint-cream</link></code> <code><link linkend="variable-rgb-MintCream">$tan:rgb-MintCream</link></code> <code><link linkend="variable-rgb-misty-rose">$tan:rgb-misty-rose</link></code> <code><link linkend="variable-rgb-MistyRose">$tan:rgb-MistyRose</link></code> <code><link linkend="variable-rgb-MistyRose1">$tan:rgb-MistyRose1</link></code> <code><link linkend="variable-rgb-MistyRose2">$tan:rgb-MistyRose2</link></code> <code><link linkend="variable-rgb-MistyRose3">$tan:rgb-MistyRose3</link></code> <code><link linkend="variable-rgb-MistyRose4">$tan:rgb-MistyRose4</link></code> <code><link linkend="variable-rgb-moccasin">$tan:rgb-moccasin</link></code> <code><link linkend="variable-rgb-navajo-white">$tan:rgb-navajo-white</link></code> <code><link linkend="variable-rgb-NavajoWhite">$tan:rgb-NavajoWhite</link></code> <code><link linkend="variable-rgb-NavajoWhite1">$tan:rgb-NavajoWhite1</link></code> <code><link linkend="variable-rgb-NavajoWhite2">$tan:rgb-NavajoWhite2</link></code> <code><link linkend="variable-rgb-NavajoWhite3">$tan:rgb-NavajoWhite3</link></code> <code><link linkend="variable-rgb-NavajoWhite4">$tan:rgb-NavajoWhite4</link></code> <code><link linkend="variable-rgb-navy">$tan:rgb-navy</link></code> <code><link linkend="variable-rgb-navy-blue">$tan:rgb-navy-blue</link></code> <code><link linkend="variable-rgb-NavyBlue">$tan:rgb-NavyBlue</link></code> <code><link linkend="variable-rgb-old-lace">$tan:rgb-old-lace</link></code> <code><link linkend="variable-rgb-OldLace">$tan:rgb-OldLace</link></code> <code><link linkend="variable-rgb-olive-drab">$tan:rgb-olive-drab</link></code> <code><link linkend="variable-rgb-OliveDrab">$tan:rgb-OliveDrab</link></code> <code><link linkend="variable-rgb-OliveDrab1">$tan:rgb-OliveDrab1</link></code> <code><link linkend="variable-rgb-OliveDrab2">$tan:rgb-OliveDrab2</link></code> <code><link linkend="variable-rgb-OliveDrab3">$tan:rgb-OliveDrab3</link></code> <code><link linkend="variable-rgb-OliveDrab4">$tan:rgb-OliveDrab4</link></code> <code><link linkend="variable-rgb-orange">$tan:rgb-orange</link></code> <code><link linkend="variable-rgb-orange-red">$tan:rgb-orange-red</link></code> <code><link linkend="variable-rgb-orange1">$tan:rgb-orange1</link></code> <code><link linkend="variable-rgb-orange2">$tan:rgb-orange2</link></code> <code><link linkend="variable-rgb-orange3">$tan:rgb-orange3</link></code> <code><link linkend="variable-rgb-orange4">$tan:rgb-orange4</link></code> <code><link linkend="variable-rgb-OrangeRed">$tan:rgb-OrangeRed</link></code> <code><link linkend="variable-rgb-OrangeRed1">$tan:rgb-OrangeRed1</link></code> <code><link linkend="variable-rgb-OrangeRed2">$tan:rgb-OrangeRed2</link></code> <code><link linkend="variable-rgb-OrangeRed3">$tan:rgb-OrangeRed3</link></code> <code><link linkend="variable-rgb-OrangeRed4">$tan:rgb-OrangeRed4</link></code> <code><link linkend="variable-rgb-orchid">$tan:rgb-orchid</link></code> <code><link linkend="variable-rgb-orchid1">$tan:rgb-orchid1</link></code> <code><link linkend="variable-rgb-orchid2">$tan:rgb-orchid2</link></code> <code><link linkend="variable-rgb-orchid3">$tan:rgb-orchid3</link></code> <code><link linkend="variable-rgb-orchid4">$tan:rgb-orchid4</link></code> <code><link linkend="variable-rgb-pale-goldenrod">$tan:rgb-pale-goldenrod</link></code> <code><link linkend="variable-rgb-pale-green">$tan:rgb-pale-green</link></code> <code><link linkend="variable-rgb-pale-turquoise">$tan:rgb-pale-turquoise</link></code> <code><link linkend="variable-rgb-pale-violet-red">$tan:rgb-pale-violet-red</link></code> <code><link linkend="variable-rgb-PaleGoldenrod">$tan:rgb-PaleGoldenrod</link></code> <code><link linkend="variable-rgb-PaleGreen">$tan:rgb-PaleGreen</link></code> <code><link linkend="variable-rgb-PaleGreen1">$tan:rgb-PaleGreen1</link></code> <code><link linkend="variable-rgb-PaleGreen2">$tan:rgb-PaleGreen2</link></code> <code><link linkend="variable-rgb-PaleGreen3">$tan:rgb-PaleGreen3</link></code> <code><link linkend="variable-rgb-PaleGreen4">$tan:rgb-PaleGreen4</link></code> <code><link linkend="variable-rgb-PaleTurquoise">$tan:rgb-PaleTurquoise</link></code> <code><link linkend="variable-rgb-PaleTurquoise1">$tan:rgb-PaleTurquoise1</link></code> <code><link linkend="variable-rgb-PaleTurquoise2">$tan:rgb-PaleTurquoise2</link></code> <code><link linkend="variable-rgb-PaleTurquoise3">$tan:rgb-PaleTurquoise3</link></code> <code><link linkend="variable-rgb-PaleTurquoise4">$tan:rgb-PaleTurquoise4</link></code> <code><link linkend="variable-rgb-PaleVioletRed">$tan:rgb-PaleVioletRed</link></code> <code><link linkend="variable-rgb-PaleVioletRed1">$tan:rgb-PaleVioletRed1</link></code> <code><link linkend="variable-rgb-PaleVioletRed2">$tan:rgb-PaleVioletRed2</link></code> <code><link linkend="variable-rgb-PaleVioletRed3">$tan:rgb-PaleVioletRed3</link></code> <code><link linkend="variable-rgb-PaleVioletRed4">$tan:rgb-PaleVioletRed4</link></code> <code><link linkend="variable-rgb-papaya-whip">$tan:rgb-papaya-whip</link></code> <code><link linkend="variable-rgb-PapayaWhip">$tan:rgb-PapayaWhip</link></code> <code><link linkend="variable-rgb-peach-puff">$tan:rgb-peach-puff</link></code> <code><link linkend="variable-rgb-PeachPuff">$tan:rgb-PeachPuff</link></code> <code><link linkend="variable-rgb-PeachPuff1">$tan:rgb-PeachPuff1</link></code> <code><link linkend="variable-rgb-PeachPuff2">$tan:rgb-PeachPuff2</link></code> <code><link linkend="variable-rgb-PeachPuff3">$tan:rgb-PeachPuff3</link></code> <code><link linkend="variable-rgb-PeachPuff4">$tan:rgb-PeachPuff4</link></code> <code><link linkend="variable-rgb-peru">$tan:rgb-peru</link></code> <code><link linkend="variable-rgb-pink">$tan:rgb-pink</link></code> <code><link linkend="variable-rgb-pink1">$tan:rgb-pink1</link></code> <code><link linkend="variable-rgb-pink2">$tan:rgb-pink2</link></code> <code><link linkend="variable-rgb-pink3">$tan:rgb-pink3</link></code> <code><link linkend="variable-rgb-pink4">$tan:rgb-pink4</link></code> <code><link linkend="variable-rgb-plum">$tan:rgb-plum</link></code> <code><link linkend="variable-rgb-plum1">$tan:rgb-plum1</link></code> <code><link linkend="variable-rgb-plum2">$tan:rgb-plum2</link></code> <code><link linkend="variable-rgb-plum3">$tan:rgb-plum3</link></code> <code><link linkend="variable-rgb-plum4">$tan:rgb-plum4</link></code> <code><link linkend="variable-rgb-powder-blue">$tan:rgb-powder-blue</link></code> <code><link linkend="variable-rgb-PowderBlue">$tan:rgb-PowderBlue</link></code> <code><link linkend="variable-rgb-purple">$tan:rgb-purple</link></code> <code><link linkend="variable-rgb-purple1">$tan:rgb-purple1</link></code> <code><link linkend="variable-rgb-purple2">$tan:rgb-purple2</link></code> <code><link linkend="variable-rgb-purple3">$tan:rgb-purple3</link></code> <code><link linkend="variable-rgb-purple4">$tan:rgb-purple4</link></code> <code><link linkend="variable-rgb-red">$tan:rgb-red</link></code> <code><link linkend="variable-rgb-red1">$tan:rgb-red1</link></code> <code><link linkend="variable-rgb-red2">$tan:rgb-red2</link></code> <code><link linkend="variable-rgb-red3">$tan:rgb-red3</link></code> <code><link linkend="variable-rgb-red4">$tan:rgb-red4</link></code> <code><link linkend="variable-rgb-rosy-brown">$tan:rgb-rosy-brown</link></code> <code><link linkend="variable-rgb-RosyBrown">$tan:rgb-RosyBrown</link></code> <code><link linkend="variable-rgb-RosyBrown1">$tan:rgb-RosyBrown1</link></code> <code><link linkend="variable-rgb-RosyBrown2">$tan:rgb-RosyBrown2</link></code> <code><link linkend="variable-rgb-RosyBrown3">$tan:rgb-RosyBrown3</link></code> <code><link linkend="variable-rgb-RosyBrown4">$tan:rgb-RosyBrown4</link></code> <code><link linkend="variable-rgb-royal-blue">$tan:rgb-royal-blue</link></code> <code><link linkend="variable-rgb-RoyalBlue">$tan:rgb-RoyalBlue</link></code> <code><link linkend="variable-rgb-RoyalBlue1">$tan:rgb-RoyalBlue1</link></code> <code><link linkend="variable-rgb-RoyalBlue2">$tan:rgb-RoyalBlue2</link></code> <code><link linkend="variable-rgb-RoyalBlue3">$tan:rgb-RoyalBlue3</link></code> <code><link linkend="variable-rgb-RoyalBlue4">$tan:rgb-RoyalBlue4</link></code> <code><link linkend="variable-rgb-saddle-brown">$tan:rgb-saddle-brown</link></code> <code><link linkend="variable-rgb-SaddleBrown">$tan:rgb-SaddleBrown</link></code> <code><link linkend="variable-rgb-salmon">$tan:rgb-salmon</link></code> <code><link linkend="variable-rgb-salmon1">$tan:rgb-salmon1</link></code> <code><link linkend="variable-rgb-salmon2">$tan:rgb-salmon2</link></code> <code><link linkend="variable-rgb-salmon3">$tan:rgb-salmon3</link></code> <code><link linkend="variable-rgb-salmon4">$tan:rgb-salmon4</link></code> <code><link linkend="variable-rgb-sandy-brown">$tan:rgb-sandy-brown</link></code> <code><link linkend="variable-rgb-SandyBrown">$tan:rgb-SandyBrown</link></code> <code><link linkend="variable-rgb-sea-green">$tan:rgb-sea-green</link></code> <code><link linkend="variable-rgb-SeaGreen">$tan:rgb-SeaGreen</link></code> <code><link linkend="variable-rgb-SeaGreen1">$tan:rgb-SeaGreen1</link></code> <code><link linkend="variable-rgb-SeaGreen2">$tan:rgb-SeaGreen2</link></code> <code><link linkend="variable-rgb-SeaGreen3">$tan:rgb-SeaGreen3</link></code> <code><link linkend="variable-rgb-SeaGreen4">$tan:rgb-SeaGreen4</link></code> <code><link linkend="variable-rgb-seashell">$tan:rgb-seashell</link></code> <code><link linkend="variable-rgb-seashell1">$tan:rgb-seashell1</link></code> <code><link linkend="variable-rgb-seashell2">$tan:rgb-seashell2</link></code> <code><link linkend="variable-rgb-seashell3">$tan:rgb-seashell3</link></code> <code><link linkend="variable-rgb-seashell4">$tan:rgb-seashell4</link></code> <code><link linkend="variable-rgb-sienna">$tan:rgb-sienna</link></code> <code><link linkend="variable-rgb-sienna1">$tan:rgb-sienna1</link></code> <code><link linkend="variable-rgb-sienna2">$tan:rgb-sienna2</link></code> <code><link linkend="variable-rgb-sienna3">$tan:rgb-sienna3</link></code> <code><link linkend="variable-rgb-sienna4">$tan:rgb-sienna4</link></code> <code><link linkend="variable-rgb-sky-blue">$tan:rgb-sky-blue</link></code> <code><link linkend="variable-rgb-SkyBlue">$tan:rgb-SkyBlue</link></code> <code><link linkend="variable-rgb-SkyBlue1">$tan:rgb-SkyBlue1</link></code> <code><link linkend="variable-rgb-SkyBlue2">$tan:rgb-SkyBlue2</link></code> <code><link linkend="variable-rgb-SkyBlue3">$tan:rgb-SkyBlue3</link></code> <code><link linkend="variable-rgb-SkyBlue4">$tan:rgb-SkyBlue4</link></code> <code><link linkend="variable-rgb-slate-blue">$tan:rgb-slate-blue</link></code> <code><link linkend="variable-rgb-slate-gray">$tan:rgb-slate-gray</link></code> <code><link linkend="variable-rgb-slate-grey">$tan:rgb-slate-grey</link></code> <code><link linkend="variable-rgb-SlateBlue">$tan:rgb-SlateBlue</link></code> <code><link linkend="variable-rgb-SlateBlue1">$tan:rgb-SlateBlue1</link></code> <code><link linkend="variable-rgb-SlateBlue2">$tan:rgb-SlateBlue2</link></code> <code><link linkend="variable-rgb-SlateBlue3">$tan:rgb-SlateBlue3</link></code> <code><link linkend="variable-rgb-SlateBlue4">$tan:rgb-SlateBlue4</link></code> <code><link linkend="variable-rgb-SlateGray">$tan:rgb-SlateGray</link></code> <code><link linkend="variable-rgb-SlateGray1">$tan:rgb-SlateGray1</link></code> <code><link linkend="variable-rgb-SlateGray2">$tan:rgb-SlateGray2</link></code> <code><link linkend="variable-rgb-SlateGray3">$tan:rgb-SlateGray3</link></code> <code><link linkend="variable-rgb-SlateGray4">$tan:rgb-SlateGray4</link></code> <code><link linkend="variable-rgb-SlateGrey">$tan:rgb-SlateGrey</link></code> <code><link linkend="variable-rgb-snow">$tan:rgb-snow</link></code> <code><link linkend="variable-rgb-snow1">$tan:rgb-snow1</link></code> <code><link linkend="variable-rgb-snow2">$tan:rgb-snow2</link></code> <code><link linkend="variable-rgb-snow3">$tan:rgb-snow3</link></code> <code><link linkend="variable-rgb-snow4">$tan:rgb-snow4</link></code> <code><link linkend="variable-rgb-spring-green">$tan:rgb-spring-green</link></code> <code><link linkend="variable-rgb-SpringGreen">$tan:rgb-SpringGreen</link></code> <code><link linkend="variable-rgb-SpringGreen1">$tan:rgb-SpringGreen1</link></code> <code><link linkend="variable-rgb-SpringGreen2">$tan:rgb-SpringGreen2</link></code> <code><link linkend="variable-rgb-SpringGreen3">$tan:rgb-SpringGreen3</link></code> <code><link linkend="variable-rgb-SpringGreen4">$tan:rgb-SpringGreen4</link></code> <code><link linkend="variable-rgb-steel-blue">$tan:rgb-steel-blue</link></code> <code><link linkend="variable-rgb-SteelBlue">$tan:rgb-SteelBlue</link></code> <code><link linkend="variable-rgb-SteelBlue1">$tan:rgb-SteelBlue1</link></code> <code><link linkend="variable-rgb-SteelBlue2">$tan:rgb-SteelBlue2</link></code> <code><link linkend="variable-rgb-SteelBlue3">$tan:rgb-SteelBlue3</link></code> <code><link linkend="variable-rgb-SteelBlue4">$tan:rgb-SteelBlue4</link></code> <code><link linkend="variable-rgb-tan">$tan:rgb-tan</link></code> <code><link linkend="variable-rgb-tan1">$tan:rgb-tan1</link></code> <code><link linkend="variable-rgb-tan2">$tan:rgb-tan2</link></code> <code><link linkend="variable-rgb-tan3">$tan:rgb-tan3</link></code> <code><link linkend="variable-rgb-tan4">$tan:rgb-tan4</link></code> <code><link linkend="variable-rgb-thistle">$tan:rgb-thistle</link></code> <code><link linkend="variable-rgb-thistle1">$tan:rgb-thistle1</link></code> <code><link linkend="variable-rgb-thistle2">$tan:rgb-thistle2</link></code> <code><link linkend="variable-rgb-thistle3">$tan:rgb-thistle3</link></code> <code><link linkend="variable-rgb-thistle4">$tan:rgb-thistle4</link></code> <code><link linkend="variable-rgb-tomato">$tan:rgb-tomato</link></code> <code><link linkend="variable-rgb-tomato1">$tan:rgb-tomato1</link></code> <code><link linkend="variable-rgb-tomato2">$tan:rgb-tomato2</link></code> <code><link linkend="variable-rgb-tomato3">$tan:rgb-tomato3</link></code> <code><link linkend="variable-rgb-tomato4">$tan:rgb-tomato4</link></code> <code><link linkend="variable-rgb-turquoise">$tan:rgb-turquoise</link></code> <code><link linkend="variable-rgb-turquoise1">$tan:rgb-turquoise1</link></code> <code><link linkend="variable-rgb-turquoise2">$tan:rgb-turquoise2</link></code> <code><link linkend="variable-rgb-turquoise3">$tan:rgb-turquoise3</link></code> <code><link linkend="variable-rgb-turquoise4">$tan:rgb-turquoise4</link></code> <code><link linkend="variable-rgb-violet">$tan:rgb-violet</link></code> <code><link linkend="variable-rgb-violet-red">$tan:rgb-violet-red</link></code> <code><link linkend="variable-rgb-VioletRed">$tan:rgb-VioletRed</link></code> <code><link linkend="variable-rgb-VioletRed1">$tan:rgb-VioletRed1</link></code> <code><link linkend="variable-rgb-VioletRed2">$tan:rgb-VioletRed2</link></code> <code><link linkend="variable-rgb-VioletRed3">$tan:rgb-VioletRed3</link></code> <code><link linkend="variable-rgb-VioletRed4">$tan:rgb-VioletRed4</link></code> <code><link linkend="variable-rgb-wheat">$tan:rgb-wheat</link></code> <code><link linkend="variable-rgb-wheat1">$tan:rgb-wheat1</link></code> <code><link linkend="variable-rgb-wheat2">$tan:rgb-wheat2</link></code> <code><link linkend="variable-rgb-wheat3">$tan:rgb-wheat3</link></code> <code><link linkend="variable-rgb-wheat4">$tan:rgb-wheat4</link></code> <code><link linkend="variable-rgb-white">$tan:rgb-white</link></code> <code><link linkend="variable-rgb-white-smoke">$tan:rgb-white-smoke</link></code> <code><link linkend="variable-rgb-WhiteSmoke">$tan:rgb-WhiteSmoke</link></code> <code><link linkend="variable-rgb-yellow">$tan:rgb-yellow</link></code> <code><link linkend="variable-rgb-yellow-green">$tan:rgb-yellow-green</link></code> <code><link linkend="variable-rgb-yellow1">$tan:rgb-yellow1</link></code> <code><link linkend="variable-rgb-yellow2">$tan:rgb-yellow2</link></code> <code><link linkend="variable-rgb-yellow3">$tan:rgb-yellow3</link></code> <code><link linkend="variable-rgb-yellow4">$tan:rgb-yellow4</link></code> <code><link linkend="variable-rgb-YellowGreen">$tan:rgb-YellowGreen</link></code> <code><link linkend="variable-rng-collection">$tan:rng-collection</link></code> <code><link linkend="variable-rng-collection-without-TEI">$tan:rng-collection-without-TEI</link></code> <code><link linkend="function-rom-to-int">tan:rom-to-int()</link></code> <code><link linkend="variable-roman-numeral-regex">$tan:roman-numeral-regex</link></code> <code><link linkend="variable-ryb-blue">$tan:ryb-blue</link></code> <code><link linkend="variable-ryb-blue-green">$tan:ryb-blue-green</link></code> <code><link linkend="variable-ryb-blue-purple">$tan:ryb-blue-purple</link></code> <code><link linkend="variable-ryb-green">$tan:ryb-green</link></code> <code><link linkend="variable-ryb-orange">$tan:ryb-orange</link></code> <code><link linkend="variable-ryb-purple">$tan:ryb-purple</link></code> <code><link linkend="variable-ryb-red">$tan:ryb-red</link></code> <code><link linkend="variable-ryb-red-orange">$tan:ryb-red-orange</link></code> <code><link linkend="variable-ryb-red-purple">$tan:ryb-red-purple</link></code> <code><link linkend="variable-ryb-yellow">$tan:ryb-yellow</link></code> <code><link linkend="variable-ryb-yellow-green">$tan:ryb-yellow-green</link></code> <code><link linkend="variable-ryb-yellow-orange">$tan:ryb-yellow-orange</link></code> </para>
      <para><code><link linkend="function-satisfies-regex">tan:satisfies-regex()</link></code> <code><link linkend="function-satisfies-regexes">tan:satisfies-regexes()</link></code> <code><link linkend="function-save-archive">tan:save-archive()</link></code> <code><link linkend="template-save-archive">Ŧ tan:save-archive</link></code> <code><link linkend="template-save-as">Ŧ tan:save-as</link></code> <code><link linkend="function-save-docx">tan:save-docx()</link></code> <code><link linkend="template-save-docx">Ŧ tan:save-docx</link></code> <code><link linkend="function-save-xlsx">tan:save-xlsx()</link></code> <code><link linkend="template-save-xlsx">Ŧ tan:save-xlsx</link></code> <code><link linkend="variable-schema-collection">$tan:schema-collection</link></code> <code><link linkend="variable-schema-uri-collection">$tan:schema-uri-collection</link></code> <code><link linkend="function-search-for-entities">tan:search-for-entities()</link></code> <code><link linkend="function-search-for-persons">tan:search-for-persons()</link></code> <code><link linkend="function-search-for-scripta">tan:search-for-scripta()</link></code> <code><link linkend="function-search-morpheus">tan:search-morpheus()</link></code> <code><link linkend="function-search-results-to-claims">tan:search-results-to-claims()</link></code> <code><link linkend="function-search-results-to-IRI-name-pattern">tan:search-results-to-IRI-name-pattern()</link></code> <code><link linkend="variable-search-services">$search-services</link></code> <code><link linkend="function-search-wikipedia">tan:search-wikipedia()</link></code> <code><link linkend="variable-see-alsos-1st-da">$tan:see-alsos-1st-da</link></code> <code><link linkend="variable-see-alsos-resolved">$tan:see-alsos-resolved</link></code> <code><link linkend="function-segment-string">tan:segment-string()</link></code> <code><link linkend="variable-self-expanded">$tan:self-expanded</link></code> <code><link linkend="variable-self-expanded-vocabulary">$tan:self-expanded-vocabulary</link></code> <code><link linkend="variable-self-resolved">$tan:self-resolved</link></code> <code><link linkend="variable-self-resolved-plus">$tan:self-resolved-plus</link></code> <code><link linkend="variable-separator-hierarchy">$tan:separator-hierarchy</link></code> <code><link linkend="variable-separator-hierarchy-minor">$tan:separator-hierarchy-minor</link></code> <code><link linkend="variable-separator-major">$tan:separator-major</link></code> <code><link linkend="function-sequence-to-tree">tan:sequence-to-tree()</link></code> <code><link linkend="function-shallow-copy">tan:shallow-copy()</link></code> <code><link linkend="variable-shy">$tan:shy</link></code> <code><link linkend="function-sort-change-log">tan:sort-change-log()</link></code> <code><link linkend="variable-source-ids">$tan:source-ids</link></code> <code><link linkend="variable-sources-resolved">$tan:sources-resolved</link></code> <code><link linkend="variable-special-end-div-chars">$tan:special-end-div-chars</link></code> <code><link linkend="variable-special-end-div-chars-regex">$tan:special-end-div-chars-regex</link></code> <code><link linkend="variable-src-ids">$tan:src-ids</link></code> <code><link linkend="function-stamp-diff-with-text-data">tan:stamp-diff-with-text-data()</link></code> <code><link linkend="function-stamp-q-id">tan:stamp-q-id()</link></code> <code><link linkend="variable-stated-validation-phase">$tan:stated-validation-phase</link></code> <code><link linkend="function-string-base">rgx:string-base()</link></code> <code><link linkend="function-string-length">tan:string-length()</link></code> <code><link linkend="function-string-to-components">rgx:string-to-components()</link></code> <code><link linkend="function-string-to-composites">rgx:string-to-composites()</link></code> <code><link linkend="function-string-to-numerals">tan:string-to-numerals()</link></code> <code><link linkend="function-string-to-utf-8-octets">tan:string-to-utf-8-octets()</link></code> <code><link linkend="function-strip-outer-indentation">tan:strip-outer-indentation()</link></code> <code><link linkend="function-substring-after">tan:substring-after()</link></code> <code><link linkend="function-substring-before">tan:substring-before()</link></code> <code><link linkend="variable-successors-1st-da">$tan:successors-1st-da</link></code> <code><link linkend="variable-successors-resolved">$tan:successors-resolved</link></code> <code><link linkend="function-syr-to-int">tan:syr-to-int()</link></code> <code><link linkend="variable-syriac-hundreds-regex">$tan:syriac-hundreds-regex</link></code> <code><link linkend="variable-syriac-letter-numeral-pattern">$tan:syriac-letter-numeral-pattern</link></code> <code><link linkend="function-syriac-marks-to-word-end">tan:syriac-marks-to-word-end()</link></code> <code><link linkend="variable-syriac-tens-regex">$tan:syriac-tens-regex</link></code> <code><link linkend="variable-syriac-unit-regex">$tan:syriac-unit-regex</link></code> </para>
      <para><code><link linkend="template-shallow-skip">ŧ tan:shallow-skip</link></code> <code><link linkend="variable-tag-urn-regex-pattern">$tan:tag-urn-regex-pattern</link></code> <code><link linkend="template-tan-a-lm-expansion-terse">ŧ tan:tan-a-lm-expansion-terse</link></code> <code><link linkend="variable-tan-classes">$tan:tan-classes</link></code> <code><link linkend="template-temp-mark-and-remove-outer-indentations">ŧ tan:temp-mark-and-remove-outer-indentations</link></code> <code><link linkend="function-text-join">tan:text-join()</link></code> <code><link linkend="template-text-join">ŧ tan:text-join</link></code> <code><link linkend="template-text-only-copy">ŧ tan:text-only-copy</link></code> <code><link linkend="function-title-case">tan:title-case()</link></code> <code><link linkend="template-title-case">ŧ tan:title-case</link></code> <code><link linkend="variable-today-iso">$tan:today-iso</link></code> <code><link linkend="variable-today-MDY">$tan:today-MDY</link></code> <code><link linkend="key-tok-via-val">ʞ tan:tok-via-val</link></code> <code><link linkend="variable-token-definition-default">$tan:token-definition-default</link></code> <code><link linkend="variable-token-definition-letters-and-punctuation">$tan:token-definition-letters-and-punctuation</link></code> <code><link linkend="variable-token-definition-letters-only">$tan:token-definition-letters-only</link></code> <code><link linkend="variable-token-definition-nonspace">$tan:token-definition-nonspace</link></code> <code><link linkend="variable-token-definitions-reserved">$tan:token-definitions-reserved</link></code> <code><link linkend="function-tokenize">rgx:tokenize()</link></code> <code><link linkend="function-tokenize-div">tan:tokenize-div()</link></code> <code><link linkend="template-tokenize-div">ŧ tan:tokenize-div</link></code> <code><link linkend="function-tokenize-text">tan:tokenize-text()</link></code> <code><link linkend="template-tree-to-html">ŧ tan:tree-to-html</link></code> <code><link linkend="template-tree-to-html-for-attr">ŧ tan:tree-to-html-for-attr</link></code> <code><link linkend="function-tree-to-sequence">tan:tree-to-sequence()</link></code> <code><link linkend="template-tree-to-sequence">ŧ tan:tree-to-sequence</link></code> <code><link linkend="template-trim-initial-and-terminal-space">ŧ tan:trim-initial-and-terminal-space</link></code> <code><link linkend="function-trim-long-text">tan:trim-long-text()</link></code> <code><link linkend="template-trim-long-text">ŧ tan:trim-long-text</link></code> <code><link linkend="function-trim-long-tree">tan:trim-long-tree()</link></code> <code><link linkend="template-trim-long-tree">ŧ tan:trim-long-tree</link></code> <code><link linkend="template-trim-or-add-text">ŧ tan:trim-or-add-text</link></code> <code><link linkend="function-true">tan:true()</link></code> </para>
      <para><code><link linkend="variable-TAN-feature-vocabulary">$tan:TAN-feature-vocabulary</link></code> <code><link linkend="variable-TAN-id-namespace">$tan:TAN-id-namespace</link></code> <code><link linkend="variable-TAN-namespace">$tan:TAN-namespace</link></code> <code><link linkend="variable-TAN-regex-version">$TAN-regex-version</link></code> <code><link linkend="variable-TAN-version">$tan:TAN-version</link></code> <code><link linkend="variable-TAN-version-is-under-development">$tan:TAN-version-is-under-development</link></code> <code><link linkend="variable-TAN-vocabularies">$tan:TAN-vocabularies</link></code> <code><link linkend="variable-TAN-vocabularies-vocabulary">$tan:TAN-vocabularies-vocabulary</link></code> <code><link linkend="variable-TAN-vocabulary-files">$tan:TAN-vocabulary-files</link></code> <code><link linkend="variable-TEI-namespace">$tan:TEI-namespace</link></code> </para>
      <para><code><link linkend="variable-u-item-delimiter-regex">$u-item-delimiter-regex</link></code> <code><link linkend="function-unicode-to-eight-bit-chars">tan:unicode-to-eight-bit-chars()</link></code> <code><link linkend="variable-unicode-versions-supported">$unicode-versions-supported</link></code> <code><link linkend="function-unique-char">tan:unique-char()</link></code> <code><link linkend="function-update-TAN-change-log">tan:update-TAN-change-log()</link></code> <code><link linkend="function-uri-collection-from-pattern">tan:uri-collection-from-pattern()</link></code> <code><link linkend="function-uri-directory">tan:uri-directory()</link></code> <code><link linkend="function-uri-is-relative">tan:uri-is-relative()</link></code> <code><link linkend="function-uri-is-resolved">tan:uri-is-resolved()</link></code> <code><link linkend="function-uri-relative-to">tan:uri-relative-to()</link></code> <code><link linkend="function-url-is-local">tan:url-is-local()</link></code> <code><link linkend="variable-url-regex">$tan:url-regex</link></code> <code><link linkend="function-utf-8-octets-to-string">tan:utf-8-octets-to-string()</link></code> </para>
      <para><code><link linkend="variable-validation-phase-names">$tan:validation-phase-names</link></code> <code><link linkend="variable-vocabularies-resolved">$tan:vocabularies-resolved</link></code> <code><link linkend="function-vocabulary">tan:vocabulary()</link></code> </para>
      <para><code><link linkend="variable-white-mask-a10">$tan:white-mask-a10</link></code> <code><link linkend="variable-white-mask-a20">$tan:white-mask-a20</link></code> <code><link linkend="variable-white-mask-a30">$tan:white-mask-a30</link></code> <code><link linkend="variable-white-mask-a40">$tan:white-mask-a40</link></code> <code><link linkend="variable-white-mask-a50">$tan:white-mask-a50</link></code> <code><link linkend="variable-white-mask-a60">$tan:white-mask-a60</link></code> <code><link linkend="variable-white-mask-a70">$tan:white-mask-a70</link></code> <code><link linkend="variable-white-mask-a80">$tan:white-mask-a80</link></code> <code><link linkend="variable-white-mask-a90">$tan:white-mask-a90</link></code> <code><link linkend="function-wrap-text-nodes">tan:wrap-text-nodes()</link></code> </para>
      <para><code><link linkend="function-xlsx-file-available">tan:xlsx-file-available()</link></code> <code><link linkend="function-xml-to-array">tan:xml-to-array()</link></code> <code><link linkend="function-xml-to-map">tan:xml-to-map()</link></code> <code><link linkend="function-xml-to-string">tan:xml-to-string()</link></code> <code><link linkend="variable-xpath-regex">$tan:xpath-regex</link></code> </para>
      <para><code><link linkend="function-zip-uris">tan:zip-uris()</link></code> <code><link linkend="variable-zwj">$tan:zwj</link></code> <code><link linkend="variable-zwsp">$tan:zwsp</link></code> </para>
      </section></section><section xml:id="vkft-summaries"><title>Functions, global variables, keys, and named templates</title><para>Functions, global variables, keys, and named templates are summarized below, grouped by parent
                  subdirectory from the TAN function directory. For templates called by mode, see the next section.</para><section xml:id="vkft-expansion"><title>Expansion</title><section><title>Keys</title><section xml:id="key-divs-to-reset"><title><code>ʞ tan:divs-to-reset</code></title><para><emphasis>TAN-fn-expand-terse-class-1</emphasis></para><para>Looks for elements matching <code>tan:div</code></para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
</section>
<section><title>Functions</title><section xml:id="function-expand-doc"><title><code>tan:expand-doc()</code></title><para><emphasis>Option 1 (TAN-fn-expand-files)</emphasis></para><para><code>tan:expand-doc($tan-doc as document-node()?) as document-node()*</code></para><programlisting>one-parameter version of the fuller one below </programlisting><para>Used by variable <code><link linkend="variable-morphologies-expanded">$tan:morphologies-expanded</link></code>, <code><link linkend="variable-self-expanded">$tan:self-expanded</link></code>.</para><para>Used by template <code><link linkend="template-core-expansion-verbose">ŧ tan:core-expansion-verbose</link></code>, <code><link linkend="template-class-1-expansion-verbose-pass-1">ŧ tan:class-1-expansion-verbose-pass-1</link></code>.</para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>.</para><para>Relies upon <code><link linkend="function-expand-doc">tan:expand-doc</link></code>.</para><para><emphasis>Option 2 (TAN-fn-expand-files)</emphasis></para><para><code>tan:expand-doc($tan-doc as document-node()?, $target-phase as xs:string) as document-node()*</code></para><programlisting>two-parameter version of the fuller one below </programlisting><para>Used by variable <code><link linkend="variable-morphologies-expanded">$tan:morphologies-expanded</link></code>, <code><link linkend="variable-self-expanded">$tan:self-expanded</link></code>.</para><para>Used by template <code><link linkend="template-core-expansion-verbose">ŧ tan:core-expansion-verbose</link></code>, <code><link linkend="template-class-1-expansion-verbose-pass-1">ŧ tan:class-1-expansion-verbose-pass-1</link></code>.</para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>.</para><para>Relies upon <code><link linkend="function-expand-doc">tan:expand-doc</link></code>.</para><para><emphasis>Option 3 (TAN-fn-expand-files)</emphasis></para><para><code>tan:expand-doc($tan-doc as document-node()?, $target-phase as xs:string, $use-validation-mode as xs:boolean) </code></para><programlisting>Input: a resolved TAN document, a string indicating a phase of expansion, a boolean 
indicating whether the function is intended to serve validation </programlisting><programlisting>Output: the document and its dependencies expanded to the phase indicated. </programlisting><programlisting>If validation mode is true, then the results will be stripped down to root element and 
the bare markers for errors, warnings, and fixes. If validation mode is false, then the 
complete, expanded document and its dependencies will be returned. </programlisting><programlisting>Because class 2 files are expanded hand-in-glove with the class 1 files they depend 
upon, expansion is necessarily synchronized with its dependent sources. The expanded 
form of the original class-2 document is the first document of the result, and the 
expanded class-1 or -3 files follow. A TAN-A file expanded verbosely will return as its last 
document one TAN-A_merge file per work detected. TAN-A_merge files collate into a single 
master reference system all <code><link linkend="element-source">&lt;source&gt;</link></code>s of the TAN-A file that are versions of that work. </programlisting><para>Related: <link linkend="tan-function-group-expansion">expansion</link>, <link linkend="tan-function-group-files">files</link></para><para>Used by variable <code><link linkend="variable-morphologies-expanded">$tan:morphologies-expanded</link></code>, <code><link linkend="variable-self-expanded">$tan:self-expanded</link></code>.</para><para>Used by template <code><link linkend="template-core-expansion-verbose">ŧ tan:core-expansion-verbose</link></code>, <code><link linkend="template-class-1-expansion-verbose-pass-1">ŧ tan:class-1-expansion-verbose-pass-1</link></code>.</para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>.</para><para>Relies upon <code><link linkend="variable-doc-id">$tan:doc-id</link></code>, <code><link linkend="variable-morphologies-resolved">$tan:morphologies-resolved</link></code>, <code><link linkend="variable-sources-resolved">$tan:sources-resolved</link></code>, <code><link linkend="variable-validation-phase-names">$tan:validation-phase-names</link></code>, <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>, <code><link linkend="function-normalize-tree-space">tan:normalize-tree-space</link></code>, <code><link linkend="function-xml-to-string">tan:xml-to-string</link></code>, <code><link linkend="template-catalog-expansion-terse">ŧ tan:catalog-expansion-terse</link></code>, <code><link linkend="template-class-1-expansion-verbose-pass-1">ŧ tan:class-1-expansion-verbose-pass-1</link></code>, <code><link linkend="template-class-1-expansion-verbose-pass-2">ŧ tan:class-1-expansion-verbose-pass-2</link></code>, <code><link linkend="template-class-1-expansion-verbose-pass-3">ŧ tan:class-1-expansion-verbose-pass-3</link></code>, <code><link linkend="template-class-2-expansion-normal">ŧ tan:class-2-expansion-normal</link></code>, <code><link linkend="template-class-2-expansion-terse">ŧ tan:class-2-expansion-terse</link></code>, <code><link linkend="template-class-2-expansion-terse-for-validation">ŧ tan:class-2-expansion-terse-for-validation</link></code>, <code><link linkend="template-class-2-expansion-verbose">ŧ tan:class-2-expansion-verbose</link></code>, <code><link linkend="template-core-expansion-normal">ŧ tan:core-expansion-normal</link></code>, <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>, <code><link linkend="template-core-expansion-terse-attributes">ŧ tan:core-expansion-terse-attributes</link></code>, <code><link linkend="template-core-expansion-verbose">ŧ tan:core-expansion-verbose</link></code>, <code><link linkend="template-dependency-adjustments-pass-1">ŧ tan:dependency-adjustments-pass-1</link></code>, <code><link linkend="template-dependency-adjustments-pass-2">ŧ tan:dependency-adjustments-pass-2</link></code>, <code><link linkend="template-mark-dependencies-pass-1">ŧ tan:mark-dependencies-pass-1</link></code>, <code><link linkend="template-mark-dependencies-pass-2">ŧ tan:mark-dependencies-pass-2</link></code>, <code><link linkend="template-mark-dependencies-pass-2-for-validation">ŧ tan:mark-dependencies-pass-2-for-validation</link></code>, <code><link linkend="template-remove-first-token">ŧ tan:remove-first-token</link></code>, <code><link linkend="template-reset-hierarchy">ŧ tan:reset-hierarchy</link></code>, <code><link linkend="template-resolve-reference-tree-numerals">ŧ tan:resolve-reference-tree-numerals</link></code>, <code><link linkend="template-strip-dependencies-to-markers">ŧ tan:strip-dependencies-to-markers</link></code>, <code><link linkend="template-strip-distributed-vocabulary-from-idrefs">ŧ tan:strip-distributed-vocabulary-from-idrefs</link></code>, <code><link linkend="template-strip-for-validation">ŧ tan:strip-for-validation</link></code>, <code><link linkend="template-tan-a-lm-expansion-terse">ŧ tan:tan-a-lm-expansion-terse</link></code>.</para></section>
</section>
</section>
<section xml:id="vkft-regex"><title>Regex</title><section><title>Variables</title><section xml:id="variable-base-marker-regex"><title><code>$base-marker-regex</code></title><para><emphasis>TAN-fn-regex-standard</emphasis></para><para>Definition: <code>'-'</code></para><para>Used by function <code>rgx:process-regex-escape-u()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-characters-allowed-in-ucd-names-regex"><title><code>$characters-allowed-in-ucd-names-regex</code></title><para><emphasis>TAN-fn-regex-standard</emphasis></para><para>Definition: <code>'[-#\(\)a-zA-Z0-9]'</code></para><para>Used by function <code>rgx:process-regex-escape-u()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-characters-to-escape-when-converting-string-to-regex"><title><code>$characters-to-escape-when-converting-string-to-regex</code></title><para><emphasis>TAN-fn-regex-standard</emphasis></para><para>Definition: <code>'[\.\[\]\\\|\^\$\?\*\+\{\}\(\)]'</code></para><para>Used by function <code><link linkend="function-escape">rgx:escape()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-close-group-symbols-regex"><title><code>$close-group-symbols-regex</code></title><para><emphasis>TAN-fn-regex-standard</emphasis></para><para>Definition: <code>[\]\)\}]</code></para><para>Used by function <code>rgx:parse-regex()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-composite-marker-regex"><title><code>$composite-marker-regex</code></title><para><emphasis>TAN-fn-regex-standard</emphasis></para><para>Definition: <code>'\+'</code></para><para>Used by function <code>rgx:process-regex-escape-u()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-default-ucd-decomp-db"><title><code>$default-ucd-decomp-db</code></title><para><emphasis>TAN-fn-regex-standard</emphasis></para><para>Definition: <code>rgx:get-ucd-decomp-db()</code></para><para>Used by function <code><link linkend="function-string-to-components">rgx:string-to-components()</link></code>, <code><link linkend="function-string-to-composites">rgx:string-to-composites()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-default-ucd-decomp-simple-db"><title><code>$default-ucd-decomp-simple-db</code></title><para><emphasis>TAN-fn-regex-standard</emphasis></para><para>Definition: <code>rgx:get-ucd-decomp-simple-db()</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-default-ucd-names-db"><title><code>$default-ucd-names-db</code></title><para><emphasis>TAN-fn-regex-standard</emphasis></para><para>Definition: <code>rgx:get-ucd-names-db()</code></para><para>Used by function <code>rgx:get-chars-by-name()</code>, <code>rgx:build-char-replacement-guide()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-escapes-in-regex"><title><code>$escapes-in-regex</code></title><para><emphasis>TAN-fn-regex-standard</emphasis></para><para>Definition: <code>'\\[\.\[\]\\\|\^\$\?\*\+\{\}\(\)nrtdDsSiIcCwW\d]|\\[pPu]\{[^\}]*\}'</code></para><para>Used by function <code>rgx:parse-regex()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-name-marker-regex"><title><code>$name-marker-regex</code></title><para><emphasis>TAN-fn-regex-standard</emphasis></para><para>Definition: <code>'[\.!]'</code></para><para>Used by function <code>rgx:process-regex-escape-u()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-open-group-symbols-regex"><title><code>$open-group-symbols-regex</code></title><para><emphasis>TAN-fn-regex-standard</emphasis></para><para>Definition: <code>[\[\(\{]</code></para><para>Used by function <code>rgx:parse-regex()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-TAN-regex-version"><title><code>$TAN-regex-version</code></title><para><emphasis>TAN-fn-regex-standard</emphasis></para><para>Definition: <code>1.0</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-u-item-delimiter-regex"><title><code>$u-item-delimiter-regex</code></title><para><emphasis>TAN-fn-regex-standard</emphasis></para><para>Definition: <code>' '</code></para><para>Used by function <code>rgx:process-regex-escape-u()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-unicode-versions-supported"><title><code>$unicode-versions-supported</code></title><para><emphasis>TAN-fn-regex-standard</emphasis></para><para>Definition: <code>5.1, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0</code></para><para>Used by function <code>rgx:best-unicode-version()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
</section>
<section><title>Keys</title><section xml:id="key-get-chars-by-name"><title><code>ʞ get-chars-by-name</code></title><para><emphasis>TAN-fn-regex-standard</emphasis></para><para>Looks for elements matching <code>rgx:char</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:key.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
</section>
<section><title>Functions</title><section xml:id="function-analyze-string"><title><code>rgx:analyze-string()</code></title><para><emphasis>Option 1 (TAN-fn-regex-standard)</emphasis></para><para><code>rgx:analyze-string($input as xs:string?, $pattern as xs:string) as element()</code></para><programlisting>two-parameter version of the fuller one, below </programlisting><para>Used by function <code><link linkend="function-analyze-string">rgx:analyze-string()</link></code>.</para><para>Relies upon <code><link linkend="function-analyze-string">rgx:analyze-string</link></code>.</para><para><emphasis>Option 2 (TAN-fn-regex-standard)</emphasis></para><para><code>rgx:analyze-string($input as xs:string?, $pattern as xs:string, $flags as xs:string) as element()</code></para><programlisting>Input: three strings </programlisting><programlisting>Output: an XML structure that identifies which parts of the first parameter matched 
or failed to match the regular expression, supplied by the send parameter, taking into 
account flags supplied by the third. In the case of matched substrings, indicates 
substrings matched each capturing group in the regular expression. </programlisting><para>Related: <link linkend="tan-function-group-regular_expressions">regular expressions</link>, <link linkend="tan-function-group-strings">strings</link></para><para>Used by function <code><link linkend="function-analyze-string">rgx:analyze-string()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-codepoints-to-string"><title><code>rgx:codepoints-to-string()</code></title><para><emphasis>Option 1 (TAN-fn-regex-standard)</emphasis></para><para><code>rgx:codepoints-to-string($arg as xs:integer*) as xs:string?</code></para><programlisting>one-parameter version of the fuller one below; default XML 1.0 </programlisting><para>Used by function <code><link linkend="function-codepoints-to-string">rgx:codepoints-to-string()</link></code>, <code>rgx:process-regex-escape-u()</code>.</para><para>Relies upon <code><link linkend="function-codepoints-to-string">rgx:codepoints-to-string</link></code>.</para><para><emphasis>Option 2 (TAN-fn-regex-standard)</emphasis></para><para><code>rgx:codepoints-to-string($arg as xs:integer*, $xml-1-0 as xs:boolean) as xs:string?</code></para><programlisting>Input: any number of integers </programlisting><programlisting>Output: the string value representation, but only if the integers represent valid 
characters in XML </programlisting><programlisting>Like <code>fn:codepoints-to-string()</code>, but filters out XML illegal characters </programlisting><para>Related: <link linkend="tan-function-group-regular_expressions">regular expressions</link>, <link linkend="tan-function-group-codepoints">codepoints</link>, <link linkend="tan-function-group-strings">strings</link></para><para>Used by function <code><link linkend="function-codepoints-to-string">rgx:codepoints-to-string()</link></code>, <code>rgx:process-regex-escape-u()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-escape"><title><code>rgx:escape()</code></title><para><emphasis>TAN-fn-regex-standard</emphasis></para><para><code>rgx:escape($strings as xs:string*) as xs:string*</code></para><programlisting>Input: any sequence of strings </programlisting><programlisting>Output: each string prepared for regular expression searches, i.e., with reserved 
characters escaped out. </programlisting><para>Related: <link linkend="tan-function-group-regular_expressions">regular expressions</link>, <link linkend="tan-function-group-strings">strings</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="variable-characters-to-escape-when-converting-string-to-regex">$characters-to-escape-when-converting-string-to-regex</link></code>.</para></section>
<section xml:id="function-matches"><title><code>rgx:matches()</code></title><para><emphasis>Option 1 (TAN-fn-regex-standard)</emphasis></para><para><code>rgx:matches($input as xs:string?, $pattern as xs:string) as xs:boolean</code></para><programlisting>two-param function of the three-param version below </programlisting><para>Used by function <code><link linkend="function-matches">rgx:matches()</link></code>, <code><link linkend="function-regex-is-valid">rgx:regex-is-valid()</link></code>.</para><para>Relies upon <code><link linkend="function-matches">rgx:matches</link></code>.</para><para><emphasis>Option 2 (TAN-fn-regex-standard)</emphasis></para><para><code>rgx:matches($input as xs:string?, $pattern as xs:string, $flags as xs:string) as xs:boolean</code></para><programlisting>Parallel to <code>fn:matches()</code>, but converts \u{} into classes. See <code>rgx:regex()</code> for 
details. </programlisting><programlisting>Input: three strings </programlisting><programlisting>Output: true if the first string matches the regular expression supplied as the 
second, taking account into flags supplied by the third. </programlisting><para>Related: <link linkend="tan-function-group-regular_expressions">regular expressions</link>, <link linkend="tan-function-group-strings">strings</link></para><para>Used by function <code><link linkend="function-matches">rgx:matches()</link></code>, <code><link linkend="function-regex-is-valid">rgx:regex-is-valid()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-regex-is-valid"><title><code>rgx:regex-is-valid()</code></title><para><emphasis>TAN-fn-regex-standard</emphasis></para><para><code>rgx:regex-is-valid($input-regex as xs:string?) as xs:boolean</code></para><programlisting>Input: a string </programlisting><programlisting>Output: true if the string is a valid regular expression, false otherwise </programlisting><para>Related: <link linkend="tan-function-group-regular_expressions">regular expressions</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-matches">rgx:matches</link></code>.</para></section>
<section xml:id="function-replace"><title><code>rgx:replace()</code></title><para><emphasis>Option 1 (TAN-fn-regex-standard)</emphasis></para><para><code>rgx:replace($input as xs:string?, $pattern as xs:string, $replacement as xs:string) as xs:string</code></para><programlisting>three-param function of the four-param version below </programlisting><para>Used by function <code><link linkend="function-replace">rgx:replace()</link></code>.</para><para>Relies upon <code><link linkend="function-replace">rgx:replace</link></code>.</para><para><emphasis>Option 2 (TAN-fn-regex-standard)</emphasis></para><para><code>rgx:replace($input as xs:string?, $pattern as xs:string, $replacement as xs:string, $flags as xs:string) as xs:string</code></para><programlisting>Parallel to <code>fn:replace()</code>, but converts \u{} into classes. See <code>rgx:regex()</code> for 
details. </programlisting><programlisting>Input: four strings </programlisting><programlisting>Output: the xs:string that is obtained by replacing each non-overlapping 
substring of the first parameter given pattern declared by the second with an occurrence of the 
third, taking into account flags supplied by the fourth. </programlisting><para>Related: <link linkend="tan-function-group-regular_expressions">regular expressions</link>, <link linkend="tan-function-group-strings">strings</link></para><para>Used by function <code><link linkend="function-replace">rgx:replace()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-replace-by-char-name"><title><code>rgx:replace-by-char-name()</code></title><para><emphasis>Option 1 (TAN-fn-regex-standard)</emphasis></para><para><code>rgx:replace-by-char-name($string-to-replace as xs:string?, $words-in-name-to-drop as xs:string*, $words-in-replacement-char-name as xs:string*, $words-not-in-replacement-char-name as xs:string*, $search-is-strict as xs:boolean?) as xs:string?</code></para><programlisting>five-parameter version of the full function, below </programlisting><para>Used by function <code><link linkend="function-replace-by-char-name">rgx:replace-by-char-name()</link></code>.</para><para>Relies upon <code><link linkend="function-replace-by-char-name">rgx:replace-by-char-name</link></code>.</para><para><emphasis>Option 2 (TAN-fn-regex-standard)</emphasis></para><para><code>rgx:replace-by-char-name($string-to-replace as xs:string?, $words-in-name-to-drop as xs:string*, $words-in-replacement-char-name as xs:string*, $words-not-in-replacement-char-name as xs:string*, $search-is-strict as xs:boolean?, $version as xs:double) as xs:string?</code></para><programlisting>six-parameter version of the full function, below </programlisting><para>Used by function <code><link linkend="function-replace-by-char-name">rgx:replace-by-char-name()</link></code>.</para><para>Relies upon <code><link linkend="function-replace-by-char-name">rgx:replace-by-char-name</link></code>.</para></section>
<section xml:id="function-string-base"><title><code>rgx:string-base()</code></title><para><emphasis>Option 1 (TAN-fn-regex-standard)</emphasis></para><para><code>rgx:string-base($arg as xs:string?) as xs:string?</code></para><programlisting>one-param version of the fuller one, below </programlisting><para>Used by function <code><link linkend="function-string-base">rgx:string-base()</link></code>, <code>rgx:process-regex-escape-u()</code>.</para><para>Relies upon <code><link linkend="function-string-base">rgx:string-base</link></code>.</para><para><emphasis>Option 2 (TAN-fn-regex-standard)</emphasis></para><para><code>rgx:string-base($arg as xs:string?, $version as xs:double) as xs:string?</code></para><programlisting>Input: a string and a double </programlisting><programlisting>Output: the string, with each character reduced to its base character </programlisting><programlisting>This function takes any string and replaces every character with its base Unicode 
character. This function is useful to prepare a text to be searched without respect to accents. 
E.g., ἄνθρωπός - &gt; ανθρωπος Note, the ς is retained because it doesn't decompose. To match 
on σ one needs to use the flag 'i' (case insensitive) because ς case-folds to σ. This 
function is similar to <code><link linkend="function-string-to-components">rgx:string-to-components()</link></code>, but strictly enforces a one-for-one 
replacement, so that it behaves much like <code>fn:lower-case()</code> and <code>fn:upper-case()</code>, where the string 
length is always preserved. To this end, this function is based on <code>fn:translate()</code>, and uses 
simple decomposition databases, which are much smaller and quicker to use than are full 
decomposition databases. The strict one-for-one replacement observes the following rules: If a 
character decomposes to a single character, that single character is returned. If a character 
decomposes to multiple characters that are identical, that single character is returned, 
e.g., ‴ to ′ If a character decomposes to multiple characters, a distinction is made 
between base and non-base characters: 
- Base characters: 
\p{Lu}\p{Ll}\p{Lt}\p{Lo}\p{N}\p{S} 
- Non-base characters: \p{Lm}\p{M}\p{P}\p{Z}\p{C} If after non-base 
characters are removed there is not exactly one unique decomposed character left, the original 
input is retained. The above rules are already reflected in the contents of the simple 
decomposition database, so do not need to be expressed in this function. For more, see 
ucd/ucd-decomp.xsl. </programlisting><para>Related: <link linkend="tan-function-group-regular_expressions">regular expressions</link>, <link linkend="tan-function-group-strings">strings</link></para><para>Used by function <code><link linkend="function-string-base">rgx:string-base()</link></code>, <code>rgx:process-regex-escape-u()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-string-to-components"><title><code>rgx:string-to-components()</code></title><para><emphasis>Option 1 (TAN-fn-regex-standard)</emphasis></para><para><code>rgx:string-to-components($arg as xs:string?) as xs:string*</code></para><programlisting>one-param version of the fuller one, below </programlisting><para>Used by function <code><link linkend="function-string-to-components">rgx:string-to-components()</link></code>.</para><para>Relies upon <code><link linkend="function-string-to-components">rgx:string-to-components</link></code>.</para><para><emphasis>Option 2 (TAN-fn-regex-standard)</emphasis></para><para><code>rgx:string-to-components($arg as xs:string?, $version as xs:double) as xs:string*</code></para><programlisting>Input: any string; a Unicode version number. </programlisting><programlisting>Output: one string per character in the input; if a character lends itself to 
decomposition, its component parts are returned, otherwise the character itself is returned. </programlisting><programlisting>This function is the inverse of <code><link linkend="function-string-to-composites">rgx:string-to-composites()</link></code>. </programlisting><programlisting>If you wish to have more control over which components are returned (e.g., exclusion 
of combining marks), consider using either <code><link linkend="function-string-base">rgx:string-base()</link></code> or the database 
directly: <code>rgx:get-ucd-decomp-db()</code>. The each rgx:char/rgx:b has <code>@gc</code> with the code for the 
component's general category </programlisting><para>Related: <link linkend="tan-function-group-regular_expressions">regular expressions</link>, <link linkend="tan-function-group-strings">strings</link></para><para>Used by function <code><link linkend="function-string-to-components">rgx:string-to-components()</link></code>.</para><para>Relies upon <code><link linkend="variable-default-ucd-decomp-db">$default-ucd-decomp-db</link></code>.</para></section>
<section xml:id="function-string-to-composites"><title><code>rgx:string-to-composites()</code></title><para><emphasis>Option 1 (TAN-fn-regex-standard)</emphasis></para><para><code>rgx:string-to-composites($arg as xs:string?) as xs:string*</code></para><programlisting>one-parameter version of fuller one, below </programlisting><para>Used by function <code><link linkend="function-string-to-composites">rgx:string-to-composites()</link></code>, <code>rgx:process-regex-escape-u()</code>.</para><para>Relies upon <code><link linkend="function-string-to-composites">rgx:string-to-composites</link></code>.</para><para><emphasis>Option 2 (TAN-fn-regex-standard)</emphasis></para><para><code>rgx:string-to-composites($arg as xs:string?, $version as xs:double) as xs:string*</code></para><programlisting>Input: a string; a version of Unicode (double) </programlisting><programlisting>Output: one string per character in the input; that string consists of the character 
itself followed by all characters that use it as a base </programlisting><programlisting>This function is the inverse of rgx:string-to-components. E.g., 'Max' - &gt; 
'MᴹḾṀṂℳⅯⓂ㎆㎒㎫㎹㎿㏁Ｍ𝐌𝑀𝑴𝓜𝔐𝕄𝕸𝖬𝗠𝘔𝙈𝙼🄼🅋🅪🅫aªàáâãäåāăąǎǟǡǻȁȃȧᵃḁẚạảấầẩẫậắằẳẵặₐ℀℁ⓐ㏂ａ𝐚𝑎𝒂𝒶𝓪𝔞𝕒𝖆𝖺𝗮𝘢𝙖𝚊xˣẋẍₓⅹⅺⅻⓧｘ𝐱𝑥𝒙𝓍𝔁𝔵𝕩𝖝𝗑𝘅𝘹𝙭𝚡' 
This is useful for preparing regex character classes to broaden a search. </programlisting><para>Related: <link linkend="tan-function-group-regular_expressions">regular expressions</link>, <link linkend="tan-function-group-strings">strings</link></para><para>Used by function <code><link linkend="function-string-to-composites">rgx:string-to-composites()</link></code>, <code>rgx:process-regex-escape-u()</code>.</para><para>Relies upon <code><link linkend="variable-default-ucd-decomp-db">$default-ucd-decomp-db</link></code>.</para></section>
<section xml:id="function-tokenize"><title><code>rgx:tokenize()</code></title><para><emphasis>Option 1 (TAN-fn-regex-standard)</emphasis></para><para><code>rgx:tokenize($input as xs:string?, $pattern as xs:string) as xs:string*</code></para><programlisting>two-param function of the three-param version below </programlisting><para>Used by function <code><link linkend="function-tokenize">rgx:tokenize()</link></code>.</para><para>Relies upon <code><link linkend="function-tokenize">rgx:tokenize</link></code>.</para><para><emphasis>Option 2 (TAN-fn-regex-standard)</emphasis></para><para><code>rgx:tokenize($input as xs:string?, $pattern as xs:string, $flags as xs:string) as xs:string*</code></para><programlisting>Parallel to <code>fn:tokenize()</code>, but converts \u{} into classes. See <code>rgx:regex()</code> for 
details. </programlisting><programlisting>Input: three strings </programlisting><programlisting>Output: the first string cut into a sequence of strings, with any substring that 
matches the second parameter treated as a separator, not returned, taking account into 
flags supplied by the third. </programlisting><para>Related: <link linkend="tan-function-group-regular_expressions">regular expressions</link>, <link linkend="tan-function-group-strings">strings</link></para><para>Used by function <code><link linkend="function-tokenize">rgx:tokenize()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
</section>
</section>
<section xml:id="vkft-setup"><title>Setup</title><section><title>Variables</title><section xml:id="variable-all-head-iris"><title><code>$tan:all-head-iris</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code><link linkend="variable-head">$tan:head</link>/(* except (tan:inclusion | tan:vocabulary | tan:tan-vocabulary))//tan:IRI[not(ancestor::tan:error)]</code></para><para>Used by variable <code><link linkend="variable-duplicate-head-iris">$tan:duplicate-head-iris</link></code>.</para><para>Relies upon <code><link linkend="variable-head">$tan:head</link></code>.</para></section>
<section xml:id="variable-all-selector"><title><code>$tan:all-selector</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>'*'</code></para><para>Used by template <code><link linkend="template-dependency-adjustments-pass-2">ŧ tan:dependency-adjustments-pass-2</link></code>, <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code> tan:dependency-adjustments-pass-1.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-all-vocabularies"><title><code>$tan:all-vocabularies</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>(<link linkend="variable-vocabularies-resolved">$tan:vocabularies-resolved</link>, <link linkend="variable-TAN-vocabularies">$tan:TAN-vocabularies</link>)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Relies upon <code><link linkend="variable-TAN-vocabularies">$tan:TAN-vocabularies</link></code>, <code><link linkend="variable-vocabularies-resolved">$tan:vocabularies-resolved</link></code>.</para></section>
<section xml:id="variable-annotations-1st-da"><title><code>$tan:annotations-1st-da</code></title><para><emphasis>TAN-variables-extended</emphasis></para><para>Definition: <code><link linkend="function-get-1st-doc">tan:get-1st-doc</link><link linkend="variable-head">$tan:head</link>/tan:annotation)</code></para><para>Used by variable <code><link linkend="variable-annotations-resolved">$tan:annotations-resolved</link></code>.</para><para>Relies upon <code><link linkend="variable-head">$tan:head</link></code>, <code><link linkend="function-get-1st-doc">tan:get-1st-doc</link></code>.</para></section>
<section xml:id="variable-annotations-resolved"><title><code>$tan:annotations-resolved</code></title><para><emphasis>TAN-variables-extended</emphasis></para><para>Definition: <code><link linkend="function-resolve-doc">tan:resolve-doc</link><link linkend="variable-annotations-1st-da">$tan:annotations-1st-da</link>, false(), <link linkend="function-attr">tan:attr</link>'relationship', 'annotation'))</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Relies upon <code><link linkend="variable-annotations-1st-da">$tan:annotations-1st-da</link></code>, <code><link linkend="function-attr">tan:attr</link></code>, <code><link linkend="function-resolve-doc">tan:resolve-doc</link></code>.</para></section>
<section xml:id="variable-apos"><title><code>$tan:apos</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>'</code></para><para>Used by function <code>tan:errors-checked-where()</code>, <code>tan:variables-checked-where()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-applications-collection"><title><code>$tan:applications-collection</code></title><para><emphasis>TAN-variables-extended</emphasis></para><para>This variable has a complex definition. See
                                                   stylesheet for definiton.</para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Relies upon <code><link linkend="variable-applications-uri-collection">$tan:applications-uri-collection</link></code>.</para></section>
<section xml:id="variable-applications-uri-collection"><title><code>$tan:applications-uri-collection</code></title><para><emphasis>TAN-variables-extended</emphasis></para><para>Definition: <code>uri-collection('../applications/catalog.xml?on-error=ignore')</code></para><para>Used by variable <code><link linkend="variable-applications-collection">$tan:applications-collection</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-attr-n-regex"><title><code>$tan:attr-n-regex</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>'^[\w/_]+([\- ,;]+[\w/_]+)*$'</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-base26-key"><title><code>$tan:base26-key</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z')</code></para><para>Used by variable <code><link linkend="variable-base64-key">$tan:base64-key</link></code>.</para><para>Used by function <code><link linkend="function-dec-to-n">tan:dec-to-n()</link></code>, <code><link linkend="function-n-to-dec">tan:n-to-dec()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-base64-key"><title><code>$tan:base64-key</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>(<link linkend="variable-base26-key">$tan:base26-key</link>, 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '/')</code></para><para>Used by function <code><link linkend="function-dec-to-n">tan:dec-to-n()</link></code>, <code><link linkend="function-n-to-dec">tan:n-to-dec()</link></code>.</para><para>Relies upon <code><link linkend="variable-base26-key">$tan:base26-key</link></code>.</para></section>
<section xml:id="variable-body"><title><code>$tan:body</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>          if (<link linkend="variable-doc-namespace">$tan:doc-namespace</link> = <link linkend="variable-TAN-namespace">$tan:TAN-namespace</link>) then             <link linkend="variable-self-resolved">$tan:self-resolved</link>/*/(tan:body, tei:text/tei:body)          else             //*:body</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Relies upon <code><link linkend="variable-TAN-namespace">$tan:TAN-namespace</link></code>, <code><link linkend="variable-doc-namespace">$tan:doc-namespace</link></code>, <code><link linkend="variable-self-resolved">$tan:self-resolved</link></code>.</para></section>
<section xml:id="variable-break-marker-regex"><title><code>$tan:break-marker-regex</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>[\|‖&#x2028; ⁣￺]</code></para><para>Used by template <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code> tan:dependency-adjustments-pass-1.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-char-regex"><title><code>$tan:char-regex</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>\P{M}\p{M}*</code></para><para>Used by template <code><link linkend="template-class-1-expansion-verbose-pass-3">ŧ tan:class-1-expansion-verbose-pass-3</link></code>.</para><para>Used by function <code><link linkend="function-chop-diff-output">tan:chop-diff-output()</link></code>, <code><link linkend="function-chop-string">tan:chop-string()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-datatypes-that-require-unit-specification"><title><code>$tan:datatypes-that-require-unit-specification</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>('decimal', 'float', 'double', 'integer', 'nonPositiveInteger', 'negativeInteger', 'long', 'nonNegativeInteger', 'positiveInteger')</code></para><para>Used by template <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-dhy"><title><code>$tan:dhy</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>­</code></para><para>Used by variable <code><link linkend="variable-shy">$tan:shy</link></code>, <code><link linkend="variable-special-end-div-chars">$tan:special-end-div-chars</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-doc-catalog-uris"><title><code>$tan:doc-catalog-uris</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code><link linkend="function-catalog-uris">tan:catalog-uris</link>/)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Relies upon <code><link linkend="function-catalog-uris">tan:catalog-uris</link></code>.</para></section>
<section xml:id="variable-doc-catalogs"><title><code>$tan:doc-catalogs</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code><link linkend="function-catalogs">tan:catalogs</link>/, $tan:default-validation-phase eq 'verbose')</code></para><para>Used by variable <code><link linkend="variable-local-catalog">$tan:local-catalog</link></code>.</para><para>Relies upon <code><link linkend="function-catalogs">tan:catalogs</link></code>.</para></section>
<section xml:id="variable-doc-class"><title><code>$tan:doc-class</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>tan:class-number(<link linkend="variable-self-resolved">$tan:self-resolved</link>)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Relies upon <code><link linkend="variable-self-resolved">$tan:self-resolved</link></code>.</para></section>
<section xml:id="variable-doc-filename"><title><code>$tan:doc-filename</code></title><para><emphasis>TAN-variables-extended</emphasis></para><para>Definition: <code><link linkend="function-cfne">tan:cfne</link>/)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Relies upon <code><link linkend="function-cfne">tan:cfne</link></code>.</para></section>
<section xml:id="variable-doc-history"><title><code>$tan:doc-history</code></title><para><emphasis>TAN-variables-extended</emphasis></para><para>Definition: <code><link linkend="function-get-doc-history">tan:get-doc-history</link>/)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Relies upon <code><link linkend="function-get-doc-history">tan:get-doc-history</link></code>.</para></section>
<section xml:id="variable-doc-id"><title><code>$tan:doc-id</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>/*/<link linkend="attribute-id">@id</link></code></para><para>Used by variable <code><link linkend="variable-doc-is-error-test">$tan:doc-is-error-test</link></code>.</para><para>Used by template <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code> tan:dependency-adjustments-pass-1, <code><link linkend="template-check-referred-doc">ŧ tan:check-referred-doc</link></code>, <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>, <code><link linkend="template-class-1-expansion-verbose-pass-1">ŧ tan:class-1-expansion-verbose-pass-1</link></code>.</para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-doc-id-namespace"><title><code>$tan:doc-id-namespace</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>tan:doc-id-namespace(<link linkend="variable-self-resolved">$tan:self-resolved</link>)</code></para><para>Used by template <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>.</para><para>Relies upon <code><link linkend="variable-self-resolved">$tan:self-resolved</link></code>.</para></section>
<section xml:id="variable-doc-is-error-test"><title><code>$tan:doc-is-error-test</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>matches(<link linkend="variable-doc-id">$tan:doc-id</link>, '^tag:textalign.net,\d+:error-test')</code></para><para>Used by template <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>.</para><para>Relies upon <code><link linkend="variable-doc-id">$tan:doc-id</link></code>.</para></section>
<section xml:id="variable-doc-namespace"><title><code>$tan:doc-namespace</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>namespace-uri(/*)</code></para><para>Used by variable <code><link linkend="variable-body">$tan:body</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-doc-parent-directory"><title><code>$tan:doc-parent-directory</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code><link linkend="function-uri-directory">tan:uri-directory</link>string(<link linkend="variable-doc-uri">$tan:doc-uri</link>))</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Relies upon <code><link linkend="variable-doc-uri">$tan:doc-uri</link></code>, <code><link linkend="function-uri-directory">tan:uri-directory</link></code>.</para></section>
<section xml:id="variable-doc-type"><title><code>$tan:doc-type</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>local-name(/*)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-doc-uri"><title><code>$tan:doc-uri</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>base-uri(/*)</code></para><para>Used by variable <code><link linkend="variable-local-TAN-collection">$tan:local-TAN-collection</link></code>, <code><link linkend="variable-doc-parent-directory">$tan:doc-parent-directory</link></code>.</para><para>Used by template <code><link linkend="template-core-expansion-terse-attributes-to-elements">ŧ tan:core-expansion-terse-attributes-to-elements</link></code>, <code><link linkend="template-core-expansion-normal">ŧ tan:core-expansion-normal</link></code>, <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>.</para><para>Used by function <code><link linkend="function-update-TAN-change-log">tan:update-TAN-change-log()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-doc-vocabulary"><title><code>$tan:doc-vocabulary</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code><link linkend="function-vocabulary">tan:vocabulary</link>(), (), (<link linkend="variable-head">$tan:head</link>, <link linkend="variable-self-resolved">$tan:self-resolved</link>/(tan:TAN-A, tan:TAN-voc)/tan:body))</code></para><para>Used by function <code><link linkend="function-vocabulary">tan:vocabulary()</link></code>.</para><para>Relies upon <code><link linkend="variable-head">$tan:head</link></code>, <code><link linkend="variable-self-resolved">$tan:self-resolved</link></code>, <code><link linkend="function-vocabulary">tan:vocabulary</link></code>.</para></section>
<section xml:id="variable-duplicate-head-iris"><title><code>$tan:duplicate-head-iris</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code><link linkend="function-duplicate-items">tan:duplicate-items</link><link linkend="variable-all-head-iris">$tan:all-head-iris</link>)</code></para><para>Used by template <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>, <code><link linkend="template-check-referred-doc">ŧ tan:check-referred-doc</link></code>.</para><para>Relies upon <code><link linkend="variable-all-head-iris">$tan:all-head-iris</link></code>, <code><link linkend="function-duplicate-items">tan:duplicate-items</link></code>.</para></section>
<section xml:id="variable-elements-supported-by-TAN-vocabulary-files"><title><code>$tan:elements-supported-by-TAN-vocabulary-files</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>       ('bitext-relation', 'div-type', 'feature', 'group-type', 'license', 'modal', 'normalization',       'reuse-type', 'role', 'token-definition', 'verb', 'vocabulary')</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-empty-doc"><title><code>$tan:empty-doc</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>This variable has a complex definition. See
                                                   stylesheet for definiton.</para><para>Used by template <code><link linkend="template-get-and-resolve-dependency">ŧ tan:get-and-resolve-dependency</link></code>, <code><link linkend="template-check-referred-doc">ŧ tan:check-referred-doc</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-empty-element"><title><code>$tan:empty-element</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>This variable has a complex definition. See
                                                   stylesheet for definiton.</para><para>Used by template <code><link linkend="template-dependency-adjustments-pass-1">ŧ tan:dependency-adjustments-pass-1</link></code>, <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>, <code><link linkend="template-check-referred-doc">ŧ tan:check-referred-doc</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-erroneously-looped-doc"><title><code>$tan:erroneously-looped-doc</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>This variable has a complex definition. See
                                                   stylesheet for definiton.</para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-error-key"><title><code>$tan:error-key</code></title><para><emphasis>TAN-variables-extended</emphasis></para><para>This variable has a complex definition. See
                                                   stylesheet for definiton.</para><programlisting>This error key pertains NOT to validation errors when evaluating TAN files' 
structures, but to the behavior of TAN functions, mainly when input is not what is expected. </programlisting><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Relies upon <code><link linkend="variable-binary-error-key">$tan:binary-error-key</link></code>, <code><link linkend="variable-hash-error-key">$tan:hash-error-key</link></code>, <code><link linkend="variable-numeric-conversion-error-key">$tan:numeric-conversion-error-key</link></code>, <code><link linkend="variable-octet-error-key">$tan:octet-error-key</link></code>.</para></section>
<section xml:id="variable-extra-vocabulary-files"><title><code>$tan:extra-vocabulary-files</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>          for $i in <link linkend="variable-TAN-vocabularies-vocabulary">$tan:TAN-vocabularies-vocabulary</link>/tan:TAN-voc/tan:body/tan:item[tan:location]          return             <link linkend="function-get-1st-doc">tan:get-1st-doc</link>$i)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Relies upon <code><link linkend="variable-TAN-vocabularies-vocabulary">$tan:TAN-vocabularies-vocabulary</link></code>, <code><link linkend="function-get-1st-doc">tan:get-1st-doc</link></code>.</para></section>
<section xml:id="variable-head"><title><code>$tan:head</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>          if (exists(/*/tan:head)) then             <link linkend="variable-self-resolved">$tan:self-resolved</link>/*/tan:head          else             /*/*:head</code></para><para>Used by variable <code><link linkend="variable-annotations-1st-da">$tan:annotations-1st-da</link></code>, <code><link linkend="variable-see-alsos-1st-da">$tan:see-alsos-1st-da</link></code>, <code><link linkend="variable-predecessors-1st-da">$tan:predecessors-1st-da</link></code>, <code><link linkend="variable-successors-1st-da">$tan:successors-1st-da</link></code>, <code><link linkend="variable-source-ids">$tan:source-ids</link></code>, <code><link linkend="variable-all-head-iris">$tan:all-head-iris</link></code>, <code><link linkend="variable-primary-agents">$tan:primary-agents</link></code>, <code><link linkend="variable-vocabularies-resolved">$tan:vocabularies-resolved</link></code>, <code><link linkend="variable-doc-vocabulary">$tan:doc-vocabulary</link></code>, <code><link linkend="variable-redivisions-1st-da">$tan:redivisions-1st-da</link></code>, <code><link linkend="variable-model-1st-da">$tan:model-1st-da</link></code>, <code><link linkend="variable-sources-resolved">$tan:sources-resolved</link></code>, <code><link linkend="variable-morphologies-resolved">$tan:morphologies-resolved</link></code>, <code><link linkend="variable-src-ids">$tan:src-ids</link></code>.</para><para>Relies upon <code><link linkend="variable-self-resolved">$tan:self-resolved</link></code>.</para></section>
<section xml:id="variable-hex-key"><title><code>$tan:hex-key</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>('0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F')</code></para><para>Used by function <code><link linkend="function-dec-to-n">tan:dec-to-n()</link></code>, <code><link linkend="function-n-to-dec">tan:n-to-dec()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-id-idrefs"><title><code>$tan:id-idrefs</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>doc('TAN-idrefs.xml')</code></para><para>Used by variable <code><link linkend="variable-names-of-attributes-that-take-idrefs">$tan:names-of-attributes-that-take-idrefs</link></code>, <code><link linkend="variable-names-of-elements-that-take-idrefs">$tan:names-of-elements-that-take-idrefs</link></code>, <code><link linkend="variable-names-of-elements-targeted-by-subjects">$tan:names-of-elements-targeted-by-subjects</link></code>, <code><link linkend="variable-names-of-elements-targeted-by-objects">$tan:names-of-elements-targeted-by-objects</link></code>.</para><para>Used by function <code>tan:target-element-names()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-inclusions-resolved"><title><code>$tan:inclusions-resolved</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>tan:get-and-resolve-dependency(/*/tan:head/tan:inclusion)</code></para><para>Used by template <code><link linkend="template-check-referred-doc">ŧ tan:check-referred-doc</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-internet-available"><title><code>$tan:internet-available</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>This variable has a complex definition. See
                                                   stylesheet for definiton.</para><para>Used by template <code><link linkend="template-cut-faulty-hrefs">ŧ tan:cut-faulty-hrefs</link></code>, <code><link linkend="template-core-expansion-terse-attributes-to-elements">ŧ tan:core-expansion-terse-attributes-to-elements</link></code>, <code><link linkend="template-check-referred-doc">ŧ tan:check-referred-doc</link></code>.</para><para>Used by function <code><link linkend="function-search-for-entities">tan:search-for-entities()</link></code>, <code><link linkend="function-first-loc-available">tan:first-loc-available()</link></code>, <code><link linkend="function-get-1st-doc">tan:get-1st-doc()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-iso-639-3"><title><code>$tan:iso-639-3</code></title><para><emphasis>TAN-variables-extended</emphasis></para><para>Definition: <code>doc('../language/iso-639-3.xml')</code></para><para>Used by function <code><link linkend="function-lang-code">tan:lang-code()</link></code>, <code><link linkend="function-lang-name">tan:lang-name()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-local-catalog"><title><code>$tan:local-catalog</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code><link linkend="variable-doc-catalogs">$tan:doc-catalogs</link>[1]</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Relies upon <code><link linkend="variable-doc-catalogs">$tan:doc-catalogs</link></code>.</para></section>
<section xml:id="variable-local-TAN-collection"><title><code>$tan:local-TAN-collection</code></title><para><emphasis>TAN-variables-extended</emphasis></para><para>Definition: <code>collection(resolve-uri('catalog.tan.xml' || <link linkend="variable-doc-uri">$tan:doc-uri</link>) || '?on-error=warning')</code></para><para>Used by variable <code><link linkend="variable-local-TAN-voc-collection">$tan:local-TAN-voc-collection</link></code>.</para><para>Relies upon <code><link linkend="variable-doc-uri">$tan:doc-uri</link></code>.</para></section>
<section xml:id="variable-local-TAN-voc-collection"><title><code>$tan:local-TAN-voc-collection</code></title><para><emphasis>TAN-variables-extended</emphasis></para><para>Definition: <code><link linkend="variable-local-TAN-collection">$tan:local-TAN-collection</link>[name(*) = 'TAN-voc']</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Relies upon <code><link linkend="variable-local-TAN-collection">$tan:local-TAN-collection</link></code>.</para></section>
<section xml:id="variable-model-1st-da"><title><code>$tan:model-1st-da</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code><link linkend="function-get-1st-doc">tan:get-1st-doc</link><link linkend="variable-head">$tan:head</link>/tan:model[1])</code></para><para>Used by variable <code><link linkend="variable-model-resolved">$tan:model-resolved</link></code>.</para><para>Relies upon <code><link linkend="variable-head">$tan:head</link></code>, <code><link linkend="function-get-1st-doc">tan:get-1st-doc</link></code>.</para></section>
<section xml:id="variable-model-resolved"><title><code>$tan:model-resolved</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code><link linkend="function-resolve-doc">tan:resolve-doc</link><link linkend="variable-model-1st-da">$tan:model-1st-da</link>, false(), <link linkend="function-attr">tan:attr</link>'relationship', 'model'))</code></para><para>Used by template <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>, <code><link linkend="template-class-1-expansion-verbose-pass-1">ŧ tan:class-1-expansion-verbose-pass-1</link></code>.</para><para>Relies upon <code><link linkend="variable-model-1st-da">$tan:model-1st-da</link></code>, <code><link linkend="function-attr">tan:attr</link></code>, <code><link linkend="function-resolve-doc">tan:resolve-doc</link></code>.</para></section>
<section xml:id="variable-morphologies-expanded"><title><code>$tan:morphologies-expanded</code></title><para><emphasis>TAN-variables-extended</emphasis></para><para>Definition: <code><link linkend="function-expand-doc">tan:expand-doc</link><link linkend="variable-morphologies-resolved">$tan:morphologies-resolved</link>, 'terse', false())</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Relies upon <code><link linkend="variable-morphologies-resolved">$tan:morphologies-resolved</link></code>, <code><link linkend="function-expand-doc">tan:expand-doc</link></code>.</para></section>
<section xml:id="variable-morphologies-resolved"><title><code>$tan:morphologies-resolved</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>          for $i in <link linkend="variable-head">$tan:head</link>/tan:vocabulary-key/tan:morphology          return             <link linkend="function-resolve-doc">tan:resolve-doc</link><link linkend="function-get-1st-doc">tan:get-1st-doc</link>$i), true(), <link linkend="function-attr">tan:attr</link>'morphology', ($i/<link linkend="attribute-xmlid">@xml:id</link>, '1')[1]))</code></para><para>Used by variable <code><link linkend="variable-morphologies-expanded">$tan:morphologies-expanded</link></code>.</para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>.</para><para>Relies upon <code><link linkend="variable-head">$tan:head</link></code>, <code><link linkend="function-attr">tan:attr</link></code>, <code><link linkend="function-get-1st-doc">tan:get-1st-doc</link></code>, <code><link linkend="function-resolve-doc">tan:resolve-doc</link></code>.</para></section>
<section xml:id="variable-most-common-indentations"><title><code>$tan:most-common-indentations</code></title><para><emphasis>TAN-variables-extended</emphasis></para><para>This variable has a complex definition. See
                                                   stylesheet for definiton.</para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Relies upon <code><link linkend="function-most-common-item">tan:most-common-item</link></code>.</para></section>
<section xml:id="variable-names-of-attributes-that-are-case-indifferent"><title><code>$tan:names-of-attributes-that-are-case-indifferent</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>('n', 'ref', 'affects-element', 'affects-attribute', 'item-type', 'in-lang')</code></para><para>Used by template <code><link linkend="template-core-expansion-terse-attributes-to-elements">ŧ tan:core-expansion-terse-attributes-to-elements</link></code>.</para><para>Used by function <code>tan:normalize-sequence()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-names-of-attributes-that-may-take-multiple-space-delimited-values"><title><code>$tan:names-of-attributes-that-may-take-multiple-space-delimited-values</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code><link linkend="variable-names-of-attributes-that-take-idrefs">$tan:names-of-attributes-that-take-idrefs</link>, ('affects-element', 'affects-attribute', 'item-type')</code></para><para>Used by template <code><link linkend="template-core-expansion-terse-attributes-to-elements">ŧ tan:core-expansion-terse-attributes-to-elements</link></code>.</para><para>Used by function <code>tan:normalize-sequence()</code>.</para><para>Relies upon <code><link linkend="variable-names-of-attributes-that-take-idrefs">$tan:names-of-attributes-that-take-idrefs</link></code>.</para></section>
<section xml:id="variable-names-of-attributes-that-permit-keyword-last"><title><code>$tan:names-of-attributes-that-permit-keyword-last</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>('pos', 'chars', 'm-has-how-many-features')</code></para><para>Used by function <code>tan:normalize-sequence()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-names-of-attributes-that-take-idrefs"><title><code>$tan:names-of-attributes-that-take-idrefs</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code><link linkend="variable-id-idrefs">$tan:id-idrefs</link>/tan:id-idrefs/tan:id/tan:idrefs/@attribute</code></para><para>Used by variable <code><link linkend="variable-names-of-attributes-that-may-take-multiple-space-delimited-values">$tan:names-of-attributes-that-may-take-multiple-space-delimited-values</link></code>.</para><para>Used by template <code><link linkend="template-core-expansion-terse-attributes">ŧ tan:core-expansion-terse-attributes</link></code>.</para><para>Used by function <code>tan:resolve-doc-loop()</code>.</para><para>Relies upon <code><link linkend="variable-id-idrefs">$tan:id-idrefs</link></code>.</para></section>
<section xml:id="variable-names-of-elements-targeted-by-objects"><title><code>$tan:names-of-elements-targeted-by-objects</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code><link linkend="variable-id-idrefs">$tan:id-idrefs</link>/tan:id-idrefs/tan:id[tan:idrefs[@attribute = 'object']]/tan:element</code></para><para>Used by template <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>.</para><para>Relies upon <code><link linkend="variable-id-idrefs">$tan:id-idrefs</link></code>.</para></section>
<section xml:id="variable-names-of-elements-targeted-by-subjects"><title><code>$tan:names-of-elements-targeted-by-subjects</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code><link linkend="variable-id-idrefs">$tan:id-idrefs</link>/tan:id-idrefs/tan:id[tan:idrefs[@attribute = 'subject']]/tan:element</code></para><para>Used by template <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>.</para><para>Relies upon <code><link linkend="variable-id-idrefs">$tan:id-idrefs</link></code>.</para></section>
<section xml:id="variable-names-of-elements-that-describe-text-bearers"><title><code>$tan:names-of-elements-that-describe-text-bearers</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>('scriptum', 'work', 'version', 'source')</code></para><para>Used by variable <code><link linkend="variable-names-of-elements-that-describe-textual-entities">$tan:names-of-elements-that-describe-textual-entities</link></code>.</para><para>Used by template <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-names-of-elements-that-describe-text-creators"><title><code>$tan:names-of-elements-that-describe-text-creators</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>('person', 'organization')</code></para><para>Used by variable <code><link linkend="variable-names-of-elements-that-describe-textual-entities">$tan:names-of-elements-that-describe-textual-entities</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-names-of-elements-that-describe-textual-entities"><title><code>$tan:names-of-elements-that-describe-textual-entities</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code><link linkend="variable-names-of-elements-that-describe-text-creators">$tan:names-of-elements-that-describe-text-creators</link>, <link linkend="variable-names-of-elements-that-describe-text-bearers">$tan:names-of-elements-that-describe-text-bearers</link></code></para><para>Used by template <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>.</para><para>Relies upon <code><link linkend="variable-names-of-elements-that-describe-text-bearers">$tan:names-of-elements-that-describe-text-bearers</link></code>, <code><link linkend="variable-names-of-elements-that-describe-text-creators">$tan:names-of-elements-that-describe-text-creators</link></code>.</para></section>
<section xml:id="variable-names-of-elements-that-make-adjustments"><title><code>$tan:names-of-elements-that-make-adjustments</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>('skip', 'rename', 'equate', 'reassign')</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-names-of-elements-that-must-always-refer-to-tan-files"><title><code>$tan:names-of-elements-that-must-always-refer-to-tan-files</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>('morphology', 'inclusion', 'vocabulary', 'redivision', 'model', 'successor', 'annotation')</code></para><para>Used by function <code>tan:must-refer-to-external-tan-file()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-names-of-elements-that-take-idrefs"><title><code>$tan:names-of-elements-that-take-idrefs</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code><link linkend="variable-id-idrefs">$tan:id-idrefs</link>/tan:id-idrefs/tan:id/tan:idrefs/@element</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Relies upon <code><link linkend="variable-id-idrefs">$tan:id-idrefs</link></code>.</para></section>
<section xml:id="variable-names-of-elements-that-take-which"><title><code>$tan:names-of-elements-that-take-which</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>('object', 'unit', 'lexicon', 'license', 'see-also', 'work', 'role', 'source', 'group-type', 'morphology', 'source', 'work', 'verb', 'scriptum', 'relationship', 'person', 'period', 'organization', 'div-type', 'algorithm', 'vocabulary', 'successor', 'source', 'predecessor', 'inclusion', 'companion-version', 'token-definition', 'bitext-relation', 'checksum', 'redivision', 'model', 'annotation', 'version', 'normalization', 'item', 'feature', 'version', 'reuse-type', 'topic', 'place', 'modal', 'subject', 'at-ref')</code></para><para>Used by template <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-namespaces-and-prefixes"><title><code>$tan:namespaces-and-prefixes</code></title><para><emphasis>TAN-variables-extended</emphasis></para><para>This variable has a complex definition. See
                                                   stylesheet for definiton.</para><para>Used by template <code><link linkend="template-tree-to-html">ŧ tan:tree-to-html</link></code>.</para><para>Used by function <code><link linkend="function-namespace">tan:namespace()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-now"><title><code>$tan:now</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>tan:dateTime-to-decimal(current-dateTime())</code></para><para>Used by template <code><link linkend="template-core-expansion-terse-attributes-to-elements">ŧ tan:core-expansion-terse-attributes-to-elements</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-official-urn-namespaces"><title><code>$tan:official-urn-namespaces</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>('3gpp', '3gpp2', 'adid', 'alert', 'bbf', 'broadband-forum-org', 'cablelabs', 'ccsds', 'cgi', 'clei', 'ddi', 'dev',        'dgiwg', 'dslforum-org', 'dvb', 'ebu', 'eidr', 'epc', 'epcglobal', 'etsi', 'eurosystem', 'example', 'fdc', 'fipa', 'geant',        'globus', 'gsma', 'hbbtv', 'ieee', 'ietf', 'iptc', 'isan', 'isbn', 'iso', 'issn', 'itu', 'ivis', 'liberty', 'mace', 'mef',        'mpeg', 'mrn', 'nato', 'nbn', 'nena', 'newsml', 'nfc', 'nzl', 'oasis', 'ogc', 'ogf', 'oid', 'oipf', 'oma', 'onf', 'pin',        'publicid', 'reso', 's1000d', 'schac', 'service', 'smpte', 'swift', 'tva', 'uci', 'ucode', 'uuid', 'web3d', 'xmlorg', 'xmpp',        'urn-1', 'urn-2', 'urn-3', 'urn-4', 'urn-5', 'urn-6', 'urn-7')</code></para><para>Used by template <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-orig-self"><title><code>$tan:orig-self</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>/</code></para><para>Used by template <code><link linkend="template-core-expansion-normal">ŧ tan:core-expansion-normal</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-predecessors-1st-da"><title><code>$tan:predecessors-1st-da</code></title><para><emphasis>TAN-variables-extended</emphasis></para><para>Definition: <code><link linkend="function-get-1st-doc">tan:get-1st-doc</link><link linkend="variable-head">$tan:head</link>/tan:predecessor)</code></para><para>Used by variable <code><link linkend="variable-predecessors-resolved">$tan:predecessors-resolved</link></code>.</para><para>Relies upon <code><link linkend="variable-head">$tan:head</link></code>, <code><link linkend="function-get-1st-doc">tan:get-1st-doc</link></code>.</para></section>
<section xml:id="variable-predecessors-resolved"><title><code>$tan:predecessors-resolved</code></title><para><emphasis>TAN-variables-extended</emphasis></para><para>Definition: <code><link linkend="function-resolve-doc">tan:resolve-doc</link><link linkend="variable-predecessors-1st-da">$tan:predecessors-1st-da</link>, false(), <link linkend="function-attr">tan:attr</link>'relationship', 'predecessor'))</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Relies upon <code><link linkend="variable-predecessors-1st-da">$tan:predecessors-1st-da</link></code>, <code><link linkend="function-attr">tan:attr</link></code>, <code><link linkend="function-resolve-doc">tan:resolve-doc</link></code>.</para></section>
<section xml:id="variable-previous-TAN-versions"><title><code>$tan:previous-TAN-versions</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>('1 dev', '2018', '2020')</code></para><para>Used by template <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code> tan:dependency-adjustments-pass-1.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-primary-agents"><title><code>$tan:primary-agents</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code><link linkend="variable-head">$tan:head</link>/tan:file-resp</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Relies upon <code><link linkend="variable-head">$tan:head</link></code>.</para></section>
<section xml:id="variable-quot"><title><code>$tan:quot</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>"</code></para><para>Used by function <code>tan:errors-checked-where()</code>, <code>tan:variables-checked-where()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-redivisions-1st-da"><title><code>$tan:redivisions-1st-da</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code><link linkend="function-get-1st-doc">tan:get-1st-doc</link><link linkend="variable-head">$tan:head</link>/tan:redivision)</code></para><para>Used by variable <code><link linkend="variable-redivisions-resolved">$tan:redivisions-resolved</link></code>.</para><para>Relies upon <code><link linkend="variable-head">$tan:head</link></code>, <code><link linkend="function-get-1st-doc">tan:get-1st-doc</link></code>.</para></section>
<section xml:id="variable-redivisions-resolved"><title><code>$tan:redivisions-resolved</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>          for $i in <link linkend="variable-redivisions-1st-da">$tan:redivisions-1st-da</link>          return             <link linkend="function-resolve-doc">tan:resolve-doc</link>$i, false(), <link linkend="function-attr">tan:attr</link>'relationship', 'redivision'))</code></para><para>Used by template <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>, <code><link linkend="template-class-1-expansion-verbose-pass-1">ŧ tan:class-1-expansion-verbose-pass-1</link></code>.</para><para>Relies upon <code><link linkend="variable-redivisions-1st-da">$tan:redivisions-1st-da</link></code>, <code><link linkend="function-attr">tan:attr</link></code>, <code><link linkend="function-resolve-doc">tan:resolve-doc</link></code>.</para></section>
<section xml:id="variable-regex-characters-not-permitted"><title><code>$tan:regex-characters-not-permitted</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>[  - ]</code></para><para>Used by template <code><link linkend="template-core-expansion-normal">ŧ tan:core-expansion-normal</link></code>.</para><para>Used by function <code><link linkend="function-normalize-text">tan:normalize-text()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-regex-name-space-characters"><title><code>$tan:regex-name-space-characters</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>[_-]</code></para><para>Used by function <code><link linkend="function-normalize-text">tan:normalize-text()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-see-alsos-1st-da"><title><code>$tan:see-alsos-1st-da</code></title><para><emphasis>TAN-variables-extended</emphasis></para><para>Definition: <code><link linkend="function-get-1st-doc">tan:get-1st-doc</link><link linkend="variable-head">$tan:head</link>/tan:see-also)</code></para><para>Used by variable <code><link linkend="variable-see-alsos-resolved">$tan:see-alsos-resolved</link></code>.</para><para>Relies upon <code><link linkend="variable-head">$tan:head</link></code>, <code><link linkend="function-get-1st-doc">tan:get-1st-doc</link></code>.</para></section>
<section xml:id="variable-see-alsos-resolved"><title><code>$tan:see-alsos-resolved</code></title><para><emphasis>TAN-variables-extended</emphasis></para><para>Definition: <code><link linkend="function-resolve-doc">tan:resolve-doc</link><link linkend="variable-see-alsos-1st-da">$tan:see-alsos-1st-da</link>, false(), <link linkend="function-attr">tan:attr</link>'relationship', 'see-also'))</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Relies upon <code><link linkend="variable-see-alsos-1st-da">$tan:see-alsos-1st-da</link></code>, <code><link linkend="function-attr">tan:attr</link></code>, <code><link linkend="function-resolve-doc">tan:resolve-doc</link></code>.</para></section>
<section xml:id="variable-self-expanded"><title><code>$tan:self-expanded</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code><link linkend="function-expand-doc">tan:expand-doc</link><link linkend="variable-self-resolved">$tan:self-resolved</link>)</code></para><para>Used by variable <code><link linkend="variable-self-expanded-vocabulary">$tan:self-expanded-vocabulary</link></code>.</para><para>Used by template <code><link linkend="template-imitate-validation">ŧ tan:imitate-validation</link></code>.</para><para>Relies upon <code><link linkend="variable-self-resolved">$tan:self-resolved</link></code>, <code><link linkend="function-expand-doc">tan:expand-doc</link></code>.</para></section>
<section xml:id="variable-self-expanded-vocabulary"><title><code>$tan:self-expanded-vocabulary</code></title><para><emphasis>TAN-variables-extended</emphasis></para><para>Definition: <code><link linkend="function-vocabulary">tan:vocabulary</link>(), (), (<link linkend="variable-self-expanded">$tan:self-expanded</link>/(*/tan:head | (tan:TAN-A | tan:TAN-voc)/tan:body)))</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Relies upon <code><link linkend="variable-self-expanded">$tan:self-expanded</link></code>, <code><link linkend="function-vocabulary">tan:vocabulary</link></code>.</para></section>
<section xml:id="variable-self-resolved"><title><code>$tan:self-resolved</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code><link linkend="function-resolve-doc">tan:resolve-doc</link>/)</code></para><para>Used by variable <code><link linkend="variable-self-resolved-plus">$tan:self-resolved-plus</link></code>, <code><link linkend="variable-self-expanded">$tan:self-expanded</link></code>, <code><link linkend="variable-head">$tan:head</link></code>, <code><link linkend="variable-body">$tan:body</link></code>, <code><link linkend="variable-doc-class">$tan:doc-class</link></code>, <code><link linkend="variable-doc-id-namespace">$tan:doc-id-namespace</link></code>, <code><link linkend="variable-doc-vocabulary">$tan:doc-vocabulary</link></code>.</para><para>Relies upon <code><link linkend="function-resolve-doc">tan:resolve-doc</link></code>.</para></section>
<section xml:id="variable-self-resolved-plus"><title><code>$tan:self-resolved-plus</code></title><para><emphasis>TAN-variables-extended</emphasis></para><para>Definition: <code><link linkend="function-normalize-tree-space">tan:normalize-tree-space</link><link linkend="variable-self-resolved">$tan:self-resolved</link>, true())</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Relies upon <code><link linkend="variable-self-resolved">$tan:self-resolved</link></code>, <code><link linkend="function-normalize-tree-space">tan:normalize-tree-space</link></code>.</para></section>
<section xml:id="variable-separator-hierarchy"><title><code>$tan:separator-hierarchy</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>' '</code></para><para>Used by template <code><link linkend="template-merge-tan-docs">ŧ tan:merge-tan-docs</link></code>, <code><link linkend="template-dependency-adjustments-pass-1">ŧ tan:dependency-adjustments-pass-1</link></code>, <code><link linkend="template-check-and-expand-ranges">ŧ tan:check-and-expand-ranges</link></code>, <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>, <code><link linkend="template-string-to-numerals">ŧ tan:string-to-numerals</link></code>, <code><link linkend="template-merge-tan-docs">ŧ tan:merge-tan-docs</link></code> tan:merge-tan-doc-leaf-divs, <code><link linkend="template-process-appended-div">ŧ tan:process-appended-div</link></code>, <code><link linkend="template-merge-divs">ŧ tan:merge-divs</link></code>, <code><link linkend="template-resolve-reference-tree-numerals">ŧ tan:resolve-reference-tree-numerals</link></code>.</para><para>Used by function <code>tan:build-parent-ref-tree()</code>, <code>tan:analyze-ref-loop()</code>, <code><link linkend="function-get-ref">tan:get-ref()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-separator-hierarchy-minor"><title><code>$tan:separator-hierarchy-minor</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>'#'</code></para><para>Used by template <code><link linkend="template-string-to-numerals">ŧ tan:string-to-numerals</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-separator-major"><title><code>$tan:separator-major</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>'##'</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-shy"><title><code>$tan:shy</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code><link linkend="variable-dhy">$tan:dhy</link></code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Relies upon <code><link linkend="variable-dhy">$tan:dhy</link></code>.</para></section>
<section xml:id="variable-source-ids"><title><code>$tan:source-ids</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>          if (exists(<link linkend="variable-head">$tan:head</link>/tan:source/<link linkend="attribute-xmlid">@xml:id</link>)) then             <link linkend="variable-head">$tan:head</link>/tan:source/<link linkend="attribute-xmlid">@xml:id</link>          else             for $i in (1 to count(<link linkend="variable-head">$tan:head</link>/tan:source))             return                string($i)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Relies upon <code><link linkend="variable-head">$tan:head</link></code>.</para></section>
<section xml:id="variable-sources-resolved"><title><code>$tan:sources-resolved</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>          for $i in <link linkend="variable-head">$tan:head</link>/tan:source          return             <link linkend="function-resolve-doc">tan:resolve-doc</link><link linkend="function-get-1st-doc">tan:get-1st-doc</link>$i), true(), <link linkend="function-attr">tan:attr</link>'src', ($i/<link linkend="attribute-xmlid">@xml:id</link>, '1')[1]))</code></para><para>Used by template <code><link linkend="template-check-referred-doc">ŧ tan:check-referred-doc</link></code>.</para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>.</para><para>Relies upon <code><link linkend="variable-head">$tan:head</link></code>, <code><link linkend="function-attr">tan:attr</link></code>, <code><link linkend="function-get-1st-doc">tan:get-1st-doc</link></code>, <code><link linkend="function-resolve-doc">tan:resolve-doc</link></code>.</para></section>
<section xml:id="variable-special-end-div-chars"><title><code>$tan:special-end-div-chars</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>(<link linkend="variable-zwj">$tan:zwj</link>, <link linkend="variable-dhy">$tan:dhy</link>, <link linkend="variable-zwsp">$tan:zwsp</link>)</code></para><para>Used by variable <code><link linkend="variable-special-end-div-chars-regex">$tan:special-end-div-chars-regex</link></code>.</para><para>Used by template <code><link linkend="template-tokenize-div">ŧ tan:tokenize-div</link></code>, <code><link linkend="template-normalize-tree-space">ŧ tan:normalize-tree-space</link></code>.</para><para>Used by function <code><link linkend="function-normalize-div-text">tan:normalize-div-text()</link></code>.</para><para>Relies upon <code><link linkend="variable-dhy">$tan:dhy</link></code>, <code><link linkend="variable-zwj">$tan:zwj</link></code>, <code><link linkend="variable-zwsp">$tan:zwsp</link></code>.</para></section>
<section xml:id="variable-special-end-div-chars-regex"><title><code>$tan:special-end-div-chars-regex</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>'([' || string-join(<link linkend="variable-special-end-div-chars">$tan:special-end-div-chars</link>) || '])\s*$'</code></para><para>Used by template <code><link linkend="template-tokenize-div">ŧ tan:tokenize-div</link></code>, <code><link linkend="template-normalize-tree-space">ŧ tan:normalize-tree-space</link></code>.</para><para>Used by function <code><link linkend="function-normalize-div-text">tan:normalize-div-text()</link></code>.</para><para>Relies upon <code><link linkend="variable-special-end-div-chars">$tan:special-end-div-chars</link></code>.</para></section>
<section xml:id="variable-src-ids"><title><code>$tan:src-ids</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>This variable has a complex definition. See
                                                   stylesheet for definiton.</para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Relies upon <code><link linkend="variable-head">$tan:head</link></code>.</para></section>
<section xml:id="variable-stated-validation-phase"><title><code>$tan:stated-validation-phase</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>This variable has a complex definition. See
                                                   stylesheet for definiton.</para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-successors-1st-da"><title><code>$tan:successors-1st-da</code></title><para><emphasis>TAN-variables-extended</emphasis></para><para>Definition: <code><link linkend="function-get-1st-doc">tan:get-1st-doc</link><link linkend="variable-head">$tan:head</link>/tan:successor)</code></para><para>Used by variable <code><link linkend="variable-successors-resolved">$tan:successors-resolved</link></code>.</para><para>Relies upon <code><link linkend="variable-head">$tan:head</link></code>, <code><link linkend="function-get-1st-doc">tan:get-1st-doc</link></code>.</para></section>
<section xml:id="variable-successors-resolved"><title><code>$tan:successors-resolved</code></title><para><emphasis>TAN-variables-extended</emphasis></para><para>Definition: <code><link linkend="function-resolve-doc">tan:resolve-doc</link><link linkend="variable-successors-1st-da">$tan:successors-1st-da</link>, false(), <link linkend="function-attr">tan:attr</link>'relationship', 'successor'))</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Relies upon <code><link linkend="variable-successors-1st-da">$tan:successors-1st-da</link></code>, <code><link linkend="function-attr">tan:attr</link></code>, <code><link linkend="function-resolve-doc">tan:resolve-doc</link></code>.</para></section>
<section xml:id="variable-tag-urn-regex-pattern"><title><code>$tan:tag-urn-regex-pattern</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>'tag:([\-a-zA-Z0-9._%+]+@)?[\-a-zA-Z0-9.]+\.[A-Za-z]{2,4},\d{4}(-(0\d|1[0-2]))?(-([0-2]\d|3[01]))?:\S+'</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-tan-classes"><title><code>$tan:tan-classes</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>This variable has a complex definition. See
                                                   stylesheet for definiton.</para><para>Used by function <code>tan:class-number()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-TAN-feature-vocabulary"><title><code>$tan:TAN-feature-vocabulary</code></title><para><emphasis>TAN-variables-extended</emphasis></para><para>Definition: <code><link linkend="variable-TAN-vocabularies">$tan:TAN-vocabularies</link>[tan:TAN-voc/<link linkend="attribute-id">@id</link> = 'tag:textalign.net,2015:tan-voc:features']</code></para><para>Used by template <code><link linkend="template-build-morpheus-ana">ŧ tan:build-morpheus-ana</link></code> tan:build-morpheus-lex.</para><para>Relies upon <code><link linkend="variable-TAN-vocabularies">$tan:TAN-vocabularies</link></code>.</para></section>
<section xml:id="variable-TAN-id-namespace"><title><code>$tan:TAN-id-namespace</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>'tag:textalign.net,2015'</code></para><para>Used by template <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-TAN-namespace"><title><code>$tan:TAN-namespace</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>'tag:textalign.net,2015:ns'</code></para><para>Used by variable <code><link linkend="variable-body">$tan:body</link></code>.</para><para>Used by template <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>, <code><link linkend="template-check-referred-doc">ŧ tan:check-referred-doc</link></code>.</para><para>Used by function <code>tan:resolve-doc-loop()</code>, <code><link linkend="function-pad-bits">tan:pad-bits()</link></code>, <code><link linkend="function-bitwise-xor">tan:bitwise-xor()</link></code>, <code><link linkend="function-bits-to-eight-bit-chars">tan:bits-to-eight-bit-chars()</link></code>, <code><link linkend="function-base64-to-base64Binary">tan:base64-to-base64Binary()</link></code>, <code><link linkend="function-bitwise-or">tan:bitwise-or()</link></code>, <code><link linkend="function-dec-to-n">tan:dec-to-n()</link></code>, <code><link linkend="function-bitwise-and">tan:bitwise-and()</link></code>, <code><link linkend="function-bits-to-octets">tan:bits-to-octets()</link></code>, <code><link linkend="function-hex-to-base64Binary">tan:hex-to-base64Binary()</link></code>, <code><link linkend="function-hex-to-hexBinary">tan:hex-to-hexBinary()</link></code>, <code><link linkend="function-eight-bit-chars-to-hexBinary">tan:eight-bit-chars-to-hexBinary()</link></code>, <code><link linkend="function-octets-to-hexBinary">tan:octets-to-hexBinary()</link></code>, <code><link linkend="function-n-to-dec">tan:n-to-dec()</link></code>, <code><link linkend="function-bin-to-bits">tan:bin-to-bits()</link></code>, <code><link linkend="function-utf-8-octets-to-string">tan:utf-8-octets-to-string()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-TAN-version"><title><code>$tan:TAN-version</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>2021</code></para><para>Used by template <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code> tan:dependency-adjustments-pass-1, <code><link linkend="template-resolve-critical-dependencies-loop">ŧ tan:resolve-critical-dependencies-loop</link></code>, <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-TAN-version-is-under-development"><title><code>$tan:TAN-version-is-under-development</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>false()</code></para><para>Used by template <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code> tan:dependency-adjustments-pass-1, <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-TAN-vocabularies"><title><code>$tan:TAN-vocabularies</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>This variable has a complex definition. See
                                                   stylesheet for definiton.</para><para>Used by variable <code><link linkend="variable-TAN-feature-vocabulary">$tan:TAN-feature-vocabulary</link></code>, <code><link linkend="variable-all-vocabularies">$tan:all-vocabularies</link></code>, <code><link linkend="variable-TAN-vocabularies-vocabulary">$tan:TAN-vocabularies-vocabulary</link></code>, <code><link linkend="variable-extra-vocabulary-files">$tan:extra-vocabulary-files</link></code>, <code><link linkend="variable-token-definitions-reserved">$tan:token-definitions-reserved</link></code>.</para><para>Used by template <code><link linkend="template-check-referred-doc">ŧ tan:check-referred-doc</link></code>, <code><link linkend="template-core-expansion-terse-attributes">ŧ tan:core-expansion-terse-attributes</link></code>, <code><link linkend="template-resolve-critical-dependencies-loop">ŧ tan:resolve-critical-dependencies-loop</link></code>, <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>, <code><link linkend="template-first-stamp-shallow-copy">ŧ tan:first-stamp-shallow-copy</link></code>.</para><para>Used by function <code><link linkend="function-update-TAN-change-log">tan:update-TAN-change-log()</link></code>, <code><link linkend="function-has-vocab">tan:has-vocab()</link></code>.</para><para>Relies upon <code><link linkend="variable-TAN-vocabulary-files">$tan:TAN-vocabulary-files</link></code>, <code><link linkend="template-expand-standard-tan-voc">ŧ tan:expand-standard-tan-voc</link></code>.</para></section>
<section xml:id="variable-TAN-vocabularies-vocabulary"><title><code>$tan:TAN-vocabularies-vocabulary</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code><link linkend="variable-TAN-vocabularies">$tan:TAN-vocabularies</link>[tan:TAN-voc/tan:body[<link linkend="attribute-affects-element">@affects-element</link> = 'vocabulary']]</code></para><para>Used by variable <code><link linkend="variable-extra-vocabulary-files">$tan:extra-vocabulary-files</link></code>.</para><para>Relies upon <code><link linkend="variable-TAN-vocabularies">$tan:TAN-vocabularies</link></code>.</para></section>
<section xml:id="variable-TAN-vocabulary-files"><title><code>$tan:TAN-vocabulary-files</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>collection('../../vocabularies/collection.xml')</code></para><para>Used by variable <code><link linkend="variable-TAN-vocabularies">$tan:TAN-vocabularies</link></code>.</para><para>Used by template <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-TEI-namespace"><title><code>$tan:TEI-namespace</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>'<link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://www.tei-c.org/ns/1.0'">http://www.tei-c.org/ns/1.0'</link></code></para><para>Used by template <code><link linkend="template-check-referred-doc">ŧ tan:check-referred-doc</link></code>.</para><para>Used by function <code>tan:resolve-doc-loop()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-today-iso"><title><code>$tan:today-iso</code></title><para><emphasis>TAN-variables-extended</emphasis></para><para>Definition: <code>format-date(current-date(), '[Y0001]-[M01]-[D01]')</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-today-MDY"><title><code>$tan:today-MDY</code></title><para><emphasis>TAN-variables-extended</emphasis></para><para>Definition: <code>format-date(current-date(), '[MNn] [D], [Y0001]')</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-token-definition-default"><title><code>$tan:token-definition-default</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code><link linkend="variable-token-definitions-reserved">$tan:token-definitions-reserved</link>[1]</code></para><para>Used by template <code><link linkend="template-dependency-adjustments-pass-2">ŧ tan:dependency-adjustments-pass-2</link></code>, <code><link linkend="template-mark-dependencies-pass-1">ŧ tan:mark-dependencies-pass-1</link></code>, <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>.</para><para>Used by function <code><link linkend="function-tokenize-text">tan:tokenize-text()</link></code>.</para><para>Relies upon <code><link linkend="variable-token-definitions-reserved">$tan:token-definitions-reserved</link></code>.</para></section>
<section xml:id="variable-token-definition-letters-and-punctuation"><title><code>$tan:token-definition-letters-and-punctuation</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code><link linkend="variable-token-definitions-reserved">$tan:token-definitions-reserved</link>[../tan:name = 'letters and punctuation']</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Relies upon <code><link linkend="variable-token-definitions-reserved">$tan:token-definitions-reserved</link></code>.</para></section>
<section xml:id="variable-token-definition-letters-only"><title><code>$tan:token-definition-letters-only</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code><link linkend="variable-token-definitions-reserved">$tan:token-definitions-reserved</link>[../tan:name = 'letters only']</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Relies upon <code><link linkend="variable-token-definitions-reserved">$tan:token-definitions-reserved</link></code>.</para></section>
<section xml:id="variable-token-definition-nonspace"><title><code>$tan:token-definition-nonspace</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code><link linkend="variable-token-definitions-reserved">$tan:token-definitions-reserved</link>[../tan:name = 'nonspace']</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Relies upon <code><link linkend="variable-token-definitions-reserved">$tan:token-definitions-reserved</link></code>.</para></section>
<section xml:id="variable-token-definitions-reserved"><title><code>$tan:token-definitions-reserved</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code><link linkend="variable-TAN-vocabularies">$tan:TAN-vocabularies</link>//tan:token-definition</code></para><para>Used by variable <code><link linkend="variable-token-definition-letters-only">$tan:token-definition-letters-only</link></code>, <code><link linkend="variable-token-definition-letters-and-punctuation">$tan:token-definition-letters-and-punctuation</link></code>, <code><link linkend="variable-token-definition-nonspace">$tan:token-definition-nonspace</link></code>, <code><link linkend="variable-token-definition-default">$tan:token-definition-default</link></code>.</para><para>Relies upon <code><link linkend="variable-TAN-vocabularies">$tan:TAN-vocabularies</link></code>.</para></section>
<section xml:id="variable-url-regex"><title><code>$tan:url-regex</code></title><para><emphasis>TAN-variables-extended</emphasis></para><para>Definition: <code>\S+\.\w+</code></para><para>Used by function <code><link linkend="function-parse-urls">tan:parse-urls()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-validation-phase-names"><title><code>$tan:validation-phase-names</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>('terse', 'normal', 'verbose')</code></para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-vocabularies-resolved"><title><code>$tan:vocabularies-resolved</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>tan:get-and-resolve-dependency(<link linkend="variable-head">$tan:head</link>/(tan:vocabulary, tan:key[tan:location]))</code></para><para>Used by variable <code><link linkend="variable-all-vocabularies">$tan:all-vocabularies</link></code>.</para><para>Used by template <code><link linkend="template-check-referred-doc">ŧ tan:check-referred-doc</link></code>.</para><para>Relies upon <code><link linkend="variable-head">$tan:head</link></code>.</para></section>
<section xml:id="variable-xpath-regex"><title><code>$tan:xpath-regex</code></title><para><emphasis>TAN-variables-extended</emphasis></para><para>Definition: <code>\{[^\}]+?\}</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-zwj"><title><code>$tan:zwj</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>‍</code></para><para>Used by variable <code><link linkend="variable-special-end-div-chars">$tan:special-end-div-chars</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-zwsp"><title><code>$tan:zwsp</code></title><para><emphasis>TAN-variables-standard</emphasis></para><para>Definition: <code>​</code></para><para>Used by variable <code><link linkend="variable-special-end-div-chars">$tan:special-end-div-chars</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
</section>
<section><title>Keys</title><section xml:id="key-attrs-by-name"><title><code>ʞ tan:attrs-by-name</code></title><para><emphasis>TAN-keys-standard</emphasis></para><para>Looks for elements matching <code>@*</code></para><para>Used by template <code><link linkend="template-tan-a-lm-expansion-terse">ŧ tan:tan-a-lm-expansion-terse</link></code>, <code><link linkend="template-core-expansion-terse-attributes">ŧ tan:core-expansion-terse-attributes</link></code>, <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>.</para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>, <code>tan:resolve-doc-loop()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="key-div-via-calculated-ref"><title><code>ʞ tan:div-via-calculated-ref</code></title><para><emphasis>TAN-keys-extended</emphasis></para><para>Looks for elements matching <code>*:div[@n]</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:key.</para><para>Relies upon <code><link linkend="function-get-ref">tan:get-ref</link></code>.</para></section>
<section xml:id="key-div-via-ref"><title><code>ʞ tan:div-via-ref</code></title><para><emphasis>TAN-keys-standard</emphasis></para><para>Looks for elements matching <code>tan:div</code></para><para>Used by template <code><link linkend="template-class-1-expansion-verbose-pass-2">ŧ tan:class-1-expansion-verbose-pass-2</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="key-elements-by-name"><title><code>ʞ tan:elements-by-name</code></title><para><emphasis>TAN-keys-standard</emphasis></para><para>Looks for elements matching <code>*</code></para><para>Used by template <code><link linkend="template-apply-inclusions-and-adjust-vocabulary">ŧ tan:apply-inclusions-and-adjust-vocabulary</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="key-elements-with-attrs-named"><title><code>ʞ tan:elements-with-attrs-named</code></title><para><emphasis>TAN-keys-standard</emphasis></para><para>Looks for elements matching <code>*</code></para><para>Used by function <code>tan:resolve-doc-loop()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="key-get-ana"><title><code>ʞ tan:get-ana</code></title><para><emphasis>TAN-keys-extended</emphasis></para><para>Looks for elements matching <code>tan:ana</code></para><para>Used by function <code><link linkend="function-lm-data">tan:lm-data()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="key-item-via-node-name"><title><code>ʞ tan:item-via-node-name</code></title><para><emphasis>TAN-keys-standard</emphasis></para><para>Looks for elements matching <code>tan:item</code></para><para>Used by template <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="key-q-ref"><title><code>ʞ tan:q-ref</code></title><para><emphasis>TAN-keys-standard</emphasis></para><para>Looks for elements matching <code>*</code></para><para>Used by template <code><link linkend="template-mark-dependencies-pass-2">ŧ tan:mark-dependencies-pass-2</link></code>, <code><link linkend="template-class-2-expansion-terse">ŧ tan:class-2-expansion-terse</link></code> tan:class-2-expansion-terse-for-validation.</para><para>Used by function <code><link linkend="function-get-via-q-ref">tan:get-via-q-ref()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="key-tok-via-val"><title><code>ʞ tan:tok-via-val</code></title><para><emphasis>TAN-keys-standard</emphasis></para><para>Looks for elements matching <code>tan:tok</code></para><para>Used by template <code><link linkend="template-mark-dependencies-pass-2-for-validation">ŧ tan:mark-dependencies-pass-2-for-validation</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
</section>
</section>
<section xml:id="vkft-arrays"><title>Arrays</title><section><title>Functions</title><section xml:id="function-array-permutations"><title><code>tan:array-permutations()</code></title><para><emphasis>TAN-fn-arrays-extended</emphasis></para><para><code>tan:array-permutations($input-array as array(*)) as array(*)</code></para><programlisting>Input: any array </programlisting><programlisting>Output: an array whose members are sequences representing the permutations of each 
item in each member in the input array. </programlisting><programlisting>Example: [(1, 2), 'dog'] becomes [(1, 'dog'), (2, 'dog')] </programlisting><programlisting>The output array will always have a size equal to the product of the item count in each 
input array member, and the output array's members will share the exact same item count. </programlisting><para>Related: <link linkend="tan-function-group-arrays">arrays</link></para><para>Used by function <code><link linkend="function-morphological-code-conversion-maps">tan:morphological-code-conversion-maps()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-array-to-map"><title><code>tan:array-to-map()</code></title><para><emphasis>TAN-fn-arrays-extended</emphasis></para><para><code>tan:array-to-map($array-to-convert as array(*)?, $use-first-items-as-keys as xs:boolean) as map(*)?</code></para><programlisting>Input: an array; a boolean </programlisting><programlisting>Output: a map; if the boolean is true and the first item in each member of the array is 
uniquely distinct from all other first items then those first items become the key and the tail 
of each member becomes the value of the map entry. Otherwise, the constructed map has 
integers from 1 onward as keys with each array member becoming the value of the map entry. </programlisting><para>Related: <link linkend="tan-function-group-arrays">arrays</link>, <link linkend="tan-function-group-maps">maps</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="template-array-to-map">ŧ tan:array-to-map</link></code>.</para></section>
<section xml:id="function-array-to-xml"><title><code>tan:array-to-xml()</code></title><para><emphasis>TAN-fn-arrays-extended</emphasis></para><para><code>tan:array-to-xml($arrays-to-convert as array(*)*) as element()*</code></para><programlisting>Input: any items </programlisting><programlisting>Output: any arrays in each item serialized as XML elements; each member of the array 
will be wrapped by an <code>&lt;array:member&gt;</code> with <code><link linkend="attribute-type">@type</link></code> specifying the item type it encloses. </programlisting><para>Related: <link linkend="tan-function-group-arrays">arrays</link>, <link linkend="tan-function-group-nodes">nodes</link></para><para>Used by function <code><link linkend="function-collate-pair-of-sequences">tan:collate-pair-of-sequences()</link></code>.</para><para>Relies upon <code><link linkend="template-map-and-array-to-xml">ŧ tan:map-and-array-to-xml</link></code>.</para></section>
<section xml:id="function-xml-to-array"><title><code>tan:xml-to-array()</code></title><para><emphasis>TAN-fn-arrays-extended</emphasis></para><para><code>tan:xml-to-array($items-to-array as item()*) as array(*)*</code></para><programlisting>Input: XML tree fragments </programlisting><programlisting>Output: those parts that conform to the output of <code><link linkend="function-array-to-xml">tan:array-to-xml()</link></code> converted to 
arrays. Anything in the input tree not matching array:array or array:member will be 
skipped, unless it is a member an array:array or array:member. Anything in the array:member 
will be bound as the type assigned by the value of <code><link linkend="attribute-type">@type</link></code> </programlisting><para>Related: <link linkend="tan-function-group-arrays">arrays</link>, <link linkend="tan-function-group-tree_manipulation">tree manipulation</link>, <link linkend="tan-function-group-nodes">nodes</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="template-xml-to-map-and-array">ŧ tan:xml-to-map-and-array</link></code>.</para></section>
</section>
</section>
<section xml:id="vkft-booleans"><title>Booleans</title><section><title>Functions</title><section xml:id="function-true"><title><code>tan:true()</code></title><para><emphasis>TAN-fn-booleans</emphasis></para><para><code>tan:true($string as xs:string*) as xs:boolean*</code></para><programlisting>Input: a sequence of strings representing truth values </programlisting><programlisting>Output: the same number of booleans; if the string is some approximation of y, yes, 1, 
or true, then it is true, and false otherwise </programlisting><para>Related: <link linkend="tan-function-group-binary">binary</link>, <link linkend="tan-function-group-booleans">booleans</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
</section>
</section>
<section xml:id="vkft-checksums"><title>Checksums</title><section><title>Variables</title><section xml:id="variable-hash-error-key"><title><code>$tan:hash-error-key</code></title><para><emphasis>TAN-fn-hash-and-check</emphasis></para><para>This variable has a complex definition. See
                                                   stylesheet for definiton.</para><para>Used by variable <code><link linkend="variable-error-key">$tan:error-key</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-md5-a0"><title><code>$tan:md5-a0</code></title><para><emphasis>TAN-fn-hash-and-check</emphasis></para><para>Definition: <code>true(), false(), false(), false(), false(), false(), false(), false(), true(), true(), false(), false(), false(), true(), false(), false(), true(), false(), true(), false(), false(), false(), true(), false(), true(), true(), true(), false(), false(), true(), true(), false()</code></para><para>Used by function <code><link linkend="function-md5">tan:md5()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-md5-b0"><title><code>$tan:md5-b0</code></title><para><emphasis>TAN-fn-hash-and-check</emphasis></para><para>Definition: <code>true(), false(), false(), true(), false(), false(), false(), true(), true(), true(), false(), true(), false(), true(), false(), true(), true(), false(), true(), true(), false(), false(), true(), true(), true(), true(), true(), true(), false(), true(), true(), true()</code></para><para>Used by function <code><link linkend="function-md5">tan:md5()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-md5-c0"><title><code>$tan:md5-c0</code></title><para><emphasis>TAN-fn-hash-and-check</emphasis></para><para>Definition: <code>false(), true(), true(), true(), true(), true(), true(), true(), false(), false(), true(), true(), true(), false(), true(), true(), false(), true(), false(), true(), true(), true(), false(), true(), false(), false(), false(), true(), true(), false(), false(), true()</code></para><para>Used by function <code><link linkend="function-md5">tan:md5()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-md5-d0"><title><code>$tan:md5-d0</code></title><para><emphasis>TAN-fn-hash-and-check</emphasis></para><para>Definition: <code>false(), true(), true(), false(), true(), true(), true(), false(), false(), false(), true(), false(), true(), false(), true(), false(), false(), true(), false(), false(), true(), true(), false(), false(), false(), false(), false(), false(), true(), false(), false(), false()</code></para><para>Used by function <code><link linkend="function-md5">tan:md5()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-md5-K"><title><code>$tan:md5-K</code></title><para><emphasis>TAN-fn-hash-and-check</emphasis></para><para>Definition: <code>3614090360, 3905402710, 606105819, 3250441966, 4118548399, 1200080426, 2821735955, 4249261313, 1770035416, 2336552879, 4294925233, 2304563134, 1804603682, 4254626195, 2792965006, 1236535329, 4129170786, 3225465664, 643717713, 3921069994, 3593408605, 38016083, 3634488961, 3889429448, 568446438, 3275163606, 4107603335, 1163531501, 2850285829, 4243563512, 1735328473, 2368359562, 4294588738, 2272392833, 1839030562, 4259657740, 2763975236, 1272893353, 4139469664, 3200236656, 681279174, 3936430074, 3572445317, 76029189, 3654602809, 3873151461, 530742520, 3299628645, 4096336452, 1126891415, 2878612391, 4237533241, 1700485571, 2399980690, 4293915773, 2240044497, 1873313359, 4264355552, 2734768916, 1309151649, 4149444226, 3174756917, 718787259, 3951481745</code></para><para>Used by function <code><link linkend="function-md5">tan:md5()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-md5-shifts"><title><code>$tan:md5-shifts</code></title><para><emphasis>TAN-fn-hash-and-check</emphasis></para><para>Definition: <code>       7, 12, 17, 22,  7, 12, 17, 22,  7, 12, 17, 22,  7, 12, 17, 22,         5,  9, 14, 20,  5,  9, 14, 20,  5,  9, 14, 20,  5,  9, 14, 20,        4, 11, 16, 23,  4, 11, 16, 23,  4, 11, 16, 23,  4, 11, 16, 23,       6, 10, 15, 21,  6, 10, 15, 21,  6, 10, 15, 21,  6, 10, 15, 21       </code></para><para>Used by function <code><link linkend="function-md5">tan:md5()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-pow2-32"><title><code>$tan:pow2-32</code></title><para><emphasis>TAN-fn-hash-and-check</emphasis></para><para>Definition: <code>xs:double('4.294967296E9')</code></para><para>Used by function <code>tan:int-with-mod-2-32-negation()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-pow2-64"><title><code>$tan:pow2-64</code></title><para><emphasis>TAN-fn-hash-and-check</emphasis></para><para>Definition: <code>xs:double('1.844674407370955E19')</code></para><para>Used by function <code><link linkend="function-md5">tan:md5()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
</section>
<section><title>Functions</title><section xml:id="function-checksum-fletcher-16"><title><code>tan:checksum-fletcher-16()</code></title><para><emphasis>Option 1 (TAN-fn-hash-and-check)</emphasis></para><para><code>tan:checksum-fletcher-16($str as xs:string?) as xs:string?</code></para><programlisting>one-parameter version of the fuller one, below </programlisting><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Does not rely upon global variables, keys, functions, or templates.</para><para><emphasis>Option 2 (TAN-fn-hash-and-check)</emphasis></para><para><code>tan:checksum-fletcher-16($str as xs:string?, $output-hex as xs:boolean) as item()?</code></para><programlisting>Input: a string, a boolean </programlisting><programlisting>Output: if the second parameter is true, a hexadecimal representation of the 
Fletcher 16 checksum on the string, otherwise its integer representation </programlisting><para>Related: <link linkend="tan-function-group-checksums">checksums</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-checksum-fletcher-32"><title><code>tan:checksum-fletcher-32()</code></title><para><emphasis>Option 1 (TAN-fn-hash-and-check)</emphasis></para><para><code>tan:checksum-fletcher-32($str as xs:string?) as xs:string?</code></para><programlisting>one-parameter version of the fuller one, below </programlisting><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Does not rely upon global variables, keys, functions, or templates.</para><para><emphasis>Option 2 (TAN-fn-hash-and-check)</emphasis></para><para><code>tan:checksum-fletcher-32($str as xs:string?, $output-hex as xs:boolean) as item()?</code></para><programlisting>Input: a string, a boolean </programlisting><programlisting>Output: if the second parameter is true, a hexadecimal representation of the 
Fletcher 32 checksum on the string, otherwise its integer representation </programlisting><para>Related: <link linkend="tan-function-group-checksums">checksums</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-checksum-fletcher-64"><title><code>tan:checksum-fletcher-64()</code></title><para><emphasis>Option 1 (TAN-fn-hash-and-check)</emphasis></para><para><code>tan:checksum-fletcher-64($str as xs:string?) as xs:string?</code></para><programlisting>one-parameter version of the fuller one, below </programlisting><para>Used by template <code><link linkend="template-diff-to-delta">ŧ tan:diff-to-delta</link></code>.</para><para>Used by function <code><link linkend="function-get-diff-output-transpositions">tan:get-diff-output-transpositions()</link></code>, <code><link linkend="function-apply-deltas">tan:apply-deltas()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para><para><emphasis>Option 2 (TAN-fn-hash-and-check)</emphasis></para><para><code>tan:checksum-fletcher-64($str as xs:string?, $output-hex as xs:boolean) as item()?</code></para><programlisting>Input: a string, a boolean </programlisting><programlisting>Output: if the second parameter is true, a hexadecimal representation of the 
Fletcher 64 checksum on the string, otherwise its integer representation </programlisting><para>Related: <link linkend="tan-function-group-checksums">checksums</link></para><para>Used by template <code><link linkend="template-diff-to-delta">ŧ tan:diff-to-delta</link></code>.</para><para>Used by function <code><link linkend="function-get-diff-output-transpositions">tan:get-diff-output-transpositions()</link></code>, <code><link linkend="function-apply-deltas">tan:apply-deltas()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-md5"><title><code>tan:md5()</code></title><para><emphasis>TAN-fn-hash-and-check</emphasis></para><para><code>tan:md5($input as xs:string?) as item()*</code></para><programlisting>Input: a string </programlisting><programlisting>Output: an MD5 checksum for the string </programlisting><para>Related: <link linkend="tan-function-group-checksums">checksums</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="variable-md5-K">$tan:md5-K</link></code>, <code><link linkend="variable-md5-a0">$tan:md5-a0</link></code>, <code><link linkend="variable-md5-b0">$tan:md5-b0</link></code>, <code><link linkend="variable-md5-c0">$tan:md5-c0</link></code>, <code><link linkend="variable-md5-d0">$tan:md5-d0</link></code>, <code><link linkend="variable-md5-shifts">$tan:md5-shifts</link></code>, <code><link linkend="variable-pow2-64">$tan:pow2-64</link></code>, <code><link linkend="function-bin-to-bits">tan:bin-to-bits</link></code>, <code><link linkend="function-bin-to-dec">tan:bin-to-dec</link></code>, <code><link linkend="function-bits-to-bin">tan:bits-to-bin</link></code>, <code><link linkend="function-bits-to-byte">tan:bits-to-byte</link></code>, <code><link linkend="function-bits-to-word">tan:bits-to-word</link></code>, <code><link linkend="function-bitwise-and">tan:bitwise-and</link></code>, <code><link linkend="function-bitwise-not">tan:bitwise-not</link></code>, <code><link linkend="function-bitwise-or">tan:bitwise-or</link></code>, <code><link linkend="function-bitwise-plus">tan:bitwise-plus</link></code>, <code><link linkend="function-bitwise-rotate">tan:bitwise-rotate</link></code>, <code><link linkend="function-bitwise-xor">tan:bitwise-xor</link></code>, <code><link linkend="function-dec-to-bin">tan:dec-to-bin</link></code>, <code><link linkend="function-dec-to-hex">tan:dec-to-hex</link></code>, <code><link linkend="function-ellipses">tan:ellipses</link></code>, <code><link linkend="function-reverse-string">tan:reverse-string</link></code>, <code><link linkend="function-unicode-to-eight-bit-chars">tan:unicode-to-eight-bit-chars</link></code>.</para></section>
</section>
</section>
<section xml:id="vkft-cross-references"><title>Cross-references</title><section><title>Functions</title><section xml:id="function-get-via-q-ref"><title><code>tan:get-via-q-ref()</code></title><para><emphasis>TAN-fn-cross-references</emphasis></para><para><code>tan:get-via-q-ref($q-ref as xs:string*, $q-reffed-document as document-node()*) as node()*</code></para><programlisting>Input: any number of q-refs, any number of q-reffed documents </programlisting><programlisting>Output: the elements corresponding to the q-refs </programlisting><programlisting>This function is used by the core validation routine, mainly to find errors in 
expanded output </programlisting><para>Related: <link linkend="tan-function-group-identifiers">identifiers</link></para><para>Used by template <code><link linkend="template-imitate-validation">ŧ tan:imitate-validation</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
</section>
</section>
<section xml:id="vkft-docx"><title>Docx</title><section><title>Functions</title><section xml:id="function-docx-to-text"><title><code>tan:docx-to-text()</code></title><para><emphasis>TAN-fn-docx</emphasis></para><para><code>tan:docx-to-text($docx-component as item()*) as xs:string?</code></para><programlisting>Input: docx component as document nodes </programlisting><programlisting>Output: the string value of the component </programlisting><para>Related: <link linkend="tan-function-group-docx">docx</link>, <link linkend="tan-function-group-files">files</link>, <link linkend="tan-function-group-strings">strings</link>, <link linkend="tan-function-group-tree_manipulation">tree manipulation</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="template-archive-to-plain-text">ŧ tan:archive-to-plain-text</link></code>.</para></section>
</section>
</section>
<section xml:id="vkft-files"><title>Files</title><section><title>Variables</title><section xml:id="variable-advanced-functions-available"><title><code>$advanced-functions-available</code></title><para><emphasis>TAN-fn-file-archive-extended</emphasis></para><para>Definition: <code>function-available('file:read-binary') and function-available('arch:extract-map') and function-available('bin:encode-string')</code></para><para>Used by template <code><link linkend="template-save-archive">Ŧ tan:save-archive</link></code>.</para><para>Used by function <code>tan:extract-map()</code>, <code><link linkend="function-save-docx">tan:save-docx()</link></code>, <code><link linkend="function-save-xlsx">tan:save-xlsx()</link></code>, <code><link linkend="function-open-archive">tan:open-archive()</link></code>, <code><link linkend="function-archive-available">tan:archive-available()</link></code>, <code>tan:archive-map-to-xml()</code>, <code><link linkend="function-open-raw-archive">tan:open-raw-archive()</link></code>, <code>tan:entries-map()</code>, <code>tan:extract-archive-component()</code>, <code><link linkend="function-save-archive">tan:save-archive()</link></code>, <code>tan:open-archive-loop()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
</section>
<section><title>Functions</title><section xml:id="function-archive-available"><title><code>tan:archive-available()</code></title><para><emphasis>Option 1 (TAN-fn-file-archive-extended)</emphasis></para><para><code>tan:archive-available($element-with-attr-href-or-string-with-resolved-uri as item()?) as xs:boolean</code></para><programlisting>Input: any element with an <code><link linkend="attribute-href">@href</link></code>, or a string value (or something castable to a 
string) </programlisting><programlisting>Output: a boolean indicating whether the document is available </programlisting><programlisting>The input url must be resolved. </programlisting><para>Related: <link linkend="tan-function-group-files">files</link>, <link linkend="tan-function-group-archives">archives</link></para><para>Used by function <code><link linkend="function-xlsx-file-available">tan:xlsx-file-available()</link></code>, <code><link linkend="function-docx-file-available">tan:docx-file-available()</link></code>.</para><para>Relies upon <code><link linkend="variable-advanced-functions-available">$advanced-functions-available</link></code>.</para><para><emphasis>Option 2 (TAN-fn-file-archive-extended)</emphasis></para><para><code>tan:archive-available($element-with-attr-href-or-string-with-resolved-uri as item()?) as xs:boolean</code></para><programlisting>Input: any element with an <code><link linkend="attribute-href">@href</link></code>, or a string value (or something castable to a 
string) </programlisting><programlisting>Output: a boolean indicating whether the document is available </programlisting><programlisting>Note, this version of the function, i.e., the one without advanced functions, 
cannot fetch a uri collection from an archive, so the algorithm has to be told what 
particular component to find. Because it was written for docx and xlsx files, this function 
looks only for the signature _rels/.rels. </programlisting><programlisting>The input url must be resolved. </programlisting><programlisting>We use the protocol jar: because it is recognized both by oXygen and by Saxon run on the 
command line </programlisting><para>Related: <link linkend="tan-function-group-files">files</link>, <link linkend="tan-function-group-archives">archives</link></para><para>Used by function <code><link linkend="function-xlsx-file-available">tan:xlsx-file-available()</link></code>, <code><link linkend="function-docx-file-available">tan:docx-file-available()</link></code>.</para><para>Relies upon <code><link linkend="variable-advanced-functions-available">$advanced-functions-available</link></code>.</para></section>
<section xml:id="function-docx-file-available"><title><code>tan:docx-file-available()</code></title><para><emphasis>TAN-fn-file-archive-extended</emphasis></para><para><code>tan:docx-file-available($element-with-attr-href-or-string-with-resolved-uri as item()?) as xs:boolean</code></para><programlisting>Alias for the function below </programlisting><para>Related: <link linkend="tan-function-group-files">files</link>, <link linkend="tan-function-group-archives">archives</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-archive-available">tan:archive-available</link></code>.</para></section>
<section xml:id="function-first-loc-available"><title><code>tan:first-loc-available()</code></title><para><emphasis>TAN-fn-files-standard</emphasis></para><para><code>tan:first-loc-available($element-with-href-in-self-or-descendants as element()?) as xs:string?</code></para><programlisting>Input: An element that is or contains one or more tan:location elements </programlisting><programlisting>Output: the value of the first tan:location/<code><link linkend="attribute-href">@href</link></code> to point to a document available, 
resolved. If no location is available nothing is returned. </programlisting><para>Related: <link linkend="tan-function-group-files">files</link></para><para>Used by function <code><link linkend="function-get-1st-doc">tan:get-1st-doc()</link></code>.</para><para>Relies upon <code><link linkend="variable-internet-available">$tan:internet-available</link></code>, <code><link linkend="function-base-uri">tan:base-uri</link></code>, <code><link linkend="function-url-is-local">tan:url-is-local</link></code>.</para></section>
<section xml:id="function-get-1st-doc"><title><code>tan:get-1st-doc()</code></title><para><emphasis>TAN-fn-files-standard</emphasis></para><para><code>tan:get-1st-doc($TAN-elements as element()*) as document-node()*</code></para><programlisting>Input: any TAN elements naming files (e.g., <code><link linkend="element-source">&lt;source&gt;</link></code>, <code><link linkend="element-see-also">&lt;see-also&gt;</link></code>, <code><link linkend="element-inclusion">&lt;inclusion&gt;</link></code>, 
<code><link linkend="element-vocabulary">&lt;vocabulary&gt;</link></code> </programlisting><programlisting>Output: the first document available for each element, plus any relevant error 
messages. </programlisting><para>Related: <link linkend="tan-function-group-files">files</link></para><para>Used by variable <code><link linkend="variable-annotations-1st-da">$tan:annotations-1st-da</link></code>, <code><link linkend="variable-see-alsos-1st-da">$tan:see-alsos-1st-da</link></code>, <code><link linkend="variable-predecessors-1st-da">$tan:predecessors-1st-da</link></code>, <code><link linkend="variable-successors-1st-da">$tan:successors-1st-da</link></code>, <code><link linkend="variable-extra-vocabulary-files">$tan:extra-vocabulary-files</link></code>, <code><link linkend="variable-redivisions-1st-da">$tan:redivisions-1st-da</link></code>, <code><link linkend="variable-model-1st-da">$tan:model-1st-da</link></code>, <code><link linkend="variable-sources-resolved">$tan:sources-resolved</link></code>, <code><link linkend="variable-morphologies-resolved">$tan:morphologies-resolved</link></code>.</para><para>Used by template <code><link linkend="template-get-and-resolve-dependency">ŧ tan:get-and-resolve-dependency</link></code>, <code><link linkend="template-resolve-critical-dependencies-loop">ŧ tan:resolve-critical-dependencies-loop</link></code>, <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>, <code><link linkend="template-class-2-expansion-verbose">ŧ tan:class-2-expansion-verbose</link></code>, <code><link linkend="template-check-referred-doc">ŧ tan:check-referred-doc</link></code>, <code><link linkend="template-class-1-expansion-verbose-pass-1">ŧ tan:class-1-expansion-verbose-pass-1</link></code>, <code><link linkend="template-core-expansion-normal">ŧ tan:core-expansion-normal</link></code>.</para><para>Used by function <code><link linkend="function-get-1st-doc">tan:get-1st-doc()</link></code>.</para><para>Relies upon <code><link linkend="variable-internet-available">$tan:internet-available</link></code>, <code><link linkend="function-base-uri">tan:base-uri</link></code>, <code><link linkend="function-catalogs">tan:catalogs</link></code>, <code><link linkend="function-element-vocabulary">tan:element-vocabulary</link></code>, <code><link linkend="function-first-loc-available">tan:first-loc-available</link></code>, <code><link linkend="function-get-1st-doc">tan:get-1st-doc()</link></code>, <code><link linkend="function-resolve-href">tan:resolve-href</link></code>, <code><link linkend="function-shallow-copy">tan:shallow-copy</link></code>, <code><link linkend="function-uri-relative-to">tan:uri-relative-to</link></code>, <code><link linkend="function-url-is-local">tan:url-is-local</link></code>, <code><link linkend="function-xml-to-string">tan:xml-to-string</link></code>, <code><link linkend="template-resolve-href">ŧ tan:resolve-href</link></code>.</para></section>
<section xml:id="function-open-archive"><title><code>tan:open-archive()</code></title><para><emphasis>Option 1 (TAN-fn-file-archive-extended)</emphasis></para><para><code>tan:open-archive($element-with-attr-href-or-string-with-resolved-uri as item()?) as document-node()*</code></para><programlisting>Input: any element with an <code><link linkend="attribute-href">@href</link></code>, or a string value (or something castable to a 
string); a string specifying the type of file to be opened </programlisting><programlisting>Output: the components of the target docx or xslx file as a sequence of XML documents 
(the main .rels file first, then the document .rels, then the source content types, then 
every file ending in .xml). To facilitate the reconstruction of the Word file, every 
extracted document will be stamped with <code>@_archive-path</code>, with the local path and name of the 
component. </programlisting><para>Related: <link linkend="tan-function-group-files">files</link>, <link linkend="tan-function-group-archives">archives</link></para><para>Used by function <code><link linkend="function-open-docx">tan:open-docx()</link></code>, <code><link linkend="function-open-xlsx">tan:open-xlsx()</link></code>.</para><para>Relies upon <code><link linkend="variable-advanced-functions-available">$advanced-functions-available</link></code>, <code><link linkend="function-open-raw-archive">tan:open-raw-archive</link></code>.</para><para><emphasis>Option 2 (TAN-fn-file-archive-extended)</emphasis></para><para><code>tan:open-archive($element-with-attr-href-or-string-with-resolved-uri as item()?) as document-node()*</code></para><programlisting>Input: any element with an <code><link linkend="attribute-href">@href</link></code>, or a string value (or something castable to a 
string); a string specifying the type of file to be opened </programlisting><programlisting>Output: the components of the target docx or xslx file as a sequence of XML documents 
(the main .rels file first, then the document .rels, then the source content types, then 
every file ending in .xml). To facilitate the reconstruction of the Word file, every 
extracted document will be stamped with <code>@_archive-path</code>, with the local path and name of the 
component. </programlisting><para>Related: <link linkend="tan-function-group-files">files</link>, <link linkend="tan-function-group-archives">archives</link></para><para>Used by function <code><link linkend="function-open-docx">tan:open-docx()</link></code>, <code><link linkend="function-open-xlsx">tan:open-xlsx()</link></code>.</para><para>Relies upon <code><link linkend="variable-advanced-functions-available">$advanced-functions-available</link></code>.</para></section>
<section xml:id="function-open-docx"><title><code>tan:open-docx()</code></title><para><emphasis>TAN-fn-file-archive-extended</emphasis></para><para><code>tan:open-docx($element-with-attr-href-or-string-with-resolved-uri as item()?) as document-node()*</code></para><programlisting>Alias for the function below, <code><link linkend="function-open-archive">tan:open-archive()</link></code> </programlisting><para>Related: <link linkend="tan-function-group-files">files</link>, <link linkend="tan-function-group-archives">archives</link></para><para>Used by function <code><link linkend="function-open-file">tan:open-file()</link></code>.</para><para>Relies upon <code><link linkend="function-open-archive">tan:open-archive</link></code>.</para></section>
<section xml:id="function-open-file"><title><code>tan:open-file()</code></title><para><emphasis>Option 1 (TAN-fn-files-extended)</emphasis></para><para><code>tan:open-file($resolved-urls) </code></para><programlisting>1-parameter version of the main one below </programlisting><para>Used by function <code><link linkend="function-open-file">tan:open-file()</link></code>.</para><para>Relies upon <code><link linkend="function-open-file">tan:open-file</link></code>.</para><para><emphasis>Option 2 (TAN-fn-files-extended)</emphasis></para><para><code>tan:open-file($resolved-urls, $target-fallback-encoding as xs:string*) as document-node()*</code></para><programlisting>Input: items that can be resolved as strings; a string </programlisting><programlisting>Output: for each resolvable string in the first parameter, if a document is 
available, the document; if it is not, but unparsed text is available, a document with the 
unparsed text wrapped in a root element; otherwise an empty document node. If unparsed text is 
not available, another attempt will be made on a fallback encoding specified by the 2nd 
parameter. </programlisting><programlisting>If the file is plain text that is not XML, it will be wrapped by a root element of an XML 
document. That root node will have <code>@xml:base</code> pointing to the source url. </programlisting><programlisting>If it is a .docx file, the components XML documents of the Word document will be 
returned. </programlisting><para>Related: <link linkend="tan-function-group-files">files</link></para><para>Used by function <code><link linkend="function-open-file">tan:open-file()</link></code>.</para><para>Relies upon <code><link linkend="function-open-docx">tan:open-docx</link></code>.</para></section>
<section xml:id="function-open-raw-archive"><title><code>tan:open-raw-archive()</code></title><para><emphasis>TAN-fn-file-archive-extended</emphasis></para><para><code>tan:open-raw-archive($element-with-attr-href-or-string-with-resolved-uri as item()?) as xs:base64Binary?</code></para><programlisting>Input: an item pointing to a URI </programlisting><programlisting>Output: the contents of the target archive as base 64 binary </programlisting><programlisting>This function is basically a padded alternative to <code>file:read-binary()</code> </programlisting><para>Related: <link linkend="tan-function-group-files">files</link>, <link linkend="tan-function-group-archives">archives</link></para><para>Used by function <code><link linkend="function-open-archive">tan:open-archive()</link></code>, <code>tan:entries-map()</code>.</para><para>Relies upon <code><link linkend="variable-advanced-functions-available">$advanced-functions-available</link></code>.</para></section>
<section xml:id="function-open-xlsx"><title><code>tan:open-xlsx()</code></title><para><emphasis>TAN-fn-file-archive-extended</emphasis></para><para><code>tan:open-xlsx($element-with-attr-href-or-string-with-resolved-uri as item()?) as document-node()*</code></para><programlisting>Alias for the function below, <code><link linkend="function-open-archive">tan:open-archive()</link></code> </programlisting><para>Related: <link linkend="tan-function-group-files">files</link>, <link linkend="tan-function-group-archives">archives</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-open-archive">tan:open-archive</link></code>.</para></section>
<section xml:id="function-save-archive"><title><code>tan:save-archive()</code></title><para><emphasis>TAN-fn-file-archive-extended</emphasis></para><para><code>tan:save-archive($archive-components as document-node()*, $resolved-uri as xs:string) </code></para><programlisting>surrogate function for the named template, below </programlisting><para>Related: <link linkend="tan-function-group-files">files</link>, <link linkend="tan-function-group-archives">archives</link></para><para>Used by function <code><link linkend="function-save-docx">tan:save-docx()</link></code>, <code><link linkend="function-save-xlsx">tan:save-xlsx()</link></code>.</para><para>Relies upon <code><link linkend="variable-advanced-functions-available">$advanced-functions-available</link></code>, <code><link linkend="template-save-archive">Ŧ tan:save-archive</link></code>.</para></section>
<section xml:id="function-save-docx"><title><code>tan:save-docx()</code></title><para><emphasis>TAN-fn-file-archive-extended</emphasis></para><para><code>tan:save-docx($archive-components as document-node()*, $resolved-uri as xs:string) </code></para><programlisting>Alias for the function below </programlisting><para>Related: <link linkend="tan-function-group-files">files</link>, <link linkend="tan-function-group-archives">archives</link>, <link linkend="tan-function-group-docx">docx</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="variable-advanced-functions-available">$advanced-functions-available</link></code>, <code><link linkend="function-save-archive">tan:save-archive</link></code>.</para></section>
<section xml:id="function-save-xlsx"><title><code>tan:save-xlsx()</code></title><para><emphasis>TAN-fn-file-archive-extended</emphasis></para><para><code>tan:save-xlsx($archive-components as document-node()*, $resolved-uri as xs:string) </code></para><programlisting>Alias for the function below </programlisting><para>Related: <link linkend="tan-function-group-files">files</link>, <link linkend="tan-function-group-archives">archives</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="variable-advanced-functions-available">$advanced-functions-available</link></code>, <code><link linkend="function-save-archive">tan:save-archive</link></code>.</para></section>
<section xml:id="function-url-is-local"><title><code>tan:url-is-local()</code></title><para><emphasis>TAN-fn-files-standard</emphasis></para><para><code>tan:url-is-local($url-to-test as xs:string?) as xs:boolean</code></para><programlisting>Input: a string representing a URL </programlisting><programlisting>Output: true if the URL syntactically appears to be local </programlisting><para>Related: <link linkend="tan-function-group-files">files</link>, <link linkend="tan-function-group-filenames">filenames</link></para><para>Used by template <code><link linkend="template-core-expansion-terse-attributes-to-elements">ŧ tan:core-expansion-terse-attributes-to-elements</link></code>, <code><link linkend="template-check-referred-doc">ŧ tan:check-referred-doc</link></code>.</para><para>Used by function <code><link linkend="function-first-loc-available">tan:first-loc-available()</link></code>, <code><link linkend="function-get-1st-doc">tan:get-1st-doc()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-xlsx-file-available"><title><code>tan:xlsx-file-available()</code></title><para><emphasis>TAN-fn-file-archive-extended</emphasis></para><para><code>tan:xlsx-file-available($element-with-attr-href-or-string-with-resolved-uri as item()?) as xs:boolean</code></para><programlisting>Alias for the function below </programlisting><para>Related: <link linkend="tan-function-group-files">files</link>, <link linkend="tan-function-group-archives">archives</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-archive-available">tan:archive-available</link></code>.</para></section>
<section xml:id="function-zip-uris"><title><code>tan:zip-uris()</code></title><para><emphasis>TAN-fn-files-extended</emphasis></para><para><code>tan:zip-uris($uris as xs:string*) as xs:anyURI*</code></para><programlisting>Input: any string representing a uri </programlisting><programlisting>Output: the same string with 'zip:' prepended if it represents a uri to a file in an 
archive (docx, jar, zip, etc.) </programlisting><para>Related: <link linkend="tan-function-group-files">files</link>, <link linkend="tan-function-group-archives">archives</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
</section>
<section><title>Templates</title><section xml:id="template-save-archive"><title><code>Ŧ tan:save-archive</code></title><para><emphasis>Option 1 (TAN-fn-file-archive-extended)</emphasis></para><programlisting>Input: a sequence of documents that each have <code>@_archive-path</code> stamped in the root 
element (the result of <code><link linkend="function-open-docx">tan:open-docx()</link></code>); a resolved uri for the new Word document </programlisting><programlisting>Output: an archive saved at the URL specified by the second parameter </programlisting><para>Used by template <code><link linkend="template-save-docx">Ŧ tan:save-docx</link></code>, <code><link linkend="template-save-xlsx">Ŧ tan:save-xlsx</link></code>.</para><para>Used by function <code><link linkend="function-save-archive">tan:save-archive()</link></code>.</para><para>Relies upon <code><link linkend="variable-advanced-functions-available">$advanced-functions-available</link></code>, <code><link linkend="template-clean-up-archive">ŧ tan:clean-up-archive</link></code>.</para><para><emphasis>Option 2 (TAN-fn-file-archive-extended)</emphasis></para><programlisting>Input: a sequence of documents that each have <code>@_archive-path</code> stamped in the root 
element (the result of <code><link linkend="function-open-docx">tan:open-docx()</link></code>); a resolved uri for the new Word document </programlisting><programlisting>Output: an archive saved at the URL specified by the second parameter </programlisting><programlisting>Ordinarily, this template would be a function, but security reasons dictate that 
<code>&lt;xsl:result-document&gt;</code> always fails in the context of a function. </programlisting><programlisting>In this function, the target subdirectory for the archive must already exist, or 
else you might get an error. </programlisting><para>Used by template <code><link linkend="template-save-docx">Ŧ tan:save-docx</link></code>, <code><link linkend="template-save-xlsx">Ŧ tan:save-xlsx</link></code>.</para><para>Used by function <code><link linkend="function-save-archive">tan:save-archive()</link></code>.</para><para>Relies upon <code><link linkend="variable-advanced-functions-available">$advanced-functions-available</link></code>, <code><link linkend="template-clean-up-archive">ŧ tan:clean-up-archive</link></code>.</para></section>
<section xml:id="template-save-as"><title><code>Ŧ tan:save-as</code></title><para><emphasis>TAN-fn-file-output</emphasis></para><programlisting>Input: any document, perhaps a target URI and target format, and a boolean 
indicating whether every top-level item should appear on its own line. </programlisting><programlisting>The root element's attribute <code>@_target-uri</code> or <code>@save-as</code> supplies the default value, 
which may be overwritten. </programlisting><para>No variables, keys, functions, or named templates depend upon this xsl:template.</para><para>Relies upon <code><link linkend="template-save-file">ŧ tan:save-file</link></code>.</para></section>
<section xml:id="template-save-docx"><title><code>Ŧ tan:save-docx</code></title><para><emphasis>TAN-fn-file-archive-extended</emphasis></para><para>No variables, keys, functions, or named templates depend upon this xsl:template.</para><para>Relies upon <code><link linkend="template-save-archive">Ŧ tan:save-archive</link></code>.</para></section>
<section xml:id="template-save-xlsx"><title><code>Ŧ tan:save-xlsx</code></title><para><emphasis>TAN-fn-file-archive-extended</emphasis></para><para>No variables, keys, functions, or named templates depend upon this xsl:template.</para><para>Relies upon <code><link linkend="template-save-archive">Ŧ tan:save-archive</link></code>.</para></section>
</section>
</section>
<section xml:id="vkft-html"><title>Html</title><section><title>Variables</title><section xml:id="variable-attributes-to-preserve"><title><code>$attributes-to-preserve</code></title><para><emphasis>TAN-fn-html-core</emphasis></para><para>Definition: <code>('id', 'class', 'draggable')</code></para><para>Used by template <code><link linkend="template-tree-to-html">ŧ tan:tree-to-html</link></code>, <code><link linkend="template-prepare-to-convert-to-html-pass-2">ŧ tan:prepare-to-convert-to-html-pass-2</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-excluded-class-characters-regex"><title><code>$tan:excluded-class-characters-regex</code></title><para><emphasis>TAN-fn-html-core</emphasis></para><para>Definition: <code>[&amp;#1;-ÿ-[\s0-9a-zA-Z_-]]</code></para><para>Used by template <code><link linkend="template-prepare-to-convert-to-html-pass-1">ŧ tan:prepare-to-convert-to-html-pass-1</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-global-html-attributes"><title><code>$tan:global-html-attributes</code></title><para><emphasis>TAN-fn-html-core</emphasis></para><para>Definition: <code>'accesskey', 'aria-activedescendant', 'aria-atomic', 'aria-autocomplete',          'aria-busy', 'aria-controls', 'aria-current', 'aria-describedby', 'aria-details',          'aria-disabled', 'aria-dropeffect', 'aria-errormessage', 'aria-expanded', 'aria-flowto',          'aria-grabbed', 'aria-haspopup', 'aria-hidden', 'aria-invalid', 'aria-keyshortcuts',          'aria-label', 'aria-labelledby', 'aria-live', 'aria-orientation', 'aria-owns',          'aria-readonly', 'aria-relevant', 'aria-required', 'aria-roledescription', 'autocapitalize',          'autofocus', 'class', 'contenteditable', 'dir', 'draggable', 'enterkeyhint', 'hidden', 'id',          'inputmode', 'is', 'itemid', 'itemprop', 'itemref', 'itemscope', 'itemtype', 'lang', 'nonce',          'onabort', 'onauxclick', 'onblur', 'oncancel', 'oncanplay', 'oncanplaythrough', 'onchange',          'onclick', 'onclose', 'oncontextmenu', 'oncopy', 'oncuechange', 'oncut', 'ondblclick',          'ondrag', 'ondragend', 'ondragenter', 'ondragleave', 'ondragover', 'ondragstart', 'ondrop',          'ondurationchange', 'onemptied', 'onended', 'onerror', 'onfocus', 'onformdata', 'oninput',          'oninvalid', 'onkeydown', 'onkeypress', 'onkeyup', 'onload', 'onloadeddata',          'onloadedmetadata', 'onloadstart', 'onmousedown', 'onmouseenter', 'onmouseleave',          'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'onpaste', 'onpause', 'onplay',          'onplaying', 'onprogress', 'onratechange', 'onreset', 'onresize', 'onscroll',          'onsecuritypolicyviolation', 'onseeked', 'onseeking', 'onselect', 'onslotchange',          'onstalled', 'onsubmit', 'onsuspend', 'ontimeupdate', 'ontoggle', 'onvolumechange',          'onwaiting', 'onwheel', 'slot', 'spellcheck', 'style', 'tabindex', 'title', 'translate'</code></para><para>Used by template <code><link linkend="template-tree-to-html">ŧ tan:tree-to-html</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-alice-blue"><title><code>$tan:rgb-alice-blue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(240, 248, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-AliceBlue"><title><code>$tan:rgb-AliceBlue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(240, 248, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-antique-white"><title><code>$tan:rgb-antique-white</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(250, 235, 215)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-AntiqueWhite"><title><code>$tan:rgb-AntiqueWhite</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(250, 235, 215)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-AntiqueWhite1"><title><code>$tan:rgb-AntiqueWhite1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 239, 219)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-AntiqueWhite2"><title><code>$tan:rgb-AntiqueWhite2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 223, 204)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-AntiqueWhite3"><title><code>$tan:rgb-AntiqueWhite3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 192, 176)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-AntiqueWhite4"><title><code>$tan:rgb-AntiqueWhite4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 131, 120)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-aquamarine"><title><code>$tan:rgb-aquamarine</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(127, 255, 212)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-aquamarine1"><title><code>$tan:rgb-aquamarine1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(127, 255, 212)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-aquamarine2"><title><code>$tan:rgb-aquamarine2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(118, 238, 198)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-aquamarine3"><title><code>$tan:rgb-aquamarine3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(102, 205, 170)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-aquamarine4"><title><code>$tan:rgb-aquamarine4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(69, 139, 116)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-azure"><title><code>$tan:rgb-azure</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(240, 255, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-azure1"><title><code>$tan:rgb-azure1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(240, 255, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-azure2"><title><code>$tan:rgb-azure2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(224, 238, 238)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-azure3"><title><code>$tan:rgb-azure3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(193, 205, 205)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-azure4"><title><code>$tan:rgb-azure4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(131, 139, 139)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-beige"><title><code>$tan:rgb-beige</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(245, 245, 220)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-bisque"><title><code>$tan:rgb-bisque</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 228, 196)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-bisque1"><title><code>$tan:rgb-bisque1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 228, 196)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-bisque2"><title><code>$tan:rgb-bisque2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 213, 183)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-bisque3"><title><code>$tan:rgb-bisque3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 183, 158)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-bisque4"><title><code>$tan:rgb-bisque4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 125, 107)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-black"><title><code>$tan:rgb-black</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 0, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-blanched-almond"><title><code>$tan:rgb-blanched-almond</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 235, 205)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-BlanchedAlmond"><title><code>$tan:rgb-BlanchedAlmond</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 235, 205)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-blue"><title><code>$tan:rgb-blue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 0, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-blue-violet"><title><code>$tan:rgb-blue-violet</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(138, 43, 226)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-blue1"><title><code>$tan:rgb-blue1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 0, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-blue2"><title><code>$tan:rgb-blue2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 0, 238)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-blue3"><title><code>$tan:rgb-blue3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 0, 205)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-blue4"><title><code>$tan:rgb-blue4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 0, 139)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-BlueViolet"><title><code>$tan:rgb-BlueViolet</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(138, 43, 226)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-brown"><title><code>$tan:rgb-brown</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(165, 42, 42)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-brown1"><title><code>$tan:rgb-brown1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 64, 64)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-brown2"><title><code>$tan:rgb-brown2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 59, 59)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-brown3"><title><code>$tan:rgb-brown3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 51, 51)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-brown4"><title><code>$tan:rgb-brown4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 35, 35)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-burlywood"><title><code>$tan:rgb-burlywood</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(222, 184, 135)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-burlywood1"><title><code>$tan:rgb-burlywood1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 211, 155)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-burlywood2"><title><code>$tan:rgb-burlywood2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 197, 145)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-burlywood3"><title><code>$tan:rgb-burlywood3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 170, 125)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-burlywood4"><title><code>$tan:rgb-burlywood4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 115, 85)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-cadet-blue"><title><code>$tan:rgb-cadet-blue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(95, 158, 160)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-CadetBlue"><title><code>$tan:rgb-CadetBlue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(95, 158, 160)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-CadetBlue1"><title><code>$tan:rgb-CadetBlue1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(152, 245, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-CadetBlue2"><title><code>$tan:rgb-CadetBlue2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(142, 229, 238)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-CadetBlue3"><title><code>$tan:rgb-CadetBlue3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(122, 197, 205)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-CadetBlue4"><title><code>$tan:rgb-CadetBlue4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(83, 134, 139)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-chartreuse"><title><code>$tan:rgb-chartreuse</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(127, 255, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-chartreuse1"><title><code>$tan:rgb-chartreuse1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(127, 255, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-chartreuse2"><title><code>$tan:rgb-chartreuse2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(118, 238, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-chartreuse3"><title><code>$tan:rgb-chartreuse3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(102, 205, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-chartreuse4"><title><code>$tan:rgb-chartreuse4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(69, 139, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-chocolate"><title><code>$tan:rgb-chocolate</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(210, 105, 30)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-chocolate1"><title><code>$tan:rgb-chocolate1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 127, 36)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-chocolate2"><title><code>$tan:rgb-chocolate2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 118, 33)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-chocolate3"><title><code>$tan:rgb-chocolate3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 102, 29)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-chocolate4"><title><code>$tan:rgb-chocolate4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 69, 19)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-coral"><title><code>$tan:rgb-coral</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 127, 80)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-coral1"><title><code>$tan:rgb-coral1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 114, 86)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-coral2"><title><code>$tan:rgb-coral2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 106, 80)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-coral3"><title><code>$tan:rgb-coral3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 91, 69)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-coral4"><title><code>$tan:rgb-coral4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 62, 47)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-cornflower-blue"><title><code>$tan:rgb-cornflower-blue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(100, 149, 237)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-CornflowerBlue"><title><code>$tan:rgb-CornflowerBlue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(100, 149, 237)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-cornsilk"><title><code>$tan:rgb-cornsilk</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 248, 220)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-cornsilk1"><title><code>$tan:rgb-cornsilk1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 248, 220)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-cornsilk2"><title><code>$tan:rgb-cornsilk2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 232, 205)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-cornsilk3"><title><code>$tan:rgb-cornsilk3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 200, 177)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-cornsilk4"><title><code>$tan:rgb-cornsilk4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 136, 120)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-cyan"><title><code>$tan:rgb-cyan</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 255, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-cyan1"><title><code>$tan:rgb-cyan1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 255, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-cyan2"><title><code>$tan:rgb-cyan2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 238, 238)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-cyan3"><title><code>$tan:rgb-cyan3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 205, 205)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-cyan4"><title><code>$tan:rgb-cyan4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 139, 139)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-dark-blue"><title><code>$tan:rgb-dark-blue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 0, 139)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-dark-cyan"><title><code>$tan:rgb-dark-cyan</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 139, 139)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-dark-goldenrod"><title><code>$tan:rgb-dark-goldenrod</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(184, 134, 11)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-dark-gray"><title><code>$tan:rgb-dark-gray</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(169, 169, 169)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-dark-green"><title><code>$tan:rgb-dark-green</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 100, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-dark-grey"><title><code>$tan:rgb-dark-grey</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(169, 169, 169)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-dark-khaki"><title><code>$tan:rgb-dark-khaki</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(189, 183, 107)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-dark-magenta"><title><code>$tan:rgb-dark-magenta</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 0, 139)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-dark-olive-green"><title><code>$tan:rgb-dark-olive-green</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(85, 107, 47)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-dark-orange"><title><code>$tan:rgb-dark-orange</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 140, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-dark-orchid"><title><code>$tan:rgb-dark-orchid</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(153, 50, 204)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-dark-red"><title><code>$tan:rgb-dark-red</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 0, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-dark-salmon"><title><code>$tan:rgb-dark-salmon</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(233, 150, 122)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-dark-sea-green"><title><code>$tan:rgb-dark-sea-green</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(143, 188, 143)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-dark-slate-blue"><title><code>$tan:rgb-dark-slate-blue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(72, 61, 139)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-dark-slate-gray"><title><code>$tan:rgb-dark-slate-gray</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(47, 79, 79)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-dark-slate-grey"><title><code>$tan:rgb-dark-slate-grey</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(47, 79, 79)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-dark-turquoise"><title><code>$tan:rgb-dark-turquoise</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 206, 209)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-dark-violet"><title><code>$tan:rgb-dark-violet</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(148, 0, 211)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkBlue"><title><code>$tan:rgb-DarkBlue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 0, 139)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkCyan"><title><code>$tan:rgb-DarkCyan</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 139, 139)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkGoldenrod"><title><code>$tan:rgb-DarkGoldenrod</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(184, 134, 11)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkGoldenrod1"><title><code>$tan:rgb-DarkGoldenrod1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 185, 15)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkGoldenrod2"><title><code>$tan:rgb-DarkGoldenrod2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 173, 14)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkGoldenrod3"><title><code>$tan:rgb-DarkGoldenrod3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 149, 12)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkGoldenrod4"><title><code>$tan:rgb-DarkGoldenrod4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 101, 8)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkGray"><title><code>$tan:rgb-DarkGray</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(169, 169, 169)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkGreen"><title><code>$tan:rgb-DarkGreen</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 100, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkGrey"><title><code>$tan:rgb-DarkGrey</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(169, 169, 169)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkKhaki"><title><code>$tan:rgb-DarkKhaki</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(189, 183, 107)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkMagenta"><title><code>$tan:rgb-DarkMagenta</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 0, 139)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkOliveGreen"><title><code>$tan:rgb-DarkOliveGreen</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(85, 107, 47)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkOliveGreen1"><title><code>$tan:rgb-DarkOliveGreen1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(202, 255, 112)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkOliveGreen2"><title><code>$tan:rgb-DarkOliveGreen2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(188, 238, 104)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkOliveGreen3"><title><code>$tan:rgb-DarkOliveGreen3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(162, 205, 90)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkOliveGreen4"><title><code>$tan:rgb-DarkOliveGreen4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(110, 139, 61)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkOrange"><title><code>$tan:rgb-DarkOrange</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 140, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkOrange1"><title><code>$tan:rgb-DarkOrange1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 127, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkOrange2"><title><code>$tan:rgb-DarkOrange2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 118, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkOrange3"><title><code>$tan:rgb-DarkOrange3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 102, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkOrange4"><title><code>$tan:rgb-DarkOrange4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 69, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkOrchid"><title><code>$tan:rgb-DarkOrchid</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(153, 50, 204)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkOrchid1"><title><code>$tan:rgb-DarkOrchid1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(191, 62, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkOrchid2"><title><code>$tan:rgb-DarkOrchid2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(178, 58, 238)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkOrchid3"><title><code>$tan:rgb-DarkOrchid3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(154, 50, 205)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkOrchid4"><title><code>$tan:rgb-DarkOrchid4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(104, 34, 139)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkRed"><title><code>$tan:rgb-DarkRed</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 0, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkSalmon"><title><code>$tan:rgb-DarkSalmon</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(233, 150, 122)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkSeaGreen"><title><code>$tan:rgb-DarkSeaGreen</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(143, 188, 143)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkSeaGreen1"><title><code>$tan:rgb-DarkSeaGreen1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(193, 255, 193)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkSeaGreen2"><title><code>$tan:rgb-DarkSeaGreen2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(180, 238, 180)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkSeaGreen3"><title><code>$tan:rgb-DarkSeaGreen3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(155, 205, 155)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkSeaGreen4"><title><code>$tan:rgb-DarkSeaGreen4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(105, 139, 105)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkSlateBlue"><title><code>$tan:rgb-DarkSlateBlue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(72, 61, 139)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkSlateGray"><title><code>$tan:rgb-DarkSlateGray</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(47, 79, 79)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkSlateGray1"><title><code>$tan:rgb-DarkSlateGray1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(151, 255, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkSlateGray2"><title><code>$tan:rgb-DarkSlateGray2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(141, 238, 238)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkSlateGray3"><title><code>$tan:rgb-DarkSlateGray3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(121, 205, 205)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkSlateGray4"><title><code>$tan:rgb-DarkSlateGray4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(82, 139, 139)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkSlateGrey"><title><code>$tan:rgb-DarkSlateGrey</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(47, 79, 79)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkTurquoise"><title><code>$tan:rgb-DarkTurquoise</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 206, 209)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DarkViolet"><title><code>$tan:rgb-DarkViolet</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(148, 0, 211)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-deep-pink"><title><code>$tan:rgb-deep-pink</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 20, 147)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-deep-sky-blue"><title><code>$tan:rgb-deep-sky-blue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 191, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DeepPink"><title><code>$tan:rgb-DeepPink</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 20, 147)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DeepPink1"><title><code>$tan:rgb-DeepPink1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 20, 147)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DeepPink2"><title><code>$tan:rgb-DeepPink2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 18, 137)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DeepPink3"><title><code>$tan:rgb-DeepPink3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 16, 118)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DeepPink4"><title><code>$tan:rgb-DeepPink4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 10, 80)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DeepSkyBlue"><title><code>$tan:rgb-DeepSkyBlue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 191, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DeepSkyBlue1"><title><code>$tan:rgb-DeepSkyBlue1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 191, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DeepSkyBlue2"><title><code>$tan:rgb-DeepSkyBlue2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 178, 238)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DeepSkyBlue3"><title><code>$tan:rgb-DeepSkyBlue3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 154, 205)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DeepSkyBlue4"><title><code>$tan:rgb-DeepSkyBlue4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 104, 139)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-dim-gray"><title><code>$tan:rgb-dim-gray</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(105, 105, 105)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-dim-grey"><title><code>$tan:rgb-dim-grey</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(105, 105, 105)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DimGray"><title><code>$tan:rgb-DimGray</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(105, 105, 105)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DimGrey"><title><code>$tan:rgb-DimGrey</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(105, 105, 105)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-dodger-blue"><title><code>$tan:rgb-dodger-blue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(30, 144, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DodgerBlue"><title><code>$tan:rgb-DodgerBlue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(30, 144, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DodgerBlue1"><title><code>$tan:rgb-DodgerBlue1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(30, 144, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DodgerBlue2"><title><code>$tan:rgb-DodgerBlue2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(28, 134, 238)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DodgerBlue3"><title><code>$tan:rgb-DodgerBlue3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(24, 116, 205)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-DodgerBlue4"><title><code>$tan:rgb-DodgerBlue4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(16, 78, 139)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-firebrick"><title><code>$tan:rgb-firebrick</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(178, 34, 34)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-firebrick1"><title><code>$tan:rgb-firebrick1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 48, 48)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-firebrick2"><title><code>$tan:rgb-firebrick2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 44, 44)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-firebrick3"><title><code>$tan:rgb-firebrick3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 38, 38)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-firebrick4"><title><code>$tan:rgb-firebrick4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 26, 26)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-floral-white"><title><code>$tan:rgb-floral-white</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 250, 240)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-FloralWhite"><title><code>$tan:rgb-FloralWhite</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 250, 240)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-forest-green"><title><code>$tan:rgb-forest-green</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(34, 139, 34)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-ForestGreen"><title><code>$tan:rgb-ForestGreen</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(34, 139, 34)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gainsboro"><title><code>$tan:rgb-gainsboro</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(220, 220, 220)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-ghost-white"><title><code>$tan:rgb-ghost-white</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(248, 248, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-GhostWhite"><title><code>$tan:rgb-GhostWhite</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(248, 248, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gold"><title><code>$tan:rgb-gold</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 215, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gold1"><title><code>$tan:rgb-gold1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 215, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gold2"><title><code>$tan:rgb-gold2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 201, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gold3"><title><code>$tan:rgb-gold3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 173, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gold4"><title><code>$tan:rgb-gold4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 117, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-goldenrod"><title><code>$tan:rgb-goldenrod</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(218, 165, 32)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-goldenrod1"><title><code>$tan:rgb-goldenrod1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 193, 37)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-goldenrod2"><title><code>$tan:rgb-goldenrod2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 180, 34)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-goldenrod3"><title><code>$tan:rgb-goldenrod3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 155, 29)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-goldenrod4"><title><code>$tan:rgb-goldenrod4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 105, 20)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray"><title><code>$tan:rgb-gray</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(190, 190, 190)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray0"><title><code>$tan:rgb-gray0</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 0, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray1"><title><code>$tan:rgb-gray1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(3, 3, 3)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray10"><title><code>$tan:rgb-gray10</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(26, 26, 26)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray100"><title><code>$tan:rgb-gray100</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 255, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray11"><title><code>$tan:rgb-gray11</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(28, 28, 28)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray12"><title><code>$tan:rgb-gray12</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(31, 31, 31)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray13"><title><code>$tan:rgb-gray13</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(33, 33, 33)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray14"><title><code>$tan:rgb-gray14</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(36, 36, 36)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray15"><title><code>$tan:rgb-gray15</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(38, 38, 38)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray16"><title><code>$tan:rgb-gray16</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(41, 41, 41)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray17"><title><code>$tan:rgb-gray17</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(43, 43, 43)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray18"><title><code>$tan:rgb-gray18</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(46, 46, 46)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray19"><title><code>$tan:rgb-gray19</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(48, 48, 48)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray2"><title><code>$tan:rgb-gray2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(5, 5, 5)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray20"><title><code>$tan:rgb-gray20</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(51, 51, 51)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray21"><title><code>$tan:rgb-gray21</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(54, 54, 54)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray22"><title><code>$tan:rgb-gray22</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(56, 56, 56)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray23"><title><code>$tan:rgb-gray23</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(59, 59, 59)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray24"><title><code>$tan:rgb-gray24</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(61, 61, 61)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray25"><title><code>$tan:rgb-gray25</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(64, 64, 64)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray26"><title><code>$tan:rgb-gray26</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(66, 66, 66)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray27"><title><code>$tan:rgb-gray27</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(69, 69, 69)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray28"><title><code>$tan:rgb-gray28</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(71, 71, 71)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray29"><title><code>$tan:rgb-gray29</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(74, 74, 74)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray3"><title><code>$tan:rgb-gray3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(8, 8, 8)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray30"><title><code>$tan:rgb-gray30</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(77, 77, 77)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray31"><title><code>$tan:rgb-gray31</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(79, 79, 79)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray32"><title><code>$tan:rgb-gray32</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(82, 82, 82)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray33"><title><code>$tan:rgb-gray33</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(84, 84, 84)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray34"><title><code>$tan:rgb-gray34</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(87, 87, 87)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray35"><title><code>$tan:rgb-gray35</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(89, 89, 89)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray36"><title><code>$tan:rgb-gray36</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(92, 92, 92)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray37"><title><code>$tan:rgb-gray37</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(94, 94, 94)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray38"><title><code>$tan:rgb-gray38</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(97, 97, 97)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray39"><title><code>$tan:rgb-gray39</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(99, 99, 99)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray4"><title><code>$tan:rgb-gray4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(10, 10, 10)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray40"><title><code>$tan:rgb-gray40</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(102, 102, 102)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray41"><title><code>$tan:rgb-gray41</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(105, 105, 105)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray42"><title><code>$tan:rgb-gray42</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(107, 107, 107)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray43"><title><code>$tan:rgb-gray43</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(110, 110, 110)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray44"><title><code>$tan:rgb-gray44</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(112, 112, 112)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray45"><title><code>$tan:rgb-gray45</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(115, 115, 115)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray46"><title><code>$tan:rgb-gray46</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(117, 117, 117)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray47"><title><code>$tan:rgb-gray47</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(120, 120, 120)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray48"><title><code>$tan:rgb-gray48</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(122, 122, 122)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray49"><title><code>$tan:rgb-gray49</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(125, 125, 125)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray5"><title><code>$tan:rgb-gray5</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(13, 13, 13)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray50"><title><code>$tan:rgb-gray50</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(127, 127, 127)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray51"><title><code>$tan:rgb-gray51</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(130, 130, 130)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray52"><title><code>$tan:rgb-gray52</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(133, 133, 133)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray53"><title><code>$tan:rgb-gray53</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(135, 135, 135)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray54"><title><code>$tan:rgb-gray54</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(138, 138, 138)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray55"><title><code>$tan:rgb-gray55</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(140, 140, 140)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray56"><title><code>$tan:rgb-gray56</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(143, 143, 143)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray57"><title><code>$tan:rgb-gray57</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(145, 145, 145)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray58"><title><code>$tan:rgb-gray58</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(148, 148, 148)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray59"><title><code>$tan:rgb-gray59</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(150, 150, 150)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray6"><title><code>$tan:rgb-gray6</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(15, 15, 15)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray60"><title><code>$tan:rgb-gray60</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(153, 153, 153)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray61"><title><code>$tan:rgb-gray61</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(156, 156, 156)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray62"><title><code>$tan:rgb-gray62</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(158, 158, 158)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray63"><title><code>$tan:rgb-gray63</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(161, 161, 161)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray64"><title><code>$tan:rgb-gray64</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(163, 163, 163)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray65"><title><code>$tan:rgb-gray65</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(166, 166, 166)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray66"><title><code>$tan:rgb-gray66</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(168, 168, 168)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray67"><title><code>$tan:rgb-gray67</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(171, 171, 171)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray68"><title><code>$tan:rgb-gray68</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(173, 173, 173)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray69"><title><code>$tan:rgb-gray69</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(176, 176, 176)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray7"><title><code>$tan:rgb-gray7</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(18, 18, 18)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray70"><title><code>$tan:rgb-gray70</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(179, 179, 179)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray71"><title><code>$tan:rgb-gray71</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(181, 181, 181)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray72"><title><code>$tan:rgb-gray72</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(184, 184, 184)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray73"><title><code>$tan:rgb-gray73</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(186, 186, 186)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray74"><title><code>$tan:rgb-gray74</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(189, 189, 189)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray75"><title><code>$tan:rgb-gray75</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(191, 191, 191)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray76"><title><code>$tan:rgb-gray76</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(194, 194, 194)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray77"><title><code>$tan:rgb-gray77</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(196, 196, 196)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray78"><title><code>$tan:rgb-gray78</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(199, 199, 199)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray79"><title><code>$tan:rgb-gray79</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(201, 201, 201)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray8"><title><code>$tan:rgb-gray8</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(20, 20, 20)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray80"><title><code>$tan:rgb-gray80</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(204, 204, 204)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray81"><title><code>$tan:rgb-gray81</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(207, 207, 207)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray82"><title><code>$tan:rgb-gray82</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(209, 209, 209)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray83"><title><code>$tan:rgb-gray83</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(212, 212, 212)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray84"><title><code>$tan:rgb-gray84</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(214, 214, 214)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray85"><title><code>$tan:rgb-gray85</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(217, 217, 217)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray86"><title><code>$tan:rgb-gray86</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(219, 219, 219)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray87"><title><code>$tan:rgb-gray87</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(222, 222, 222)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray88"><title><code>$tan:rgb-gray88</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(224, 224, 224)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray89"><title><code>$tan:rgb-gray89</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(227, 227, 227)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray9"><title><code>$tan:rgb-gray9</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(23, 23, 23)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray90"><title><code>$tan:rgb-gray90</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(229, 229, 229)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray91"><title><code>$tan:rgb-gray91</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(232, 232, 232)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray92"><title><code>$tan:rgb-gray92</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(235, 235, 235)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray93"><title><code>$tan:rgb-gray93</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(237, 237, 237)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray94"><title><code>$tan:rgb-gray94</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(240, 240, 240)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray95"><title><code>$tan:rgb-gray95</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(242, 242, 242)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray96"><title><code>$tan:rgb-gray96</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(245, 245, 245)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray97"><title><code>$tan:rgb-gray97</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(247, 247, 247)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray98"><title><code>$tan:rgb-gray98</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(250, 250, 250)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-gray99"><title><code>$tan:rgb-gray99</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(252, 252, 252)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-green"><title><code>$tan:rgb-green</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 255, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-green-yellow"><title><code>$tan:rgb-green-yellow</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(173, 255, 47)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-green1"><title><code>$tan:rgb-green1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 255, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-green2"><title><code>$tan:rgb-green2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 238, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-green3"><title><code>$tan:rgb-green3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 205, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-green4"><title><code>$tan:rgb-green4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 139, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-GreenYellow"><title><code>$tan:rgb-GreenYellow</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(173, 255, 47)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey"><title><code>$tan:rgb-grey</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(190, 190, 190)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey0"><title><code>$tan:rgb-grey0</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 0, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey1"><title><code>$tan:rgb-grey1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(3, 3, 3)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey10"><title><code>$tan:rgb-grey10</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(26, 26, 26)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey100"><title><code>$tan:rgb-grey100</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 255, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey11"><title><code>$tan:rgb-grey11</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(28, 28, 28)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey12"><title><code>$tan:rgb-grey12</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(31, 31, 31)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey13"><title><code>$tan:rgb-grey13</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(33, 33, 33)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey14"><title><code>$tan:rgb-grey14</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(36, 36, 36)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey15"><title><code>$tan:rgb-grey15</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(38, 38, 38)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey16"><title><code>$tan:rgb-grey16</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(41, 41, 41)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey17"><title><code>$tan:rgb-grey17</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(43, 43, 43)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey18"><title><code>$tan:rgb-grey18</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(46, 46, 46)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey19"><title><code>$tan:rgb-grey19</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(48, 48, 48)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey2"><title><code>$tan:rgb-grey2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(5, 5, 5)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey20"><title><code>$tan:rgb-grey20</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(51, 51, 51)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey21"><title><code>$tan:rgb-grey21</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(54, 54, 54)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey22"><title><code>$tan:rgb-grey22</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(56, 56, 56)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey23"><title><code>$tan:rgb-grey23</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(59, 59, 59)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey24"><title><code>$tan:rgb-grey24</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(61, 61, 61)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey25"><title><code>$tan:rgb-grey25</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(64, 64, 64)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey26"><title><code>$tan:rgb-grey26</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(66, 66, 66)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey27"><title><code>$tan:rgb-grey27</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(69, 69, 69)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey28"><title><code>$tan:rgb-grey28</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(71, 71, 71)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey29"><title><code>$tan:rgb-grey29</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(74, 74, 74)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey3"><title><code>$tan:rgb-grey3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(8, 8, 8)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey30"><title><code>$tan:rgb-grey30</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(77, 77, 77)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey31"><title><code>$tan:rgb-grey31</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(79, 79, 79)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey32"><title><code>$tan:rgb-grey32</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(82, 82, 82)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey33"><title><code>$tan:rgb-grey33</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(84, 84, 84)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey34"><title><code>$tan:rgb-grey34</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(87, 87, 87)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey35"><title><code>$tan:rgb-grey35</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(89, 89, 89)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey36"><title><code>$tan:rgb-grey36</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(92, 92, 92)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey37"><title><code>$tan:rgb-grey37</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(94, 94, 94)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey38"><title><code>$tan:rgb-grey38</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(97, 97, 97)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey39"><title><code>$tan:rgb-grey39</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(99, 99, 99)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey4"><title><code>$tan:rgb-grey4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(10, 10, 10)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey40"><title><code>$tan:rgb-grey40</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(102, 102, 102)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey41"><title><code>$tan:rgb-grey41</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(105, 105, 105)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey42"><title><code>$tan:rgb-grey42</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(107, 107, 107)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey43"><title><code>$tan:rgb-grey43</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(110, 110, 110)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey44"><title><code>$tan:rgb-grey44</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(112, 112, 112)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey45"><title><code>$tan:rgb-grey45</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(115, 115, 115)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey46"><title><code>$tan:rgb-grey46</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(117, 117, 117)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey47"><title><code>$tan:rgb-grey47</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(120, 120, 120)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey48"><title><code>$tan:rgb-grey48</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(122, 122, 122)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey49"><title><code>$tan:rgb-grey49</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(125, 125, 125)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey5"><title><code>$tan:rgb-grey5</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(13, 13, 13)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey50"><title><code>$tan:rgb-grey50</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(127, 127, 127)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey51"><title><code>$tan:rgb-grey51</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(130, 130, 130)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey52"><title><code>$tan:rgb-grey52</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(133, 133, 133)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey53"><title><code>$tan:rgb-grey53</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(135, 135, 135)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey54"><title><code>$tan:rgb-grey54</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(138, 138, 138)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey55"><title><code>$tan:rgb-grey55</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(140, 140, 140)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey56"><title><code>$tan:rgb-grey56</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(143, 143, 143)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey57"><title><code>$tan:rgb-grey57</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(145, 145, 145)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey58"><title><code>$tan:rgb-grey58</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(148, 148, 148)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey59"><title><code>$tan:rgb-grey59</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(150, 150, 150)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey6"><title><code>$tan:rgb-grey6</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(15, 15, 15)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey60"><title><code>$tan:rgb-grey60</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(153, 153, 153)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey61"><title><code>$tan:rgb-grey61</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(156, 156, 156)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey62"><title><code>$tan:rgb-grey62</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(158, 158, 158)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey63"><title><code>$tan:rgb-grey63</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(161, 161, 161)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey64"><title><code>$tan:rgb-grey64</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(163, 163, 163)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey65"><title><code>$tan:rgb-grey65</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(166, 166, 166)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey66"><title><code>$tan:rgb-grey66</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(168, 168, 168)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey67"><title><code>$tan:rgb-grey67</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(171, 171, 171)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey68"><title><code>$tan:rgb-grey68</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(173, 173, 173)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey69"><title><code>$tan:rgb-grey69</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(176, 176, 176)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey7"><title><code>$tan:rgb-grey7</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(18, 18, 18)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey70"><title><code>$tan:rgb-grey70</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(179, 179, 179)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey71"><title><code>$tan:rgb-grey71</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(181, 181, 181)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey72"><title><code>$tan:rgb-grey72</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(184, 184, 184)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey73"><title><code>$tan:rgb-grey73</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(186, 186, 186)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey74"><title><code>$tan:rgb-grey74</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(189, 189, 189)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey75"><title><code>$tan:rgb-grey75</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(191, 191, 191)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey76"><title><code>$tan:rgb-grey76</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(194, 194, 194)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey77"><title><code>$tan:rgb-grey77</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(196, 196, 196)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey78"><title><code>$tan:rgb-grey78</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(199, 199, 199)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey79"><title><code>$tan:rgb-grey79</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(201, 201, 201)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey8"><title><code>$tan:rgb-grey8</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(20, 20, 20)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey80"><title><code>$tan:rgb-grey80</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(204, 204, 204)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey81"><title><code>$tan:rgb-grey81</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(207, 207, 207)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey82"><title><code>$tan:rgb-grey82</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(209, 209, 209)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey83"><title><code>$tan:rgb-grey83</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(212, 212, 212)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey84"><title><code>$tan:rgb-grey84</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(214, 214, 214)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey85"><title><code>$tan:rgb-grey85</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(217, 217, 217)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey86"><title><code>$tan:rgb-grey86</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(219, 219, 219)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey87"><title><code>$tan:rgb-grey87</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(222, 222, 222)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey88"><title><code>$tan:rgb-grey88</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(224, 224, 224)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey89"><title><code>$tan:rgb-grey89</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(227, 227, 227)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey9"><title><code>$tan:rgb-grey9</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(23, 23, 23)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey90"><title><code>$tan:rgb-grey90</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(229, 229, 229)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey91"><title><code>$tan:rgb-grey91</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(232, 232, 232)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey92"><title><code>$tan:rgb-grey92</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(235, 235, 235)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey93"><title><code>$tan:rgb-grey93</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(237, 237, 237)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey94"><title><code>$tan:rgb-grey94</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(240, 240, 240)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey95"><title><code>$tan:rgb-grey95</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(242, 242, 242)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey96"><title><code>$tan:rgb-grey96</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(245, 245, 245)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey97"><title><code>$tan:rgb-grey97</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(247, 247, 247)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey98"><title><code>$tan:rgb-grey98</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(250, 250, 250)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-grey99"><title><code>$tan:rgb-grey99</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(252, 252, 252)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-honeydew"><title><code>$tan:rgb-honeydew</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(240, 255, 240)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-honeydew1"><title><code>$tan:rgb-honeydew1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(240, 255, 240)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-honeydew2"><title><code>$tan:rgb-honeydew2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(224, 238, 224)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-honeydew3"><title><code>$tan:rgb-honeydew3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(193, 205, 193)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-honeydew4"><title><code>$tan:rgb-honeydew4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(131, 139, 131)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-hot-pink"><title><code>$tan:rgb-hot-pink</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 105, 180)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-HotPink"><title><code>$tan:rgb-HotPink</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 105, 180)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-HotPink1"><title><code>$tan:rgb-HotPink1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 110, 180)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-HotPink2"><title><code>$tan:rgb-HotPink2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 106, 167)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-HotPink3"><title><code>$tan:rgb-HotPink3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 96, 144)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-HotPink4"><title><code>$tan:rgb-HotPink4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 58, 98)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-indian-red"><title><code>$tan:rgb-indian-red</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 92, 92)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-IndianRed"><title><code>$tan:rgb-IndianRed</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 92, 92)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-IndianRed1"><title><code>$tan:rgb-IndianRed1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 106, 106)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-IndianRed2"><title><code>$tan:rgb-IndianRed2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 99, 99)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-IndianRed3"><title><code>$tan:rgb-IndianRed3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 85, 85)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-IndianRed4"><title><code>$tan:rgb-IndianRed4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 58, 58)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-ivory"><title><code>$tan:rgb-ivory</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 255, 240)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-ivory1"><title><code>$tan:rgb-ivory1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 255, 240)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-ivory2"><title><code>$tan:rgb-ivory2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 238, 224)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-ivory3"><title><code>$tan:rgb-ivory3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 205, 193)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-ivory4"><title><code>$tan:rgb-ivory4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 139, 131)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-khaki"><title><code>$tan:rgb-khaki</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(240, 230, 140)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-khaki1"><title><code>$tan:rgb-khaki1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 246, 143)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-khaki2"><title><code>$tan:rgb-khaki2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 230, 133)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-khaki3"><title><code>$tan:rgb-khaki3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 198, 115)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-khaki4"><title><code>$tan:rgb-khaki4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 134, 78)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-lavender"><title><code>$tan:rgb-lavender</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(230, 230, 250)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-lavender-blush"><title><code>$tan:rgb-lavender-blush</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 240, 245)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LavenderBlush"><title><code>$tan:rgb-LavenderBlush</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 240, 245)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LavenderBlush1"><title><code>$tan:rgb-LavenderBlush1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 240, 245)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LavenderBlush2"><title><code>$tan:rgb-LavenderBlush2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 224, 229)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LavenderBlush3"><title><code>$tan:rgb-LavenderBlush3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 193, 197)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LavenderBlush4"><title><code>$tan:rgb-LavenderBlush4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 131, 134)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-lawn-green"><title><code>$tan:rgb-lawn-green</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(124, 252, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LawnGreen"><title><code>$tan:rgb-LawnGreen</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(124, 252, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-lemon-chiffon"><title><code>$tan:rgb-lemon-chiffon</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 250, 205)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LemonChiffon"><title><code>$tan:rgb-LemonChiffon</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 250, 205)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LemonChiffon1"><title><code>$tan:rgb-LemonChiffon1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 250, 205)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LemonChiffon2"><title><code>$tan:rgb-LemonChiffon2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 233, 191)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LemonChiffon3"><title><code>$tan:rgb-LemonChiffon3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 201, 165)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LemonChiffon4"><title><code>$tan:rgb-LemonChiffon4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 137, 112)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-light-blue"><title><code>$tan:rgb-light-blue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(173, 216, 230)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-light-coral"><title><code>$tan:rgb-light-coral</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(240, 128, 128)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-light-cyan"><title><code>$tan:rgb-light-cyan</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(224, 255, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-light-goldenrod"><title><code>$tan:rgb-light-goldenrod</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 221, 130)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-light-goldenrod-yellow"><title><code>$tan:rgb-light-goldenrod-yellow</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(250, 250, 210)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-light-gray"><title><code>$tan:rgb-light-gray</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(211, 211, 211)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-light-green"><title><code>$tan:rgb-light-green</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(144, 238, 144)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-light-grey"><title><code>$tan:rgb-light-grey</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(211, 211, 211)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-light-pink"><title><code>$tan:rgb-light-pink</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 182, 193)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-light-salmon"><title><code>$tan:rgb-light-salmon</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 160, 122)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-light-sea-green"><title><code>$tan:rgb-light-sea-green</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(32, 178, 170)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-light-sky-blue"><title><code>$tan:rgb-light-sky-blue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(135, 206, 250)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-light-slate-blue"><title><code>$tan:rgb-light-slate-blue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(132, 112, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-light-slate-gray"><title><code>$tan:rgb-light-slate-gray</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(119, 136, 153)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-light-slate-grey"><title><code>$tan:rgb-light-slate-grey</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(119, 136, 153)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-light-steel-blue"><title><code>$tan:rgb-light-steel-blue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(176, 196, 222)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-light-yellow"><title><code>$tan:rgb-light-yellow</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 255, 224)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightBlue"><title><code>$tan:rgb-LightBlue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(173, 216, 230)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightBlue1"><title><code>$tan:rgb-LightBlue1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(191, 239, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightBlue2"><title><code>$tan:rgb-LightBlue2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(178, 223, 238)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightBlue3"><title><code>$tan:rgb-LightBlue3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(154, 192, 205)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightBlue4"><title><code>$tan:rgb-LightBlue4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(104, 131, 139)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightCoral"><title><code>$tan:rgb-LightCoral</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(240, 128, 128)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightCyan"><title><code>$tan:rgb-LightCyan</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(224, 255, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightCyan1"><title><code>$tan:rgb-LightCyan1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(224, 255, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightCyan2"><title><code>$tan:rgb-LightCyan2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(209, 238, 238)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightCyan3"><title><code>$tan:rgb-LightCyan3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(180, 205, 205)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightCyan4"><title><code>$tan:rgb-LightCyan4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(122, 139, 139)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightGoldenrod"><title><code>$tan:rgb-LightGoldenrod</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 221, 130)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightGoldenrod1"><title><code>$tan:rgb-LightGoldenrod1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 236, 139)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightGoldenrod2"><title><code>$tan:rgb-LightGoldenrod2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 220, 130)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightGoldenrod3"><title><code>$tan:rgb-LightGoldenrod3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 190, 112)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightGoldenrod4"><title><code>$tan:rgb-LightGoldenrod4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 129, 76)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightGoldenrodYellow"><title><code>$tan:rgb-LightGoldenrodYellow</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(250, 250, 210)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightGray"><title><code>$tan:rgb-LightGray</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(211, 211, 211)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightGreen"><title><code>$tan:rgb-LightGreen</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(144, 238, 144)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightGrey"><title><code>$tan:rgb-LightGrey</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(211, 211, 211)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightPink"><title><code>$tan:rgb-LightPink</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 182, 193)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightPink1"><title><code>$tan:rgb-LightPink1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 174, 185)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightPink2"><title><code>$tan:rgb-LightPink2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 162, 173)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightPink3"><title><code>$tan:rgb-LightPink3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 140, 149)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightPink4"><title><code>$tan:rgb-LightPink4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 95, 101)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightSalmon"><title><code>$tan:rgb-LightSalmon</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 160, 122)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightSalmon1"><title><code>$tan:rgb-LightSalmon1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 160, 122)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightSalmon2"><title><code>$tan:rgb-LightSalmon2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 149, 114)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightSalmon3"><title><code>$tan:rgb-LightSalmon3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 129, 98)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightSalmon4"><title><code>$tan:rgb-LightSalmon4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 87, 66)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightSeaGreen"><title><code>$tan:rgb-LightSeaGreen</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(32, 178, 170)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightSkyBlue"><title><code>$tan:rgb-LightSkyBlue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(135, 206, 250)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightSkyBlue1"><title><code>$tan:rgb-LightSkyBlue1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(176, 226, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightSkyBlue2"><title><code>$tan:rgb-LightSkyBlue2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(164, 211, 238)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightSkyBlue3"><title><code>$tan:rgb-LightSkyBlue3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(141, 182, 205)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightSkyBlue4"><title><code>$tan:rgb-LightSkyBlue4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(96, 123, 139)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightSlateBlue"><title><code>$tan:rgb-LightSlateBlue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(132, 112, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightSlateGray"><title><code>$tan:rgb-LightSlateGray</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(119, 136, 153)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightSlateGrey"><title><code>$tan:rgb-LightSlateGrey</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(119, 136, 153)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightSteelBlue"><title><code>$tan:rgb-LightSteelBlue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(176, 196, 222)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightSteelBlue1"><title><code>$tan:rgb-LightSteelBlue1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(202, 225, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightSteelBlue2"><title><code>$tan:rgb-LightSteelBlue2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(188, 210, 238)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightSteelBlue3"><title><code>$tan:rgb-LightSteelBlue3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(162, 181, 205)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightSteelBlue4"><title><code>$tan:rgb-LightSteelBlue4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(110, 123, 139)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightYellow"><title><code>$tan:rgb-LightYellow</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 255, 224)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightYellow1"><title><code>$tan:rgb-LightYellow1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 255, 224)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightYellow2"><title><code>$tan:rgb-LightYellow2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 238, 209)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightYellow3"><title><code>$tan:rgb-LightYellow3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 205, 180)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LightYellow4"><title><code>$tan:rgb-LightYellow4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 139, 122)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-lime-green"><title><code>$tan:rgb-lime-green</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(50, 205, 50)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-LimeGreen"><title><code>$tan:rgb-LimeGreen</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(50, 205, 50)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-linen"><title><code>$tan:rgb-linen</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(250, 240, 230)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-magenta"><title><code>$tan:rgb-magenta</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 0, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-magenta1"><title><code>$tan:rgb-magenta1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 0, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-magenta2"><title><code>$tan:rgb-magenta2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 0, 238)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-magenta3"><title><code>$tan:rgb-magenta3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 0, 205)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-magenta4"><title><code>$tan:rgb-magenta4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 0, 139)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-maroon"><title><code>$tan:rgb-maroon</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(176, 48, 96)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-maroon1"><title><code>$tan:rgb-maroon1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 52, 179)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-maroon2"><title><code>$tan:rgb-maroon2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 48, 167)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-maroon3"><title><code>$tan:rgb-maroon3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 41, 144)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-maroon4"><title><code>$tan:rgb-maroon4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 28, 98)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-medium-aquamarine"><title><code>$tan:rgb-medium-aquamarine</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(102, 205, 170)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-medium-blue"><title><code>$tan:rgb-medium-blue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 0, 205)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-medium-orchid"><title><code>$tan:rgb-medium-orchid</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(186, 85, 211)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-medium-purple"><title><code>$tan:rgb-medium-purple</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(147, 112, 219)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-medium-sea-green"><title><code>$tan:rgb-medium-sea-green</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(60, 179, 113)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-medium-slate-blue"><title><code>$tan:rgb-medium-slate-blue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(123, 104, 238)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-medium-spring-green"><title><code>$tan:rgb-medium-spring-green</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 250, 154)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-medium-turquoise"><title><code>$tan:rgb-medium-turquoise</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(72, 209, 204)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-medium-violet-red"><title><code>$tan:rgb-medium-violet-red</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(199, 21, 133)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-MediumAquamarine"><title><code>$tan:rgb-MediumAquamarine</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(102, 205, 170)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-MediumBlue"><title><code>$tan:rgb-MediumBlue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 0, 205)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-MediumOrchid"><title><code>$tan:rgb-MediumOrchid</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(186, 85, 211)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-MediumOrchid1"><title><code>$tan:rgb-MediumOrchid1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(224, 102, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-MediumOrchid2"><title><code>$tan:rgb-MediumOrchid2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(209, 95, 238)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-MediumOrchid3"><title><code>$tan:rgb-MediumOrchid3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(180, 82, 205)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-MediumOrchid4"><title><code>$tan:rgb-MediumOrchid4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(122, 55, 139)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-MediumPurple"><title><code>$tan:rgb-MediumPurple</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(147, 112, 219)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-MediumPurple1"><title><code>$tan:rgb-MediumPurple1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(171, 130, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-MediumPurple2"><title><code>$tan:rgb-MediumPurple2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(159, 121, 238)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-MediumPurple3"><title><code>$tan:rgb-MediumPurple3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(137, 104, 205)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-MediumPurple4"><title><code>$tan:rgb-MediumPurple4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(93, 71, 139)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-MediumSeaGreen"><title><code>$tan:rgb-MediumSeaGreen</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(60, 179, 113)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-MediumSlateBlue"><title><code>$tan:rgb-MediumSlateBlue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(123, 104, 238)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-MediumSpringGreen"><title><code>$tan:rgb-MediumSpringGreen</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 250, 154)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-MediumTurquoise"><title><code>$tan:rgb-MediumTurquoise</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(72, 209, 204)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-MediumVioletRed"><title><code>$tan:rgb-MediumVioletRed</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(199, 21, 133)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-midnight-blue"><title><code>$tan:rgb-midnight-blue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(25, 25, 112)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-MidnightBlue"><title><code>$tan:rgb-MidnightBlue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(25, 25, 112)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-mint-cream"><title><code>$tan:rgb-mint-cream</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(245, 255, 250)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-MintCream"><title><code>$tan:rgb-MintCream</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(245, 255, 250)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-misty-rose"><title><code>$tan:rgb-misty-rose</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 228, 225)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-MistyRose"><title><code>$tan:rgb-MistyRose</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 228, 225)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-MistyRose1"><title><code>$tan:rgb-MistyRose1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 228, 225)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-MistyRose2"><title><code>$tan:rgb-MistyRose2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 213, 210)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-MistyRose3"><title><code>$tan:rgb-MistyRose3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 183, 181)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-MistyRose4"><title><code>$tan:rgb-MistyRose4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 125, 123)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-moccasin"><title><code>$tan:rgb-moccasin</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 228, 181)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-navajo-white"><title><code>$tan:rgb-navajo-white</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 222, 173)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-NavajoWhite"><title><code>$tan:rgb-NavajoWhite</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 222, 173)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-NavajoWhite1"><title><code>$tan:rgb-NavajoWhite1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 222, 173)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-NavajoWhite2"><title><code>$tan:rgb-NavajoWhite2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 207, 161)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-NavajoWhite3"><title><code>$tan:rgb-NavajoWhite3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 179, 139)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-NavajoWhite4"><title><code>$tan:rgb-NavajoWhite4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 121, 94)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-navy"><title><code>$tan:rgb-navy</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 0, 128)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-navy-blue"><title><code>$tan:rgb-navy-blue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 0, 128)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-NavyBlue"><title><code>$tan:rgb-NavyBlue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 0, 128)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-old-lace"><title><code>$tan:rgb-old-lace</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(253, 245, 230)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-OldLace"><title><code>$tan:rgb-OldLace</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(253, 245, 230)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-olive-drab"><title><code>$tan:rgb-olive-drab</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(107, 142, 35)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-OliveDrab"><title><code>$tan:rgb-OliveDrab</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(107, 142, 35)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-OliveDrab1"><title><code>$tan:rgb-OliveDrab1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(192, 255, 62)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-OliveDrab2"><title><code>$tan:rgb-OliveDrab2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(179, 238, 58)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-OliveDrab3"><title><code>$tan:rgb-OliveDrab3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(154, 205, 50)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-OliveDrab4"><title><code>$tan:rgb-OliveDrab4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(105, 139, 34)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-orange"><title><code>$tan:rgb-orange</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 165, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-orange-red"><title><code>$tan:rgb-orange-red</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 69, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-orange1"><title><code>$tan:rgb-orange1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 165, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-orange2"><title><code>$tan:rgb-orange2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 154, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-orange3"><title><code>$tan:rgb-orange3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 133, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-orange4"><title><code>$tan:rgb-orange4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 90, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-OrangeRed"><title><code>$tan:rgb-OrangeRed</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 69, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-OrangeRed1"><title><code>$tan:rgb-OrangeRed1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 69, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-OrangeRed2"><title><code>$tan:rgb-OrangeRed2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 64, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-OrangeRed3"><title><code>$tan:rgb-OrangeRed3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 55, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-OrangeRed4"><title><code>$tan:rgb-OrangeRed4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 37, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-orchid"><title><code>$tan:rgb-orchid</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(218, 112, 214)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-orchid1"><title><code>$tan:rgb-orchid1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 131, 250)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-orchid2"><title><code>$tan:rgb-orchid2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 122, 233)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-orchid3"><title><code>$tan:rgb-orchid3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 105, 201)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-orchid4"><title><code>$tan:rgb-orchid4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 71, 137)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-pale-goldenrod"><title><code>$tan:rgb-pale-goldenrod</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 232, 170)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-pale-green"><title><code>$tan:rgb-pale-green</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(152, 251, 152)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-pale-turquoise"><title><code>$tan:rgb-pale-turquoise</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(175, 238, 238)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-pale-violet-red"><title><code>$tan:rgb-pale-violet-red</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(219, 112, 147)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-PaleGoldenrod"><title><code>$tan:rgb-PaleGoldenrod</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 232, 170)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-PaleGreen"><title><code>$tan:rgb-PaleGreen</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(152, 251, 152)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-PaleGreen1"><title><code>$tan:rgb-PaleGreen1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(154, 255, 154)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-PaleGreen2"><title><code>$tan:rgb-PaleGreen2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(144, 238, 144)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-PaleGreen3"><title><code>$tan:rgb-PaleGreen3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(124, 205, 124)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-PaleGreen4"><title><code>$tan:rgb-PaleGreen4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(84, 139, 84)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-PaleTurquoise"><title><code>$tan:rgb-PaleTurquoise</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(175, 238, 238)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-PaleTurquoise1"><title><code>$tan:rgb-PaleTurquoise1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(187, 255, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-PaleTurquoise2"><title><code>$tan:rgb-PaleTurquoise2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(174, 238, 238)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-PaleTurquoise3"><title><code>$tan:rgb-PaleTurquoise3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(150, 205, 205)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-PaleTurquoise4"><title><code>$tan:rgb-PaleTurquoise4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(102, 139, 139)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-PaleVioletRed"><title><code>$tan:rgb-PaleVioletRed</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(219, 112, 147)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-PaleVioletRed1"><title><code>$tan:rgb-PaleVioletRed1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 130, 171)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-PaleVioletRed2"><title><code>$tan:rgb-PaleVioletRed2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 121, 159)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-PaleVioletRed3"><title><code>$tan:rgb-PaleVioletRed3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 104, 137)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-PaleVioletRed4"><title><code>$tan:rgb-PaleVioletRed4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 71, 93)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-papaya-whip"><title><code>$tan:rgb-papaya-whip</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 239, 213)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-PapayaWhip"><title><code>$tan:rgb-PapayaWhip</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 239, 213)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-peach-puff"><title><code>$tan:rgb-peach-puff</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 218, 185)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-PeachPuff"><title><code>$tan:rgb-PeachPuff</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 218, 185)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-PeachPuff1"><title><code>$tan:rgb-PeachPuff1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 218, 185)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-PeachPuff2"><title><code>$tan:rgb-PeachPuff2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 203, 173)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-PeachPuff3"><title><code>$tan:rgb-PeachPuff3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 175, 149)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-PeachPuff4"><title><code>$tan:rgb-PeachPuff4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 119, 101)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-peru"><title><code>$tan:rgb-peru</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 133, 63)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-pink"><title><code>$tan:rgb-pink</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 192, 203)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-pink1"><title><code>$tan:rgb-pink1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 181, 197)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-pink2"><title><code>$tan:rgb-pink2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 169, 184)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-pink3"><title><code>$tan:rgb-pink3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 145, 158)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-pink4"><title><code>$tan:rgb-pink4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 99, 108)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-plum"><title><code>$tan:rgb-plum</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(221, 160, 221)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-plum1"><title><code>$tan:rgb-plum1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 187, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-plum2"><title><code>$tan:rgb-plum2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 174, 238)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-plum3"><title><code>$tan:rgb-plum3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 150, 205)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-plum4"><title><code>$tan:rgb-plum4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 102, 139)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-powder-blue"><title><code>$tan:rgb-powder-blue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(176, 224, 230)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-PowderBlue"><title><code>$tan:rgb-PowderBlue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(176, 224, 230)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-purple"><title><code>$tan:rgb-purple</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(160, 32, 240)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-purple1"><title><code>$tan:rgb-purple1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(155, 48, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-purple2"><title><code>$tan:rgb-purple2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(145, 44, 238)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-purple3"><title><code>$tan:rgb-purple3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(125, 38, 205)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-purple4"><title><code>$tan:rgb-purple4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(85, 26, 139)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-red"><title><code>$tan:rgb-red</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 0, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-red1"><title><code>$tan:rgb-red1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 0, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-red2"><title><code>$tan:rgb-red2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 0, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-red3"><title><code>$tan:rgb-red3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 0, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-red4"><title><code>$tan:rgb-red4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 0, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-rosy-brown"><title><code>$tan:rgb-rosy-brown</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(188, 143, 143)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-RosyBrown"><title><code>$tan:rgb-RosyBrown</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(188, 143, 143)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-RosyBrown1"><title><code>$tan:rgb-RosyBrown1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 193, 193)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-RosyBrown2"><title><code>$tan:rgb-RosyBrown2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 180, 180)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-RosyBrown3"><title><code>$tan:rgb-RosyBrown3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 155, 155)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-RosyBrown4"><title><code>$tan:rgb-RosyBrown4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 105, 105)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-royal-blue"><title><code>$tan:rgb-royal-blue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(65, 105, 225)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-RoyalBlue"><title><code>$tan:rgb-RoyalBlue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(65, 105, 225)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-RoyalBlue1"><title><code>$tan:rgb-RoyalBlue1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(72, 118, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-RoyalBlue2"><title><code>$tan:rgb-RoyalBlue2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(67, 110, 238)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-RoyalBlue3"><title><code>$tan:rgb-RoyalBlue3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(58, 95, 205)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-RoyalBlue4"><title><code>$tan:rgb-RoyalBlue4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(39, 64, 139)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-saddle-brown"><title><code>$tan:rgb-saddle-brown</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 69, 19)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-SaddleBrown"><title><code>$tan:rgb-SaddleBrown</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 69, 19)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-salmon"><title><code>$tan:rgb-salmon</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(250, 128, 114)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-salmon1"><title><code>$tan:rgb-salmon1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 140, 105)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-salmon2"><title><code>$tan:rgb-salmon2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 130, 98)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-salmon3"><title><code>$tan:rgb-salmon3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 112, 84)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-salmon4"><title><code>$tan:rgb-salmon4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 76, 57)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-sandy-brown"><title><code>$tan:rgb-sandy-brown</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(244, 164, 96)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-SandyBrown"><title><code>$tan:rgb-SandyBrown</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(244, 164, 96)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-sea-green"><title><code>$tan:rgb-sea-green</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(46, 139, 87)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-SeaGreen"><title><code>$tan:rgb-SeaGreen</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(46, 139, 87)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-SeaGreen1"><title><code>$tan:rgb-SeaGreen1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(84, 255, 159)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-SeaGreen2"><title><code>$tan:rgb-SeaGreen2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(78, 238, 148)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-SeaGreen3"><title><code>$tan:rgb-SeaGreen3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(67, 205, 128)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-SeaGreen4"><title><code>$tan:rgb-SeaGreen4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(46, 139, 87)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-seashell"><title><code>$tan:rgb-seashell</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 245, 238)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-seashell1"><title><code>$tan:rgb-seashell1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 245, 238)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-seashell2"><title><code>$tan:rgb-seashell2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 229, 222)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-seashell3"><title><code>$tan:rgb-seashell3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 197, 191)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-seashell4"><title><code>$tan:rgb-seashell4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 134, 130)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-sienna"><title><code>$tan:rgb-sienna</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(160, 82, 45)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-sienna1"><title><code>$tan:rgb-sienna1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 130, 71)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-sienna2"><title><code>$tan:rgb-sienna2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 121, 66)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-sienna3"><title><code>$tan:rgb-sienna3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 104, 57)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-sienna4"><title><code>$tan:rgb-sienna4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 71, 38)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-sky-blue"><title><code>$tan:rgb-sky-blue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(135, 206, 235)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-SkyBlue"><title><code>$tan:rgb-SkyBlue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(135, 206, 235)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-SkyBlue1"><title><code>$tan:rgb-SkyBlue1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(135, 206, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-SkyBlue2"><title><code>$tan:rgb-SkyBlue2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(126, 192, 238)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-SkyBlue3"><title><code>$tan:rgb-SkyBlue3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(108, 166, 205)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-SkyBlue4"><title><code>$tan:rgb-SkyBlue4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(74, 112, 139)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-slate-blue"><title><code>$tan:rgb-slate-blue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(106, 90, 205)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-slate-gray"><title><code>$tan:rgb-slate-gray</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(112, 128, 144)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-slate-grey"><title><code>$tan:rgb-slate-grey</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(112, 128, 144)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-SlateBlue"><title><code>$tan:rgb-SlateBlue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(106, 90, 205)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-SlateBlue1"><title><code>$tan:rgb-SlateBlue1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(131, 111, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-SlateBlue2"><title><code>$tan:rgb-SlateBlue2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(122, 103, 238)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-SlateBlue3"><title><code>$tan:rgb-SlateBlue3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(105, 89, 205)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-SlateBlue4"><title><code>$tan:rgb-SlateBlue4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(71, 60, 139)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-SlateGray"><title><code>$tan:rgb-SlateGray</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(112, 128, 144)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-SlateGray1"><title><code>$tan:rgb-SlateGray1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(198, 226, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-SlateGray2"><title><code>$tan:rgb-SlateGray2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(185, 211, 238)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-SlateGray3"><title><code>$tan:rgb-SlateGray3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(159, 182, 205)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-SlateGray4"><title><code>$tan:rgb-SlateGray4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(108, 123, 139)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-SlateGrey"><title><code>$tan:rgb-SlateGrey</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(112, 128, 144)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-snow"><title><code>$tan:rgb-snow</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 250, 250)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-snow1"><title><code>$tan:rgb-snow1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 250, 250)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-snow2"><title><code>$tan:rgb-snow2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 233, 233)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-snow3"><title><code>$tan:rgb-snow3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 201, 201)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-snow4"><title><code>$tan:rgb-snow4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 137, 137)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-spring-green"><title><code>$tan:rgb-spring-green</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 255, 127)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-SpringGreen"><title><code>$tan:rgb-SpringGreen</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 255, 127)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-SpringGreen1"><title><code>$tan:rgb-SpringGreen1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 255, 127)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-SpringGreen2"><title><code>$tan:rgb-SpringGreen2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 238, 118)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-SpringGreen3"><title><code>$tan:rgb-SpringGreen3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 205, 102)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-SpringGreen4"><title><code>$tan:rgb-SpringGreen4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 139, 69)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-steel-blue"><title><code>$tan:rgb-steel-blue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(70, 130, 180)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-SteelBlue"><title><code>$tan:rgb-SteelBlue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(70, 130, 180)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-SteelBlue1"><title><code>$tan:rgb-SteelBlue1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(99, 184, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-SteelBlue2"><title><code>$tan:rgb-SteelBlue2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(92, 172, 238)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-SteelBlue3"><title><code>$tan:rgb-SteelBlue3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(79, 148, 205)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-SteelBlue4"><title><code>$tan:rgb-SteelBlue4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(54, 100, 139)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-tan"><title><code>$tan:rgb-tan</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(210, 180, 140)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-tan1"><title><code>$tan:rgb-tan1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 165, 79)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-tan2"><title><code>$tan:rgb-tan2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 154, 73)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-tan3"><title><code>$tan:rgb-tan3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 133, 63)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-tan4"><title><code>$tan:rgb-tan4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 90, 43)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-thistle"><title><code>$tan:rgb-thistle</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(216, 191, 216)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-thistle1"><title><code>$tan:rgb-thistle1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 225, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-thistle2"><title><code>$tan:rgb-thistle2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 210, 238)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-thistle3"><title><code>$tan:rgb-thistle3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 181, 205)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-thistle4"><title><code>$tan:rgb-thistle4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 123, 139)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-tomato"><title><code>$tan:rgb-tomato</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 99, 71)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-tomato1"><title><code>$tan:rgb-tomato1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 99, 71)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-tomato2"><title><code>$tan:rgb-tomato2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 92, 66)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-tomato3"><title><code>$tan:rgb-tomato3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 79, 57)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-tomato4"><title><code>$tan:rgb-tomato4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 54, 38)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-turquoise"><title><code>$tan:rgb-turquoise</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(64, 224, 208)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-turquoise1"><title><code>$tan:rgb-turquoise1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 245, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-turquoise2"><title><code>$tan:rgb-turquoise2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 229, 238)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-turquoise3"><title><code>$tan:rgb-turquoise3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 197, 205)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-turquoise4"><title><code>$tan:rgb-turquoise4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(0, 134, 139)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-violet"><title><code>$tan:rgb-violet</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 130, 238)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-violet-red"><title><code>$tan:rgb-violet-red</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(208, 32, 144)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-VioletRed"><title><code>$tan:rgb-VioletRed</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(208, 32, 144)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-VioletRed1"><title><code>$tan:rgb-VioletRed1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 62, 150)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-VioletRed2"><title><code>$tan:rgb-VioletRed2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 58, 140)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-VioletRed3"><title><code>$tan:rgb-VioletRed3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 50, 120)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-VioletRed4"><title><code>$tan:rgb-VioletRed4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 34, 82)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-wheat"><title><code>$tan:rgb-wheat</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(245, 222, 179)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-wheat1"><title><code>$tan:rgb-wheat1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 231, 186)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-wheat2"><title><code>$tan:rgb-wheat2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 216, 174)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-wheat3"><title><code>$tan:rgb-wheat3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 186, 150)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-wheat4"><title><code>$tan:rgb-wheat4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 126, 102)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-white"><title><code>$tan:rgb-white</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 255, 255)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-white-smoke"><title><code>$tan:rgb-white-smoke</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(245, 245, 245)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-WhiteSmoke"><title><code>$tan:rgb-WhiteSmoke</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(245, 245, 245)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-yellow"><title><code>$tan:rgb-yellow</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 255, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-yellow-green"><title><code>$tan:rgb-yellow-green</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(154, 205, 50)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-yellow1"><title><code>$tan:rgb-yellow1</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 255, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-yellow2"><title><code>$tan:rgb-yellow2</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(238, 238, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-yellow3"><title><code>$tan:rgb-yellow3</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(205, 205, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-yellow4"><title><code>$tan:rgb-yellow4</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(139, 139, 0)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-rgb-YellowGreen"><title><code>$tan:rgb-YellowGreen</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(154, 205, 50)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-ryb-blue"><title><code>$tan:ryb-blue</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(2, 71, 254)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-ryb-blue-green"><title><code>$tan:ryb-blue-green</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(52, 124, 152)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-ryb-blue-purple"><title><code>$tan:ryb-blue-purple</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(68, 36, 214)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-ryb-green"><title><code>$tan:ryb-green</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(102, 176, 50)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-ryb-orange"><title><code>$tan:ryb-orange</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(251, 153, 2)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-ryb-purple"><title><code>$tan:ryb-purple</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(134, 1, 175)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-ryb-red"><title><code>$tan:ryb-red</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(254, 39, 18)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-ryb-red-orange"><title><code>$tan:ryb-red-orange</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(252, 96, 10)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-ryb-red-purple"><title><code>$tan:ryb-red-purple</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(194, 20, 96)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-ryb-yellow"><title><code>$tan:ryb-yellow</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(254, 254, 51)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-ryb-yellow-green"><title><code>$tan:ryb-yellow-green</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(178, 215, 50)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-ryb-yellow-orange"><title><code>$tan:ryb-yellow-orange</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(252, 204, 26)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-white-mask-a10"><title><code>$tan:white-mask-a10</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 255, 255, 0.10)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-white-mask-a20"><title><code>$tan:white-mask-a20</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 255, 255, 0.20)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-white-mask-a30"><title><code>$tan:white-mask-a30</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 255, 255, 0.30)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-white-mask-a40"><title><code>$tan:white-mask-a40</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 255, 255, 0.40)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-white-mask-a50"><title><code>$tan:white-mask-a50</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 255, 255, 0.50)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-white-mask-a60"><title><code>$tan:white-mask-a60</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 255, 255, 0.60)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-white-mask-a70"><title><code>$tan:white-mask-a70</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 255, 255, 0.70)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-white-mask-a80"><title><code>$tan:white-mask-a80</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 255, 255, 0.80)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-white-mask-a90"><title><code>$tan:white-mask-a90</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para>Definition: <code>(255, 255, 255, 0.90)</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
</section>
<section><title>Functions</title><section xml:id="function-blend-alpha-value"><title><code>tan:blend-alpha-value()</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para><code>tan:blend-alpha-value($alpha-a as xs:double, $alpha-b as xs:double, $blend-mid-point as xs:double) as xs:double?</code></para><programlisting>Input: three doubles between zero and 1 </programlisting><programlisting>Output: the blend of the first two doubles, interpreted as alpha values and the third 
interpreted as a midpoint </programlisting><para>Related: <link linkend="tan-function-group-html">html</link>, <link linkend="tan-function-group-colors">colors</link></para><para>Used by function <code><link linkend="function-blend-colors">tan:blend-colors()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-blend-color-channel-value"><title><code>tan:blend-color-channel-value()</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para><code>tan:blend-color-channel-value($color-a as xs:double, $color-b as xs:double, $blend-mid-point as xs:double) as xs:double?</code></para><programlisting>Input: two integers and a double between zero and 1 </programlisting><programlisting>Output: a double representing a blend between the first two numbers, interpreted as 
RGB values </programlisting><para>Related: <link linkend="tan-function-group-html">html</link>, <link linkend="tan-function-group-colors">colors</link></para><para>Used by function <code><link linkend="function-blend-color-channel-value">tan:blend-color-channel-value()</link></code>, <code><link linkend="function-blend-colors">tan:blend-colors()</link></code>.</para><para>Relies upon <code><link linkend="function-blend-color-channel-value">tan:blend-color-channel-value()</link></code>.</para></section>
<section xml:id="function-blend-colors"><title><code>tan:blend-colors()</code></title><para><emphasis>TAN-fn-html-colors</emphasis></para><para><code>tan:blend-colors($rgb-color-1 as item()+, $rgb-color-2 as item()+, $blend-mid-point as xs:double) as xs:double*</code></para><programlisting>Input: two sequences of doubles (the first three items being from 0 through 255 and 
the fourth and last between 0 and 1); a double between zero and 1 </programlisting><programlisting>Output: a sequence of doubles representing a blend of the first two sequences, 
interpreted as RGB colors, and the last double as a desired midpoint </programlisting><para>Related: <link linkend="tan-function-group-html">html</link>, <link linkend="tan-function-group-colors">colors</link></para><para>Used by function <code><link linkend="function-blend-colors">tan:blend-colors()</link></code>.</para><para>Relies upon <code><link linkend="function-blend-alpha-value">tan:blend-alpha-value</link></code>, <code><link linkend="function-blend-color-channel-value">tan:blend-color-channel-value</link></code>, <code><link linkend="function-blend-colors">tan:blend-colors()</link></code>.</para></section>
<section xml:id="function-convert-to-html"><title><code>tan:convert-to-html()</code></title><para><emphasis>Option 1 (TAN-fn-html-core)</emphasis></para><para><code>tan:convert-to-html($fragment-to-convert as item()*, $parse-text-for-urls as xs:boolean) as item()*</code></para><programlisting>2-param version of fuller one, below </programlisting><para>Used by function <code><link linkend="function-convert-to-html">tan:convert-to-html()</link></code>, <code><link linkend="function-diff-or-collate-to-html">tan:diff-or-collate-to-html()</link></code>.</para><para>Relies upon <code><link linkend="function-convert-to-html">tan:convert-to-html</link></code>.</para><para><emphasis>Option 2 (TAN-fn-html-core)</emphasis></para><para><code>tan:convert-to-html($fragment-to-convert as item()*, $parse-a-hrefs as xs:boolean, $attributes-to-retain-regex as xs:string, $keep-attributes-named-after-global-html-attributes as xs:boolean) as item()*</code></para><programlisting>Input: Any XML tree fragment; a boolean; a string </programlisting><programlisting>Output: The fragment converted to HTML (described below); if the boolean is true, 
text will be parsed for URLs and wrapped in &lt;a href=""&gt;; if the third parameter is a valid 
regular expression, attributes whose names match the pattern will be retained unchanged. </programlisting><programlisting>Every element is converted to an HTML <code><link linkend="element-div">&lt;div&gt;</link></code>, with the name of the element or attribute 
being placed inside the <code>@class</code> as a value: e-[NAME] for elements and a-[NAME] for 
attributes. In addition, if the element or attribute is in a namespace, the namespace is included 
as a class value, ns-[NAMESPACE PREFIX]. Comments and processing instructions are 
preserved intact. </programlisting><programlisting>Any element already in the HTML namespace will be left as-is, with templates 
continued to be applied to its descendants. </programlisting><programlisting>Some attributes are handled specially: Every <code>@xml:</code>* is retained, but with only the 
local name, no prefix. Every attribute in an html element is retained as-is. No attribute 
<code>@class</code> is rendered as an element. No attribute beginning with _ is rendered as an element, 
and it is retained as-is. (It is your responsibility to get rid of temporary attributes 
you do not want, either before or after this function runs.) </programlisting><para>Related: <link linkend="tan-function-group-html">html</link>, <link linkend="tan-function-group-nodes">nodes</link>, <link linkend="tan-function-group-tree_manipulation">tree manipulation</link></para><para>Used by function <code><link linkend="function-convert-to-html">tan:convert-to-html()</link></code>, <code><link linkend="function-diff-or-collate-to-html">tan:diff-or-collate-to-html()</link></code>.</para><para>Relies upon <code><link linkend="function-get-namespace-map">tan:get-namespace-map</link></code>, <code><link linkend="template-parse-a-hrefs">ŧ tan:parse-a-hrefs</link></code>, <code><link linkend="template-tree-to-html">ŧ tan:tree-to-html</link></code>.</para></section>
<section xml:id="function-diff-or-collate-to-html"><title><code>tan:diff-or-collate-to-html()</code></title><para><emphasis>TAN-fn-html-diff-and-collate</emphasis></para><para><code>tan:diff-or-collate-to-html($diff-or-collate-results as element()?, $primary-version-ref as xs:string?, $primary-version-tree as element()*) as item()*</code></para><programlisting>Input: the results of <code><link linkend="function-diff">tan:diff()</link></code> or <code><link linkend="function-collate">tan:collate()</link></code>, ideally when given wrapped by 
<code><link linkend="element-group">&lt;group&gt;</link></code> along with statistics; perhaps a string; perhaps a tree structure (see below) </programlisting><programlisting>Output: the results converted to HTML divs, with the following provisos: 
* Any 
adjustments to the text of the diff/collate output should be run beforehand, optimally via 
<code><link linkend="function-replace-diff">tan:replace-diff()</link></code> or <code><link linkend="function-replace-collation">tan:replace-collation()</link></code>. 
* The second parameter points to an idref. If the main 
input is a diff, then the expected value is 'a' or 'b' (default). If it is a collation, then it 
is a label that points to tan:collation/tan:witness/<code><link linkend="attribute-id">@id</link></code> (default: the last one, if no 
match). The resolved parameter points to the primary version. 
* The third parameter is a 
tree structure of elements with the primary version. This is structure that will become 
the primary way to view the diff/collation. The diff/collation will be chopped 
proportionally to be infused into the text nodes of the tree. This allows the HTML file to be 
structured not as a flat diff/collate, but in a hierarchy that is native to one of the versions. 
* 
Collation ids are case-sensitive; diffs, however, must be simply a or b. 
* Any notices or other 
elements must be inserted before processing. </programlisting><para>Related: <link linkend="tan-function-group-html">html</link>, <link linkend="tan-function-group-diff">diff</link>, <link linkend="tan-function-group-tree_manipulation">tree manipulation</link></para><para>Used by function <code><link linkend="function-diff-or-collate-to-html">tan:diff-or-collate-to-html()</link></code>.</para><para>Relies upon <code><link linkend="function-convert-to-html">tan:convert-to-html</link></code>, <code><link linkend="function-diff">tan:diff</link></code>, <code><link linkend="function-diff-or-collate-to-html">tan:diff-or-collate-to-html()</link></code>, <code><link linkend="function-ellipses">tan:ellipses</link></code>, <code><link linkend="function-shallow-copy">tan:shallow-copy</link></code>, <code><link linkend="function-trim-long-tree">tan:trim-long-tree</link></code>, <code><link linkend="template-diff-or-collate-to-html-output-pass-1">ŧ diff-or-collate-to-html-output-pass-1</link></code>.</para></section>
<section xml:id="function-parse-a-hrefs"><title><code>tan:parse-a-hrefs()</code></title><para><emphasis>TAN-fn-html-core</emphasis></para><para><code>tan:parse-a-hrefs($string-to-parse as xs:string?) as item()*</code></para><programlisting>Input: a string </programlisting><programlisting>Output: a sequence mixing text nodes and elements, with elements being HTML &lt;a 
href=""/&gt; wrappers for URIs. </programlisting><para>Related: <link linkend="tan-function-group-html">html</link>, <link linkend="tan-function-group-strings">strings</link>, <link linkend="tan-function-group-filenames">filenames</link></para><para>Used by template <code><link linkend="template-parse-a-hrefs">ŧ tan:parse-a-hrefs</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
</section>
</section>
<section xml:id="vkft-language"><title>Language</title><section><title>Variables</title><section xml:id="variable-languages-supported"><title><code>$languages-supported</code></title><para><emphasis>TAN-fn-language-extended</emphasis></para><para>Definition: <code>map:keys($tan:lang-catalog-map)</code></para><para>Used by function <code><link linkend="function-lang-catalog">tan:lang-catalog()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-grc-tokens-without-accents"><title><code>$tan:grc-tokens-without-accents</code></title><para><emphasis>TAN-fn-language-extended</emphasis></para><para>Definition: <code>doc('grc-tokens-without-accents.xml')/*/*</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
</section>
<section><title>Functions</title><section xml:id="function-convert-morphological-codes"><title><code>tan:convert-morphological-codes()</code></title><para><emphasis>TAN-fn-language-extended</emphasis></para><para><code>tan:convert-morphological-codes($TAN-A-lm-to-convert as document-node()?, $morphology-ids-to-convert as xs:string, $morphology-code-conversion-maps as map(*)*) as document-node()?</code></para><programlisting>Input: a TAN-A-lm file, a sequence of strings, maps that are the result of 
<code><link linkend="function-morphological-code-conversion-maps">tan:morphological-code-conversion-maps()</link></code> </programlisting><programlisting>Output: the TAN-A-lm file, with relevant <code><link linkend="element-m">&lt;m&gt;</link></code> codes converted. This will be applied 
only to <code><link linkend="element-m">&lt;m&gt;</link></code> whose closest <code><link linkend="attribute-morphology">@morphology</link></code> is one of the strings from the second parameter, and 
codes will be converted from the source to the target according to the maps supplied. </programlisting><programlisting>The second parameter can be empty; If so, then the default with be the values in 
/tan:TAN-A-lm/tan:body/<code><link linkend="attribute-morphology">@morphology</link></code> </programlisting><programlisting>This function does not change the vocabulary or <code><link linkend="attribute-morphology">@morphology</link></code> codes. That must be done 
separately. </programlisting><programlisting>See comments at <code><link linkend="function-morphological-code-conversion-maps">tan:morphological-code-conversion-maps()</link></code> regarding 
difficulties inherent in mapping grammatical systems to each other. </programlisting><para>Related: <link linkend="tan-function-group-language">language</link>, <link linkend="tan-function-group-lexicomorphology">lexicomorphology</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="template-convert-morphological-codes">ŧ tan:convert-morphological-codes</link></code>.</para></section>
<section xml:id="function-greek-graves-to-acutes"><title><code>tan:greek-graves-to-acutes()</code></title><para><emphasis>TAN-fn-language-extended</emphasis></para><para><code>tan:greek-graves-to-acutes($greek-to-change as xs:string?) as xs:string?</code></para><programlisting>Input: text with Greek </programlisting><programlisting>Output: the same, but with grave accents changed to acutes </programlisting><para>Related: <link linkend="tan-function-group-language">language</link>, <link linkend="tan-function-group-Greek">Greek</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-lang-catalog"><title><code>tan:lang-catalog()</code></title><para><emphasis>TAN-fn-language-extended</emphasis></para><para><code>tan:lang-catalog($lang-codes as xs:string*) as document-node()*</code></para><programlisting>Input: language codes </programlisting><programlisting>Output: the catalogs for those languages </programlisting><para>Related: <link linkend="tan-function-group-language">language</link></para><para>Used by function <code><link linkend="function-lm-data">tan:lm-data()</link></code>.</para><para>Relies upon <code><link linkend="variable-languages-supported">$languages-supported</link></code>.</para></section>
<section xml:id="function-lang-code"><title><code>tan:lang-code()</code></title><para><emphasis>TAN-fn-language-extended</emphasis></para><para><code>tan:lang-code($lang-name as xs:string?) as xs:string*</code></para><programlisting>Input: the name of a language </programlisting><programlisting>Output: the 3-letter code for the language </programlisting><programlisting>If no exact match is found, the parameter will be treated as a regular expression, and 
all case-insensitive matches will be returned </programlisting><para>Related: <link linkend="tan-function-group-language">language</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="variable-iso-639-3">$tan:iso-639-3</link></code>.</para></section>
<section xml:id="function-lang-name"><title><code>tan:lang-name()</code></title><para><emphasis>TAN-fn-language-extended</emphasis></para><para><code>tan:lang-name($lang-code as xs:string?) as xs:string*</code></para><programlisting>Input: the code of a language </programlisting><programlisting>Output: the name of the language </programlisting><programlisting>If no exact match is found, the parameter will be treated as a regular expression, and 
all case-insensitive matches will be returned </programlisting><para>Related: <link linkend="tan-function-group-language">language</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="variable-iso-639-3">$tan:iso-639-3</link></code>.</para></section>
<section xml:id="function-lm-data"><title><code>tan:lm-data()</code></title><para><emphasis>TAN-fn-language-extended</emphasis></para><para><code>tan:lm-data($token-value as xs:string?, $lang-codes as xs:string*) as element()*</code></para><programlisting>Input: token value; a language code </programlisting><programlisting>Output: <code><link linkend="element-lm">&lt;lm&gt;</link></code> data for that token value from any available resources </programlisting><para>Related: <link linkend="tan-function-group-language">language</link>, <link linkend="tan-function-group-lexicomorphology">lexicomorphology</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-base-uri">tan:base-uri</link></code>, <code><link linkend="function-lang-catalog">tan:lang-catalog</link></code>, <code><link linkend="function-search-morpheus">tan:search-morpheus</link></code>, <code><link linkend="function-search-results-to-claims">tan:search-results-to-claims</link></code>.</para></section>
<section xml:id="function-morphological-code-conversion-maps"><title><code>tan:morphological-code-conversion-maps()</code></title><para><emphasis>TAN-fn-language-extended</emphasis></para><para><code>tan:morphological-code-conversion-maps($source-TAN-mor-resolved as document-node(), $target-TAN-mor-resolved as document-node()) as map(*)*</code></para><programlisting>Input: two TAN-mor files, resolved </programlisting><programlisting>Output: a sequence of one or more maps, one per category in the first TAN-mor file. If 
the first TAN-mor file lacks categories, then only one map is returned. Each map's map 
entries have keys corresponding to the morphological codes allowed for that category. The 
values consists of an array. Each array member is a sequence of two items: an integer and a 
string. The integer specifies the position of the target morphological category and the 
string, the morphological code. The order of the array members corresponds to apparent 
preference. </programlisting><programlisting>Non-categorized morphologies can take advantage of <code><link linkend="element-alias">&lt;alias&gt;</link></code> to build complex 
grammatical features, which complicates the output of this function somewhat. Mapping from 
simple feature to simple feature is straightforward. Mapping from complex feature to 
simple feature requires a one-to-many map, and if a complex feature in the source 
morphology does not have a counterpart in the target for every simple feature that makes up the 
complex one, then no match exists and the code is not supported. It gets a bit tougher for 
mapping to a complex feature in the target morphology. Preleminary work is done to find those 
complex features, then detect every mapping of simple or complex objects that could be 
translated into that target complex feature. If the source morphology is category-based, the 
result is a regular expression to match against <code><link linkend="element-m">&lt;m&gt;</link></code>. If the source morphology lacks 
categories, then an alphabetized list of codes becomes the key to the target complex feature. A 
map of to all target complex features is inserted in the first output map. These can be 
found simply by looking for the presence of space or the opening ^ in the key name. </programlisting><programlisting>Because TAN-mor was designed to enable a wide range of grammatical constructions, 
and because designers have different views on language and categories, converting 
from one morphological code system to another can be messy, with features in either the 
source or target that lack any counterpart in the other. Or there may be overlapping results 
when assessing complex features. For example, in the Perseus system for Greek, a word 
marked as a singular personal pronoun will have at least three grammatical categories that 
will result in a mapping to the Brown system for English as both NN (singular noun) and NP 
(proper noun), both of which are true. It is up to users to discern on a case-by-case basis the 
best way to resolve ambiguity and incommensurability. </programlisting><para>Related: <link linkend="tan-function-group-language">language</link>, <link linkend="tan-function-group-lexicomorphology">lexicomorphology</link></para><para>Used by function <code><link linkend="function-morphological-code-conversion-maps">tan:morphological-code-conversion-maps()</link></code>.</para><para>Relies upon <code><link linkend="function-array-permutations">tan:array-permutations</link></code>, <code><link linkend="function-duplicate-items">tan:duplicate-items</link></code>, <code><link linkend="function-morphological-code-conversion-maps">tan:morphological-code-conversion-maps()</link></code>, <code><link linkend="function-vocabulary">tan:vocabulary</link></code>, <code><link linkend="template-add-category-position">ŧ tan:add-category-position</link></code>.</para></section>
<section xml:id="function-syriac-marks-to-word-end"><title><code>tan:syriac-marks-to-word-end()</code></title><para><emphasis>TAN-fn-language-extended</emphasis></para><para><code>tan:syriac-marks-to-word-end($input-syriac-text as xs:string?) as xs:string?</code></para><programlisting>Input: a string </programlisting><programlisting>Output: the string with Syriac marks placed at the end, in codepoint order </programlisting><programlisting>This function was written to assist in comparing Syriac words that match. Which 
letter a particular dot is placed should not matter, in most cases. </programlisting><para>Related: <link linkend="tan-function-group-language">language</link>, <link linkend="tan-function-group-Syriac">Syriac</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
</section>
</section>
<section xml:id="vkft-maps"><title>Maps</title><section><title>Functions</title><section xml:id="function-map-contains"><title><code>tan:map-contains()</code></title><para><emphasis>TAN-fn-maps-extended</emphasis></para><para><code>tan:map-contains($map-of-interest as map(*)*, $keys-of-interest as xs:anyAtomicType*) as xs:boolean</code></para><programlisting>Input: a map; a sequence of items </programlisting><programlisting>Output: true if the map, or any map it contains, has a key identical to one of the items, 
otherwise false. </programlisting><programlisting>This function parallels <code>map:contains()</code> but permits multiple inputs and deep 
searching </programlisting><para>Related: <link linkend="tan-function-group-maps">maps</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-map-entries"><title><code>tan:map-entries()</code></title><para><emphasis>Option 1 (TAN-fn-maps-extended)</emphasis></para><para><code>tan:map-entries($source-map as map(*)*) as map(*)*</code></para><programlisting>One-param version of the full one below </programlisting><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Does not rely upon global variables, keys, functions, or templates.</para><para><emphasis>Option 2 (TAN-fn-maps-extended)</emphasis></para><para><code>tan:map-entries($source-map as map(*)*, $keys-to-keep as xs:anyAtomicType*) as map(*)*</code></para><programlisting>Input: a map </programlisting><programlisting>Output: one singleton map per map entry. </programlisting><programlisting>This function was written to support templates or functions that use predicates to 
restrict a particular map's entries to only select ones. </programlisting><para>Related: <link linkend="tan-function-group-maps">maps</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-item-type">tan:item-type</link></code>.</para></section>
<section xml:id="function-map-invert"><title><code>tan:map-invert()</code></title><para><emphasis>TAN-fn-maps-extended</emphasis></para><para><code>tan:map-invert($map-to-invert as map(*)) as map(*)</code></para><programlisting>Input: a map </programlisting><programlisting>Output: a map, where the keys are all those values of the input map that are atomic 
items and each item's value are the keys in the original map that point to it. </programlisting><programlisting>This function was written to provide a kind of reverse lookup on any map. Any value 
that is not an atomic item will be discarded. </programlisting><para>Related: <link linkend="tan-function-group-maps">maps</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-map-keys"><title><code>tan:map-keys()</code></title><para><emphasis>TAN-fn-maps-extended</emphasis></para><para><code>tan:map-keys($map-of-interest as map(*)*) as item()*</code></para><programlisting>Input: a map </programlisting><programlisting>Output: all map keys, both at the top level and at any depth </programlisting><programlisting>This function parallels <code>map:keys()</code> but permits recursion </programlisting><para>Related: <link linkend="tan-function-group-maps">maps</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="template-map-keys">ŧ tan:map-keys</link></code>.</para></section>
<section xml:id="function-map-put"><title><code>tan:map-put()</code></title><para><emphasis>Option 1 (TAN-fn-maps-extended)</emphasis></para><para><code>tan:map-put($map as map(*), $put-map as map(*), $at-depth as xs:integer, $target-map-must-have-what-key as xs:anyAtomicType?) as map(*)</code></para><programlisting>4-parameter version of the complete function below. </programlisting><programlisting>Here the 2nd parameter is simply a map, all of whose map entries are intended 
insertions. This allows the user of the function to make multiple insertions at once. </programlisting><para>Used by function <code><link linkend="function-map-put">tan:map-put()</link></code>.</para><para>Relies upon <code><link linkend="function-map-put">tan:map-put</link></code>.</para><para><emphasis>Option 2 (TAN-fn-maps-extended)</emphasis></para><para><code>tan:map-put($map as map(*), $key as xs:anyAtomicType, $value as item()*, $at-depth as xs:integer, $target-map-must-have-what-key as xs:anyAtomicType?) as map(*)</code></para><programlisting>Input: a map; an atomic type representing a key for a new map entry; any items, 
representing the value for a new map entry; an integer, specifying the depth of map to receive the 
entry (0 or less will apply to every map); a string, specifying a key that must be present in a 
map that must receive the entry. </programlisting><programlisting>Output: the input map, but with a new map entry at each map of depth specified by the 
fourth parameter, provided that it has a key specified by the fifth. </programlisting><programlisting>If the fourth parameter is less than 0, then the entry will be placed throughout every 
map: the initial map itself and any enclosed map of any depth. </programlisting><programlisting>If the fifth parameter is not empty, then the target map must have a map entry with an 
identical key for it to qualify to take the new map entry; if the parameter is empty, this 
qualification is ignored. </programlisting><programlisting>If a key exists already in a target map, the new entry replaces the current one, 
otherwise it is added as a new map entry. </programlisting><programlisting>This function parallels <code>map:put()</code>, but allows for deep placement of entries. This 
function was written to support a more DRY-friendly approach to creating maps for 
<code>transform()</code>, which has submaps that might need to be altered and refactored, depending on various 
conditions. </programlisting><programlisting>It is presently difficult to select particular deep maps for a target action. The 
last two parameters of this function provide a bit of control over where the action is 
applied. One strategy that can be adopted, to use this function better, is to supply in each map 
a single map entry with a key corresponding to an id (perhaps via <code>fn:generate-id()</code>) 
with an empty value. That empty map entry then can serve as a hook equivalent to <code><link linkend="attribute-xmlid">@xml:id</link></code> in 
an element. </programlisting><para>Related: <link linkend="tan-function-group-maps">maps</link></para><para>Used by function <code><link linkend="function-map-put">tan:map-put()</link></code>.</para><para>Relies upon <code><link linkend="function-item-type">tan:item-type</link></code>, <code><link linkend="template-map-put">ŧ tan:map-put</link></code>.</para></section>
<section xml:id="function-map-remove"><title><code>tan:map-remove()</code></title><para><emphasis>TAN-fn-maps-extended</emphasis></para><para><code>tan:map-remove($map-of-interest as map(*), $keys as xs:anyAtomicType*) as map(*)</code></para><programlisting>Input: any map, a sequence of atomic items </programlisting><programlisting>Output: the map, but without entries of the specified key, at any depth </programlisting><programlisting>This function parallels <code>map:remove()</code>, but affects contained maps at any depth, 
even those embedded within an array. </programlisting><para>Related: <link linkend="tan-function-group-maps">maps</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="template-map-remove">ŧ tan:map-remove</link></code>.</para></section>
<section xml:id="function-map-to-array"><title><code>tan:map-to-array()</code></title><para><emphasis>TAN-fn-maps-extended</emphasis></para><para><code>tan:map-to-array($map-to-convert as map(*)?, $sort-keys as xs:boolean) as array(*)?</code></para><programlisting>Input: a map; a boolean </programlisting><programlisting>Output: the map as an array, one member of the array per map entry, with the first item 
in the member constituting the key and its second items onward the values. If the 
boolean is true, then the keys will be sorted, otherwise the order of the array is 
implementation-dependent. </programlisting><para>Related: <link linkend="tan-function-group-maps">maps</link>, <link linkend="tan-function-group-arrays">arrays</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-map-to-xml"><title><code>tan:map-to-xml()</code></title><para><emphasis>Option 1 (TAN-fn-maps-extended)</emphasis></para><para><code>tan:map-to-xml($items-to-convert as item()*) as element()*</code></para><programlisting>one-parameter version of fuller one below </programlisting><para>Used by function <code><link linkend="function-map-to-xml">tan:map-to-xml()</link></code>, <code><link linkend="function-get-diff-output-transpositions">tan:get-diff-output-transpositions()</link></code>, <code><link linkend="function-replace-diff">tan:replace-diff()</link></code>.</para><para>Relies upon <code><link linkend="function-map-to-xml">tan:map-to-xml</link></code>.</para><para><emphasis>Option 2 (TAN-fn-maps-extended)</emphasis></para><para><code>tan:map-to-xml($items-to-convert as map(*)*, $sort-keys as xs:boolean) as element()*</code></para><programlisting>Input: any maps; a boolean </programlisting><programlisting>Output: any maps in each item serialized as XML elements; the map entries will be 
sorted lexicographically by the key's string value if the boolean is true, otherwise the 
order of map entries is implementation-dependent. </programlisting><programlisting>For those accustomed to handling ordinary XML nodes, maps can be frustrating to work 
with. This function allows one to change a map to XML, and do fun things with it, without 
requiring map functions. </programlisting><para>Related: <link linkend="tan-function-group-maps">maps</link>, <link linkend="tan-function-group-nodes">nodes</link></para><para>Used by function <code><link linkend="function-map-to-xml">tan:map-to-xml()</link></code>, <code><link linkend="function-get-diff-output-transpositions">tan:get-diff-output-transpositions()</link></code>, <code><link linkend="function-replace-diff">tan:replace-diff()</link></code>.</para><para>Relies upon <code><link linkend="template-map-and-array-to-xml">ŧ tan:map-and-array-to-xml</link></code>.</para></section>
<section xml:id="function-xml-to-map"><title><code>tan:xml-to-map()</code></title><para><emphasis>TAN-fn-maps-extended</emphasis></para><para><code>tan:xml-to-map($items-to-map as item()*) as map(*)*</code></para><programlisting>Input: XML tree fragments </programlisting><programlisting>Output: those parts that conform to the output of <code><link linkend="function-map-to-xml">tan:map-to-xml()</link></code> converted to 
maps. Anything in the input tree not matching <code>&lt;map:map&gt;</code>, <code>&lt;map:entry&gt;</code>, <code>&lt;map:key&gt;</code>, 
<code>&lt;map:value&gt;</code> will be skipped, unless it is a member of <code>&lt;map:key&gt;</code> or <code>&lt;map:value&gt;</code>. Anything in the 
key or value will be bound as the type assigned by the values of <code><link linkend="attribute-type">@type.</link></code>. </programlisting><para>Related: <link linkend="tan-function-group-maps">maps</link>, <link linkend="tan-function-group-nodes">nodes</link>, <link linkend="tan-function-group-tree_manipulation">tree manipulation</link></para><para>Used by template <code><link linkend="template-build-maps-and-arrays">ŧ tan:build-maps-and-arrays</link></code>.</para><para>Relies upon <code><link linkend="template-xml-to-map-and-array">ŧ tan:xml-to-map-and-array</link></code>.</para></section>
</section>
</section>
<section xml:id="vkft-merging"><title>Merging</title><section><title>Functions</title><section xml:id="function-group-divs"><title><code>tan:group-divs()</code></title><para><emphasis>TAN-fn-merging</emphasis></para><para><code>tan:group-divs($divs-to-group as element()*) as element()*</code></para><programlisting>Input: expanded <code><link linkend="element-div">&lt;div&gt;</link></code>s </programlisting><programlisting>Output: those <code><link linkend="element-div">&lt;div&gt;</link></code>s grouped in <code><link linkend="element-group">&lt;group&gt;</link></code>s according to their <code>&lt;ref&gt;</code> values </programlisting><programlisting>Attempt is made to preserve original div order </programlisting><para>Related: <link linkend="tan-function-group-merging">merging</link>, <link linkend="tan-function-group-grouping">grouping</link>, <link linkend="tan-function-group-tree_manipulation">tree manipulation</link></para><para>Used by template <code><link linkend="template-merge-divs">ŧ tan:merge-divs</link></code>.</para><para>Used by function <code><link linkend="function-group-divs">tan:group-divs()</link></code>.</para><para>Relies upon <code><link linkend="function-collate-sequences">tan:collate-sequences</link></code>, <code><link linkend="function-group-divs">tan:group-divs()</link></code>, <code><link linkend="function-group-elements-by-shared-node-values">tan:group-elements-by-shared-node-values</link></code>.</para></section>
<section xml:id="function-merge-divs"><title><code>tan:merge-divs()</code></title><para><emphasis>Option 1 (TAN-fn-merging)</emphasis></para><para><code>tan:merge-divs($expanded-class-1-fragment as item()*) as item()*</code></para><programlisting>one-parameter version of the fuller one below </programlisting><para>Used by function <code><link linkend="function-merge-divs">tan:merge-divs()</link></code>.</para><para>Relies upon <code><link linkend="function-merge-divs">tan:merge-divs</link></code>.</para><para><emphasis>Option 2 (TAN-fn-merging)</emphasis></para><para><code>tan:merge-divs($expanded-class-1-fragment as item()*, $itemize-leaf-divs as xs:boolean) as item()*</code></para><programlisting>two-parameter version of the fuller one below </programlisting><para>Used by function <code><link linkend="function-merge-divs">tan:merge-divs()</link></code>.</para><para>Relies upon <code><link linkend="function-merge-divs">tan:merge-divs</link></code>.</para><para><emphasis>Option 3 (TAN-fn-merging)</emphasis></para><para><code>tan:merge-divs($expanded-class-1-fragment as item()*, $itemize-leaf-divs as xs:boolean, $exclude-elements-with-duplicate-values-of-what-attribute as xs:string?, $keep-last-duplicate as xs:boolean?) as item()*</code></para><programlisting>Input: expanded class 1 document fragment whose individual <code><link linkend="element-div">&lt;div&gt;</link></code>s are assumed to be 
in the proper hierarchy (result of <code>tan:normalize-text-hierarchy()</code>); a boolean 
indicating whether leaf divs should be itemized; an optional string representing the name of an 
attribute to be checked for duplicates </programlisting><programlisting>Output: the fragment with the <code><link linkend="element-div">&lt;div&gt;</link></code>s grouped according to their <code>&lt;ref&gt;</code> values </programlisting><programlisting>If the 2nd parameter is true, for each leaf <code><link linkend="element-div">&lt;div&gt;</link></code> in a group there will be a separate 
&lt;div type="#version"&gt;; otherwise leaf divs will be merely copied </programlisting><programlisting>For merging multiple files normally the value should be true; if they are misfits 
from a single source, false </programlisting><para>Related: <link linkend="tan-function-group-merging">merging</link>, <link linkend="tan-function-group-tree_manipulation">tree manipulation</link>, <link linkend="tan-function-group-grouping">grouping</link></para><para>Used by function <code><link linkend="function-merge-divs">tan:merge-divs()</link></code>.</para><para>Relies upon <code><link linkend="template-merge-divs">ŧ tan:merge-divs</link></code>.</para></section>
<section xml:id="function-merge-expanded-docs"><title><code>tan:merge-expanded-docs()</code></title><para><emphasis>TAN-fn-merging</emphasis></para><para><code>tan:merge-expanded-docs($expanded-docs as document-node()*) as document-node()?</code></para><programlisting>Input: Any TAN documents that have been expanded at least tersely </programlisting><programlisting>Output: A document that is a collation of the documents. There is one <code><link linkend="element-head">&lt;head&gt;</link></code> per 
source, but only one <code><link linkend="element-body">&lt;body&gt;</link></code>, with contents merged. </programlisting><programlisting>Templates will be placed in the appropriate function file, e.g., class 1 merge 
templates are in TAN-class-1-functions.xsl </programlisting><programlisting>Class 1 merging: All <code><link linkend="element-div">&lt;div&gt;</link></code>s with the same <code>&lt;ref&gt;</code> values are grouped together. If the 
class 1 files are sources of a class 2 file, it is assumed that all actions in the 
<code><link linkend="element-adjustments">&lt;adjustments&gt;</link></code> have already been performed. </programlisting><programlisting>Class 2 merging: TBD </programlisting><programlisting>Class 3 merging: TBD </programlisting><programlisting>NB: Class 1 files must have their hierarchies in proper order; use reset-hierarchy 
beforehand if you're unsure </programlisting><para>Related: <link linkend="tan-function-group-merging">merging</link>, <link linkend="tan-function-group-files">files</link></para><para>Used by template <code><link linkend="template-class-1-expansion-verbose-pass-1">ŧ tan:class-1-expansion-verbose-pass-1</link></code>.</para><para>Relies upon <code><link linkend="template-merge-tan-docs">ŧ tan:merge-tan-docs</link></code>.</para></section>
</section>
</section>
<section xml:id="vkft-nodes"><title>Nodes</title><section><title>Functions</title><section xml:id="function-add-attributes"><title><code>tan:add-attributes()</code></title><para><emphasis>TAN-fn-nodes-standard</emphasis></para><para><code>tan:add-attributes($elements-to-adjust as element()*, $attributes-to-insert as attribute()*) as element()*</code></para><programlisting>Input: a sequence of elements; a sequence of attributes </programlisting><programlisting>Output: each element with a copy of the attributes </programlisting><programlisting>This function helps simplify code where one wishes merely to return a copy of an 
element with perhaps diagnostic information in an attribute </programlisting><para>Related: <link linkend="tan-function-group-nodes">nodes</link>, <link linkend="tan-function-group-attributes">attributes</link>, <link linkend="tan-function-group-tree_manipulation">tree manipulation</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-attr"><title><code>tan:attr()</code></title><para><emphasis>TAN-fn-nodes-standard</emphasis></para><para><code>tan:attr($attribute-name as xs:string?, $attribute-value as xs:string?) as attribute()?</code></para><programlisting>Input: two strings </programlisting><programlisting>Output: an attribute by the name of the first string, with the value of the second </programlisting><para>Related: <link linkend="tan-function-group-nodes">nodes</link>, <link linkend="tan-function-group-attributes">attributes</link></para><para>Used by variable <code><link linkend="variable-annotations-resolved">$tan:annotations-resolved</link></code>, <code><link linkend="variable-see-alsos-resolved">$tan:see-alsos-resolved</link></code>, <code><link linkend="variable-predecessors-resolved">$tan:predecessors-resolved</link></code>, <code><link linkend="variable-successors-resolved">$tan:successors-resolved</link></code>, <code><link linkend="variable-redivisions-resolved">$tan:redivisions-resolved</link></code>, <code><link linkend="variable-model-resolved">$tan:model-resolved</link></code>, <code><link linkend="variable-sources-resolved">$tan:sources-resolved</link></code>, <code><link linkend="variable-morphologies-resolved">$tan:morphologies-resolved</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-chop-tree"><title><code>tan:chop-tree()</code></title><para><emphasis>TAN-fn-nodes-standard</emphasis></para><para><code>tan:chop-tree($tree-to-chop as item()*, $chop-points as xs:integer*) as map(xs:integer, item()*)</code></para><programlisting>Input: any XML fragment; a sequence of integers </programlisting><programlisting>Output: a map, with the XML fragment chopped into portions supplied by the integers, 
interpreted as string positions at which to chop the tree. Thus, each map entry has a key of an 
integer and content/value consisting of the corresponding slice of the tree. </programlisting><programlisting>The integer 1 is always inferred, and returned. Any integers greater than the string 
length of the tree will be ignored. </programlisting><programlisting>For a similar, but more complex function, see <code><link linkend="function-chop-diff-output">tan:chop-diff-output()</link></code> </programlisting><para>Related: <link linkend="tan-function-group-nodes">nodes</link>, <link linkend="tan-function-group-tree_manipulation">tree manipulation</link></para><para>Used by function <code>tan:giant-diff()</code>, <code>tan:get-diff-output-slices()</code>, <code><link linkend="function-chop-tree">tan:chop-tree()</link></code>.</para><para>Relies upon <code><link linkend="function-chop-tree">tan:chop-tree()</link></code>, <code><link linkend="function-sequence-to-tree">tan:sequence-to-tree</link></code>, <code><link linkend="function-tree-to-sequence">tan:tree-to-sequence</link></code>, <code><link linkend="template-recheck-chopped-tree">ŧ tan:recheck-chopped-tree</link></code>.</para></section>
<section xml:id="function-copy-indentation"><title><code>tan:copy-indentation()</code></title><para><emphasis>Option 1 (TAN-fn-nodes-standard)</emphasis></para><para><code>tan:copy-indentation($items-to-indent as item()*, $model-element as element()) as item()*</code></para><programlisting>2-parameter version of fuller one below </programlisting><para>Used by function <code><link linkend="function-copy-indentation">tan:copy-indentation()</link></code>.</para><para>Relies upon <code><link linkend="function-copy-indentation">tan:copy-indentation</link></code>.</para><para><emphasis>Option 2 (TAN-fn-nodes-standard)</emphasis></para><para><code>tan:copy-indentation($items-to-indent as item()*, $model-element as element(), $tail-indentation-type as xs:string?) as item()*</code></para><programlisting>Input: items that should be indented; an element whose indentation should be 
imitated; a string: 'full', 'short', or 'none' </programlisting><programlisting>Output: the items, indented according to the pattern </programlisting><programlisting>If the third parameter is 'full', the last indentation after the series will be like 
the first; if it is 'short', it will be one indentation less than full (appropriate for 
the last child of a wrapping element); if it is 'none' no final indentation will be 
supplied. This parameter affects only the topmost sequence, not the children, which are 
formatted as demanded. </programlisting><para>Related: <link linkend="tan-function-group-nodes">nodes</link>, <link linkend="tan-function-group-tree_manipulation">tree manipulation</link>, <link linkend="tan-function-group-spacing">spacing</link></para><para>Used by function <code><link linkend="function-copy-indentation">tan:copy-indentation()</link></code>.</para><para>Relies upon <code><link linkend="template-indent-items">ŧ tan:indent-items</link></code>.</para></section>
<section xml:id="function-copy-of-except"><title><code>tan:copy-of-except()</code></title><para><emphasis>Option 1 (TAN-fn-nodes-standard)</emphasis></para><para><code>tan:copy-of-except($doc-fragment as item()*, $exclude-elements-named as xs:string*, $exclude-attributes-named as xs:string*, $exclude-elements-with-attributes-named as xs:string*) as item()*</code></para><programlisting>short version of the full function, below </programlisting><para>Used by template <code><link linkend="template-mark-reassigns">ŧ tan:mark-reassigns</link></code>, <code><link linkend="template-apply-inclusions-and-adjust-vocabulary">ŧ tan:apply-inclusions-and-adjust-vocabulary</link></code>, <code><link linkend="template-core-expansion-normal">ŧ tan:core-expansion-normal</link></code>, <code><link linkend="template-class-1-expansion-verbose-pass-1">ŧ tan:class-1-expansion-verbose-pass-1</link></code>.</para><para>Used by function <code><link linkend="function-copy-of-except">tan:copy-of-except()</link></code>.</para><para>Relies upon <code><link linkend="function-copy-of-except">tan:copy-of-except</link></code>.</para><para><emphasis>Option 2 (TAN-fn-nodes-standard)</emphasis></para><para><code>tan:copy-of-except($doc-fragment as item()*, $exclude-elements-named as xs:string*, $exclude-attributes-named as xs:string*, $exclude-elements-with-attributes-named as xs:string*, $exclude-elements-beyond-what-depth as xs:integer?, $shallow-skip-elements-named as xs:string*) as item()*</code></para><programlisting>Input: any document fragment; sequences of strings specifying names of elements to 
exclude, names of attributes to exclude, and names of attributes whose parent elements 
should be excluded; an integer beyond which depth copies should not be made </programlisting><programlisting>Output: the same fragment, altered </programlisting><programlisting>This function was written primarily to service the merge of TAN-A sources, where 
realigned divs could be extracted from their source documents </programlisting><para>Related: <link linkend="tan-function-group-nodes">nodes</link>, <link linkend="tan-function-group-tree_manipulation">tree manipulation</link></para><para>Used by template <code><link linkend="template-mark-reassigns">ŧ tan:mark-reassigns</link></code>, <code><link linkend="template-apply-inclusions-and-adjust-vocabulary">ŧ tan:apply-inclusions-and-adjust-vocabulary</link></code>, <code><link linkend="template-core-expansion-normal">ŧ tan:core-expansion-normal</link></code>, <code><link linkend="template-class-1-expansion-verbose-pass-1">ŧ tan:class-1-expansion-verbose-pass-1</link></code>.</para><para>Used by function <code><link linkend="function-copy-of-except">tan:copy-of-except()</link></code>.</para><para>Relies upon <code><link linkend="template-copy-of-except">ŧ tan:copy-of-except</link></code>.</para></section>
<section xml:id="function-data-type-check"><title><code>tan:data-type-check()</code></title><para><emphasis>TAN-fn-nodes-standard</emphasis></para><para><code>tan:data-type-check($item as item()?, $data-type as xs:string) as xs:boolean</code></para><programlisting>Input: an item and a string naming a data type </programlisting><programlisting>Output: a boolean indicating whether the item can be cast into that data type </programlisting><programlisting>If the first parameter doesn't match a data type, the function returns false </programlisting><para>Related: <link linkend="tan-function-group-nodes">nodes</link>, <link linkend="tan-function-group-datatypes">datatypes</link></para><para>Used by template <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-element-fingerprint"><title><code>tan:element-fingerprint()</code></title><para><emphasis>TAN-fn-nodes-standard</emphasis></para><para><code>tan:element-fingerprint($element as element()*) as xs:string*</code></para><programlisting>Input: any elements </programlisting><programlisting>Output: for each element the string value of its name, its namespace, its 
attributes, and all descendant nodes </programlisting><programlisting>This function is useful for determining whether any number of elements are deeply 
equal </programlisting><programlisting>The built-in function <code>deep-equal()</code> works for pairs of elements; this looks for a way 
to evaluate sequences of elements </programlisting><para>Related: <link linkend="tan-function-group-nodes">nodes</link>, <link linkend="tan-function-group-identifiers">identifiers</link></para><para>Used by function <code><link linkend="function-restore-chopped-tree">tan:restore-chopped-tree()</link></code>.</para><para>Relies upon <code><link linkend="template-element-fingerprint">ŧ tan:element-fingerprint</link></code>.</para></section>
<section xml:id="function-get-namespace-map"><title><code>tan:get-namespace-map()</code></title><para><emphasis>TAN-fn-nodes-extended</emphasis></para><para><code>tan:get-namespace-map($input-tree-fragment as item()*) as map(*)</code></para><programlisting>Input: any XML tree fragment </programlisting><programlisting>Output: a map with two entries per namespace, one with the key as the prefix and value 
of the URI, the other with the two items reversed. </programlisting><programlisting>Items are collected deeply through the tree structure, with precedence, in case of 
contradiction, given to the namespaces closest to the root </programlisting><para>Related: <link linkend="tan-function-group-nodes">nodes</link>, <link linkend="tan-function-group-namespaces">namespaces</link></para><para>Used by function <code><link linkend="function-convert-to-html">tan:convert-to-html()</link></code>.</para><para>Relies upon <code><link linkend="template-build-namespace-map">ŧ tan:build-namespace-map</link></code>.</para></section>
<section xml:id="function-get-ref"><title><code>tan:get-ref()</code></title><para><emphasis>TAN-fn-nodes-extended</emphasis></para><para><code>tan:get-ref($class-1-element as element()?) as xs:string*</code></para><programlisting>Input: any element </programlisting><programlisting>Output: every possible combination of <code><link linkend="attribute-n">@n</link></code> values from the self-and-ancestor nodes, 
string-joined by the hierarchy separator. </programlisting><programlisting>This function is useful for handling raw or resolved class 1 files, and you need to get 
references </programlisting><para>Related: <link linkend="tan-function-group-nodes">nodes</link>, <link linkend="tan-function-group-pointers">pointers</link>, <link linkend="tan-function-group-identifiers">identifiers</link></para><para>Used by key <code><link linkend="key-div-via-calculated-ref">ʞ tan:div-via-calculated-ref</link></code>.</para><para>Relies upon <code><link linkend="variable-separator-hierarchy">$tan:separator-hierarchy</link></code>.</para></section>
<section xml:id="function-group-elements-by-shared-node-values"><title><code>tan:group-elements-by-shared-node-values()</code></title><para><emphasis>Option 1 (TAN-fn-nodes-standard)</emphasis></para><para><code>tan:group-elements-by-shared-node-values($elements-to-group as element()*) as element()*</code></para><programlisting>One-parameter version of the fuller one below. </programlisting><para>Used by template <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>.</para><para>Used by function <code><link linkend="function-group-elements-by-shared-node-values">tan:group-elements-by-shared-node-values()</link></code>, <code>tan:group-elements-by-IRI()</code>, <code>tan:group-divs-by-ref()</code>, <code><link linkend="function-group-divs">tan:group-divs()</link></code>.</para><para>Relies upon <code><link linkend="function-group-elements-by-shared-node-values">tan:group-elements-by-shared-node-values</link></code>.</para><para><emphasis>Option 2 (TAN-fn-nodes-standard)</emphasis></para><para><code>tan:group-elements-by-shared-node-values($elements-to-group as element()*, $regex-of-names-of-nodes-to-group-by as xs:string?) as element()*</code></para><programlisting>Two-parameter version of the fuller one below </programlisting><para>Used by template <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>.</para><para>Used by function <code><link linkend="function-group-elements-by-shared-node-values">tan:group-elements-by-shared-node-values()</link></code>, <code>tan:group-elements-by-IRI()</code>, <code>tan:group-divs-by-ref()</code>, <code><link linkend="function-group-divs">tan:group-divs()</link></code>.</para><para>Relies upon <code><link linkend="function-group-elements-by-shared-node-values">tan:group-elements-by-shared-node-values</link></code>.</para><para><emphasis>Option 3 (TAN-fn-nodes-standard)</emphasis></para><para><code>tan:group-elements-by-shared-node-values($elements-to-group as element()*, $regex-of-names-of-nodes-to-group-by as xs:string?, $group-by-shallow-node-value as xs:boolean) as element()*</code></para><programlisting>Input: a sequence of elements; an optional string representing the name of children 
in the elements </programlisting><programlisting>Output: the same elements, but grouped in <code><link linkend="element-group">&lt;group&gt;</link></code> according to whether the text 
contents of the child elements specified are equal </programlisting><programlisting>Each <code><link linkend="element-group">&lt;group&gt;</link></code> will have an <code><link linkend="attribute-n">@n</link></code> stipulating the position of the first element put in the 
group. That way the results can be sorted in order of their original elements </programlisting><programlisting>Transitivity is assumed. Suppose elements X, Y, and Z have children values A and B; B 
and C; and C and D, respectively. All three elements will be grouped, even though Y and Z do 
not directly share children values. </programlisting><para>Related: <link linkend="tan-function-group-nodes">nodes</link>, <link linkend="tan-function-group-grouping">grouping</link></para><para>Used by template <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>.</para><para>Used by function <code><link linkend="function-group-elements-by-shared-node-values">tan:group-elements-by-shared-node-values()</link></code>, <code>tan:group-elements-by-IRI()</code>, <code>tan:group-divs-by-ref()</code>, <code><link linkend="function-group-divs">tan:group-divs()</link></code>.</para><para>Relies upon <code><link linkend="function-duplicate-items">tan:duplicate-items</link></code>, <code><link linkend="function-group-elements-by-shared-node-values">tan:group-elements-by-shared-node-values()</link></code>, <code><link linkend="template-build-grouping-key">ŧ tan:build-grouping-key</link></code>.</para></section>
<section xml:id="function-infuse-tree"><title><code>tan:infuse-tree()</code></title><para><emphasis>TAN-fn-nodes-extended</emphasis></para><para><code>tan:infuse-tree($string-to-infuse as xs:string?, $tree-to-infuse as item()*, $break-at-regex as xs:string) as item()*</code></para><programlisting>Input: a string; an XML fragment that should be infused with the text; a string </programlisting><programlisting>Output: the XML fragment's text nodes replaced with the text proportionate to the 
length of each text being replaced </programlisting><programlisting>Before applying this function, make sure the tree you send is appropriately 
normalized. No space-normalization will occur, and infusion will occur wherever there are 
indentations. To avoid this behavior, first run <code><link linkend="function-strip-outer-indentation">tan:strip-outer-indentation()</link></code> or 
<code><link linkend="function-normalize-tree-space">tan:normalize-tree-space()</link></code> </programlisting><programlisting>Document nodes will be ignored. </programlisting><programlisting>Note: if the regular expression allows breaks within words, then a word may be broken 
across two <code><link linkend="element-div">&lt;div&gt;</link></code>s, which, because of space normalization rules, then winds up inserting a 
space that was not there before. Be sure to use a good regular expression to avoid bad 
breaks. </programlisting><para>Related: <link linkend="tan-function-group-nodes">nodes</link>, <link linkend="tan-function-group-tree_manipulation">tree manipulation</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-ellipses">tan:ellipses</link></code>, <code><link linkend="function-make-non-mixed">tan:make-non-mixed</link></code>, <code><link linkend="function-numbers-to-portions">tan:numbers-to-portions</link></code>, <code><link linkend="function-segment-string">tan:segment-string</link></code>, <code><link linkend="template-infuse-tokenized-text">ŧ tan:infuse-tokenized-text</link></code>.</para></section>
<section xml:id="function-insert-as-first-child"><title><code>tan:insert-as-first-child()</code></title><para><emphasis>TAN-fn-nodes-extended</emphasis></para><para><code>tan:insert-as-first-child($items-to-be-changed as item()*, $items-to-insert-as-first-child as item()*, $names-of-elements-to-receive-action as xs:string*) as item()*</code></para><programlisting>Input: items to be changed; items to be inserted; strings representing the names of 
the elements that should receive the insertion </programlisting><programlisting>Output: the first items, with the second items inserted in the appropriate place </programlisting><programlisting>This function allows the deep insertion of content </programlisting><para>Related: <link linkend="tan-function-group-nodes">nodes</link>, <link linkend="tan-function-group-tree_manipulation">tree manipulation</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="template-insert-content">ŧ tan:insert-content</link></code>.</para></section>
<section xml:id="function-insert-as-last-child"><title><code>tan:insert-as-last-child()</code></title><para><emphasis>TAN-fn-nodes-extended</emphasis></para><para><code>tan:insert-as-last-child($items-to-be-changed as item()*, $items-to-insert-as-last-child as item()*, $names-of-elements-to-receive-action as xs:string*) as item()*</code></para><programlisting>Input: items to be changed; items to be inserted; strings representing the names of 
the elements that should receive the insertion </programlisting><programlisting>Output: the first items, with the second items inserted in the appropriate place </programlisting><programlisting>This function allows the deep insertion of content </programlisting><programlisting>This function was first written to aid a 2019 version of <code><link linkend="function-vocabulary">tan:vocabulary()</link></code> </programlisting><para>Related: <link linkend="tan-function-group-nodes">nodes</link>, <link linkend="tan-function-group-tree_manipulation">tree manipulation</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="template-insert-content">ŧ tan:insert-content</link></code>.</para></section>
<section xml:id="function-last-change-agent"><title><code>tan:last-change-agent()</code></title><para><emphasis>TAN-fn-nodes-standard</emphasis></para><para><code>tan:last-change-agent($TAN-doc as document-node()*) as element()*</code></para><programlisting>Input: any TAN document </programlisting><programlisting>Output: the <code><link linkend="element-person">&lt;person&gt;</link></code>, <code><link linkend="element-organization">&lt;organization&gt;</link></code>, or <code><link linkend="element-algorithm">&lt;algorithm&gt;</link></code> who made the last change </programlisting><para>Related: <link linkend="tan-function-group-nodes">nodes</link></para><para>Used by template <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code> tan:dependency-adjustments-pass-1, <code><link linkend="template-check-referred-doc">ŧ tan:check-referred-doc</link></code>, <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>.</para><para>Relies upon <code><link linkend="function-get-doc-history">tan:get-doc-history</link></code>, <code><link linkend="function-vocabulary">tan:vocabulary</link></code>.</para></section>
<section xml:id="function-make-non-mixed"><title><code>tan:make-non-mixed()</code></title><para><emphasis>TAN-fn-nodes-extended</emphasis></para><para><code>tan:make-non-mixed($input-to-adjust as item()*) as item()*</code></para><programlisting>Input: any items that need to be converted to non-mixed content </programlisting><programlisting>Output: the input, but with any text nodes that have siblings and are not outer 
indentations wrapped in <code>&lt;_text&gt;</code> elements, with a <code>@q</code> containing the value of <code>generate-id()</code> for the 
text node in question. The identifier can be used to facilitate comparison with the 
original. </programlisting><para>Related: <link linkend="tan-function-group-nodes">nodes</link>, <link linkend="tan-function-group-tree_manipulation">tree manipulation</link></para><para>Used by function <code><link linkend="function-infuse-tree">tan:infuse-tree()</link></code>.</para><para>Relies upon <code><link linkend="template-make-non-mixed">ŧ tan:make-non-mixed</link></code>.</para></section>
<section xml:id="function-normalize-tree-space"><title><code>tan:normalize-tree-space()</code></title><para><emphasis>TAN-fn-nodes-standard</emphasis></para><para><code>tan:normalize-tree-space($input-tree as item()*, $remove-special-end-div-chars as xs:boolean) as item()*</code></para><programlisting>Input: any XML tree; boolean </programlisting><programlisting>Output: the same, but space-normalized: 
- all outer indentations are removed 
- if 
an element is known to contain only non-mixed content, all inner text nodes are 
space-normalized 
- otherwise any element that contains non-space text will be space-normalized: 
- 
initial space is removed 
- in the text from the first through last non-space character 
(excluding special end-div characters) any sequence of consecutive space characters will be 
replaced by a single word space; that single word space will be placed in the first text node 
only, and any other text nodes that contain the consecutive space character block will 
have all initial space removed 
- any final space characters in the string value of the 
element will be removed 
- if the last non-space character is not a special end-div 
character, a single word space will be added at the end 
- if the 2nd parameter is true, any special 
end-div characters will be removed </programlisting><programlisting>Because this function attends to space normalization as a mixed-content problem, 
it will space-normalize select TEI constructions. </programlisting><programlisting>Expanded TAN files are space normalized via this function, so there is no sense in 
running them again. In fact, it can introduce errors (because special div-end characters 
have already been removed). </programlisting><para>Related: <link linkend="tan-function-group-nodes">nodes</link>, <link linkend="tan-function-group-spacing">spacing</link>, <link linkend="tan-function-group-tree_manipulation">tree manipulation</link></para><para>Used by variable <code><link linkend="variable-self-resolved-plus">$tan:self-resolved-plus</link></code>.</para><para>Used by template <code><link linkend="template-get-and-resolve-dependency">ŧ tan:get-and-resolve-dependency</link></code>.</para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>.</para><para>Relies upon <code><link linkend="template-normalize-tree-space">ŧ tan:normalize-tree-space</link></code>, <code><link linkend="template-selectively-adjust-tei-space">ŧ tan:selectively-adjust-tei-space</link></code>, <code><link linkend="template-strip-outer-indentation">ŧ tan:strip-outer-indentation</link></code>.</para></section>
<section xml:id="function-path"><title><code>tan:path()</code></title><para><emphasis>TAN-fn-nodes-standard</emphasis></para><para><code>tan:path($nodes as node()*) as xs:string*</code></para><programlisting>Input: any nodes </programlisting><programlisting>Output: the path of each node </programlisting><para>Related: <link linkend="tan-function-group-nodes">nodes</link></para><para>Used by template <code><link linkend="template-core-expansion-terse-attributes-to-elements">ŧ tan:core-expansion-terse-attributes-to-elements</link></code>, <code><link linkend="template-dependency-adjustments-pass-1">ŧ tan:dependency-adjustments-pass-1</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-pluck"><title><code>tan:pluck()</code></title><para><emphasis>TAN-fn-nodes-extended</emphasis></para><para><code>tan:pluck($fragment as item()*, $pluck-beyond-level as xs:integer, $keep-short-branch-leaves as xs:boolean) as item()*</code></para><programlisting>Input: any document fragment or element; a number indicating a level in the 
hierarchy of the fragment; a boolean indicating whether leaf elements that fall short of the 
previous parameter should be included </programlisting><programlisting>Output: the fragment of the tree that is beyond the point indicated, and perhaps 
(depending upon the third parameter) with other leafs that are not quite at that level </programlisting><programlisting>This function was written primarily to serve 
<code>tan:convert-ref-to-div-fragment()</code>, to get a slice of divs that correspond to a range, without the ancestry of those divs </programlisting><para>Related: <link linkend="tan-function-group-nodes">nodes</link>, <link linkend="tan-function-group-tree_manipulation">tree manipulation</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="template-pluck">ŧ tan:pluck</link></code>.</para></section>
<section xml:id="function-remove-duplicate-siblings"><title><code>tan:remove-duplicate-siblings()</code></title><para><emphasis>Option 1 (TAN-fn-nodes-extended)</emphasis></para><para><code>tan:remove-duplicate-siblings($items-to-process as item()*) as item()*</code></para><programlisting>one-parameter version of larger one, below </programlisting><para>Used by function <code><link linkend="function-remove-duplicate-siblings">tan:remove-duplicate-siblings()</link></code>.</para><para>Relies upon <code><link linkend="function-remove-duplicate-siblings">tan:remove-duplicate-siblings</link></code>.</para><para><emphasis>Option 2 (TAN-fn-nodes-extended)</emphasis></para><para><code>tan:remove-duplicate-siblings($items-to-process as document-node()*, $element-names-to-check as xs:string*) as item()*</code></para><programlisting>Input: any items </programlisting><programlisting>Output: the same documents after removing duplicate elements whose names match the 
second parameter. </programlisting><programlisting>This function is applied during document resolution, to prune duplicate elements 
that might have been included </programlisting><para>Related: <link linkend="tan-function-group-nodes">nodes</link>, <link linkend="tan-function-group-tree_manipulation">tree manipulation</link></para><para>Used by function <code><link linkend="function-remove-duplicate-siblings">tan:remove-duplicate-siblings()</link></code>.</para><para>Relies upon <code><link linkend="template-remove-duplicate-siblings">ŧ tan:remove-duplicate-siblings</link></code>.</para></section>
<section xml:id="function-replace-expanded-class-1-body"><title><code>tan:replace-expanded-class-1-body()</code></title><para><emphasis>TAN-fn-nodes-extended</emphasis></para><para><code>tan:replace-expanded-class-1-body($expanded-class-1-file as document-node()?, $new-body-text as xs:string?) as document-node()?</code></para><programlisting>Input: An expanded class-1 file; a string </programlisting><programlisting>Output: the class-1 file, but with the body text replaced with the string, allocated 
according to <code><link linkend="function-diff">tan:diff()</link></code> </programlisting><programlisting>This function was written to replace a text with a very similar version of itself, 
perhaps altered via normalization, or selective changes. </programlisting><para>Related: <link linkend="tan-function-group-nodes">nodes</link>, <link linkend="tan-function-group-diff">diff</link></para><para>Used by function <code><link linkend="function-replace-expanded-class-1-body">tan:replace-expanded-class-1-body()</link></code>.</para><para>Relies upon <code><link linkend="function-diff">tan:diff</link></code>, <code><link linkend="function-replace-expanded-class-1-body">tan:replace-expanded-class-1-body()</link></code>, <code><link linkend="template-replace-expanded-class-1">ŧ tan:replace-expanded-class-1</link></code>.</para></section>
<section xml:id="function-restore-chopped-tree"><title><code>tan:restore-chopped-tree()</code></title><para><emphasis>TAN-fn-nodes-extended</emphasis></para><para><code>tan:restore-chopped-tree($tree-slices as item()*) as item()*</code></para><programlisting>Input: a sequence of items </programlisting><programlisting>Output: sequence that attempts to restore the items in a single tree </programlisting><programlisting>This function reverses the effects of <code><link linkend="function-chop-tree">tan:chop-tree()</link></code>, but does so on the basis of 
the chopped fragments, not a map. By default, adjacent items of the same node type are 
fused into a single node of the same type, except for elements, which must have the same 
name, namespace, and attributes for them to be fused. </programlisting><para>Related: <link linkend="tan-function-group-nodes">nodes</link>, <link linkend="tan-function-group-tree_manipulation">tree manipulation</link></para><para>Used by function <code><link linkend="function-restore-chopped-tree">tan:restore-chopped-tree()</link></code>.</para><para>Relies upon <code><link linkend="function-element-fingerprint">tan:element-fingerprint</link></code>, <code><link linkend="function-item-type">tan:item-type</link></code>, <code><link linkend="function-restore-chopped-tree">tan:restore-chopped-tree</link></code>, <code><link linkend="function-shallow-copy">tan:shallow-copy</link></code>.</para></section>
<section xml:id="function-sequence-to-tree"><title><code>tan:sequence-to-tree()</code></title><para><emphasis>Option 1 (TAN-fn-nodes-standard)</emphasis></para><para><code>tan:sequence-to-tree($sequence-to-reconstruct as item()*) as item()*</code></para><programlisting>One-parameter version of the more complete one below </programlisting><para>Used by template <code><link linkend="template-normalize-tree-space">ŧ tan:normalize-tree-space</link></code>.</para><para>Used by function <code><link linkend="function-sequence-to-tree">tan:sequence-to-tree()</link></code>, <code><link linkend="function-chop-tree">tan:chop-tree()</link></code>.</para><para>Relies upon <code><link linkend="function-sequence-to-tree">tan:sequence-to-tree</link></code>.</para><para><emphasis>Option 2 (TAN-fn-nodes-standard)</emphasis></para><para><code>tan:sequence-to-tree($sequence-to-reconstruct as item()*, $fix-orphan-text as xs:boolean) as item()*</code></para><programlisting>Input: a result of <code><link linkend="function-tree-to-sequence">tan:tree-to-sequence()</link></code>; a boolean </programlisting><programlisting>Output: the original tree; if the boolean is true, then any first children that 
precede the next level will be wrapped in an element like the first child element. </programlisting><programlisting>If a given opening tag has a corresponding <code>&lt;_close-at&gt;</code> then what is between will 
become the children of the element, and what comes after its following siblings. </programlisting><programlisting>This is the inverse of the function <code><link linkend="function-tree-to-sequence">tan:tree-to-sequence()</link></code>. That is, 
<code><link linkend="function-sequence-to-tree">tan:sequence-to-tree</link></code><code>$i</code>) =&gt; <code><link linkend="function-tree-to-sequence">tan:tree-to-sequence()</link></code> should result in a copy of <code>$i.</code>. </programlisting><programlisting>This function is especially helpful for a raw text transcription that needs to be 
converted to a class-1 body via the inline numerical references. The technique is to replace 
the numerical references with empty <code><link linkend="element-div">&lt;div&gt;</link></code>s, each one with <code><link linkend="attribute-n">@n</link></code> and <code><link linkend="attribute-type">@type</link></code> correctly 
assessed based on the match, and a <code>@_level</code> to specify where in the hierarchy it should sit. </programlisting><programlisting>You may wish to run the results of this output through 
<code>tan:consolidate-identical-adjacent-divs()</code> </programlisting><para>Related: <link linkend="tan-function-group-nodes">nodes</link>, <link linkend="tan-function-group-tree_manipulation">tree manipulation</link></para><para>Used by template <code><link linkend="template-normalize-tree-space">ŧ tan:normalize-tree-space</link></code>.</para><para>Used by function <code><link linkend="function-sequence-to-tree">tan:sequence-to-tree()</link></code>, <code><link linkend="function-chop-tree">tan:chop-tree()</link></code>.</para><para>Relies upon <code><link linkend="template-sequence-to-tree">ŧ tan:sequence-to-tree</link></code>.</para></section>
<section xml:id="function-shallow-copy"><title><code>tan:shallow-copy()</code></title><para><emphasis>Option 1 (TAN-fn-nodes-standard)</emphasis></para><para><code>tan:shallow-copy($items as item()*) as item()*</code></para><programlisting>one-parameter version of the fuller one, below </programlisting><para>Used by template <code><link linkend="template-get-and-resolve-dependency">ŧ tan:get-and-resolve-dependency</link></code>, <code><link linkend="template-mark-dependencies-pass-1">ŧ tan:mark-dependencies-pass-1</link></code>, <code><link linkend="template-dependency-adjustments-pass-2">ŧ tan:dependency-adjustments-pass-2</link></code>, <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code> tan:dependency-adjustments-pass-1, <code><link linkend="template-dependency-adjustments-pass-1">ŧ tan:dependency-adjustments-pass-1</link></code>, <code><link linkend="template-resolve-critical-dependencies-loop">ŧ tan:resolve-critical-dependencies-loop</link></code>, <code><link linkend="template-check-referred-doc">ŧ tan:check-referred-doc</link></code>, <code><link linkend="template-mark-dependencies-for-validation">ŧ tan:mark-dependencies-for-validation</link></code>, <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>, <code><link linkend="template-class-1-expansion-verbose-pass-2">ŧ tan:class-1-expansion-verbose-pass-2</link></code>, <code><link linkend="template-first-stamp-shallow-skip">ŧ tan:first-stamp-shallow-skip</link></code>, <code><link linkend="template-mark-reassigns">ŧ tan:mark-reassigns</link></code>, <code><link linkend="template-trim-long-tree">ŧ tan:trim-long-tree</link></code>, <code><link linkend="template-resolve-href">ŧ tan:resolve-href</link></code> tan:expand-standard-tan-voc, <code><link linkend="template-diff-or-collate-to-html-output-pass-1">ŧ diff-or-collate-to-html-output-pass-1</link></code>.</para><para>Used by function <code><link linkend="function-shallow-copy">tan:shallow-copy()</link></code>, <code><link linkend="function-restore-chopped-tree">tan:restore-chopped-tree()</link></code>, <code><link linkend="function-attribute-vocabulary">tan:attribute-vocabulary()</link></code>, <code><link linkend="function-get-1st-doc">tan:get-1st-doc()</link></code>, <code>tan:error()</code>, <code><link linkend="function-diff-or-collate-to-html">tan:diff-or-collate-to-html()</link></code>.</para><para>Relies upon <code><link linkend="function-shallow-copy">tan:shallow-copy</link></code>.</para><para><emphasis>Option 2 (TAN-fn-nodes-standard)</emphasis></para><para><code>tan:shallow-copy($items as item()*, $depth as xs:integer) as item()*</code></para><programlisting>Input: any document fragment; boolean indicating whether attributes should be 
kept </programlisting><programlisting>Output: a shallow copy of the fragment </programlisting><programlisting>Attributes will be preserved in a shallow-copied element. </programlisting><programlisting>Maps and arrays will be discarded. </programlisting><programlisting>This function was written to truncate large trees for output to messages and 
diagnostic result trees. </programlisting><para>Related: <link linkend="tan-function-group-nodes">nodes</link>, <link linkend="tan-function-group-tree_manipulation">tree manipulation</link></para><para>Used by template <code><link linkend="template-get-and-resolve-dependency">ŧ tan:get-and-resolve-dependency</link></code>, <code><link linkend="template-mark-dependencies-pass-1">ŧ tan:mark-dependencies-pass-1</link></code>, <code><link linkend="template-dependency-adjustments-pass-2">ŧ tan:dependency-adjustments-pass-2</link></code>, <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code> tan:dependency-adjustments-pass-1, <code><link linkend="template-dependency-adjustments-pass-1">ŧ tan:dependency-adjustments-pass-1</link></code>, <code><link linkend="template-resolve-critical-dependencies-loop">ŧ tan:resolve-critical-dependencies-loop</link></code>, <code><link linkend="template-check-referred-doc">ŧ tan:check-referred-doc</link></code>, <code><link linkend="template-mark-dependencies-for-validation">ŧ tan:mark-dependencies-for-validation</link></code>, <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>, <code><link linkend="template-class-1-expansion-verbose-pass-2">ŧ tan:class-1-expansion-verbose-pass-2</link></code>, <code><link linkend="template-first-stamp-shallow-skip">ŧ tan:first-stamp-shallow-skip</link></code>, <code><link linkend="template-mark-reassigns">ŧ tan:mark-reassigns</link></code>, <code><link linkend="template-trim-long-tree">ŧ tan:trim-long-tree</link></code>, <code><link linkend="template-resolve-href">ŧ tan:resolve-href</link></code> tan:expand-standard-tan-voc, <code><link linkend="template-diff-or-collate-to-html-output-pass-1">ŧ diff-or-collate-to-html-output-pass-1</link></code>.</para><para>Used by function <code><link linkend="function-shallow-copy">tan:shallow-copy()</link></code>, <code><link linkend="function-restore-chopped-tree">tan:restore-chopped-tree()</link></code>, <code><link linkend="function-attribute-vocabulary">tan:attribute-vocabulary()</link></code>, <code><link linkend="function-get-1st-doc">tan:get-1st-doc()</link></code>, <code>tan:error()</code>, <code><link linkend="function-diff-or-collate-to-html">tan:diff-or-collate-to-html()</link></code>.</para><para>Relies upon <code><link linkend="template-fn-shallow-copy">ŧ tan:fn-shallow-copy</link></code>.</para></section>
<section xml:id="function-sort-change-log"><title><code>tan:sort-change-log()</code></title><para><emphasis>Option 1 (TAN-fn-nodes-extended)</emphasis></para><para><code>tan:sort-change-log($TAN-fragment as item()*) as item()*</code></para><programlisting>one-parameter version of the fuller one, below </programlisting><para>Used by function <code><link linkend="function-sort-change-log">tan:sort-change-log()</link></code>.</para><para>Relies upon <code><link linkend="function-sort-change-log">tan:sort-change-log</link></code>.</para><para><emphasis>Option 2 (TAN-fn-nodes-extended)</emphasis></para><para><code>tan:sort-change-log($TAN-fragment as item()*, $sort-by-time-then-agent as xs:boolean?, $sort-ascending as xs:boolean?) as item()*</code></para><programlisting>Input: a TAN fragment; two booleans </programlisting><programlisting>Output: the TAN fragment but with the change log sorted, either by time or agent (1st 
boolean) and either ascending or descending (2nd boolean) </programlisting><para>Related: <link linkend="tan-function-group-nodes">nodes</link>, <link linkend="tan-function-group-versioning">versioning</link></para><para>Used by function <code><link linkend="function-sort-change-log">tan:sort-change-log()</link></code>.</para><para>Relies upon <code><link linkend="template-sort-change-log">ŧ tan:sort-change-log</link></code>.</para></section>
<section xml:id="function-stamp-q-id"><title><code>tan:stamp-q-id()</code></title><para><emphasis>Option 1 (TAN-fn-nodes-standard)</emphasis></para><para><code>tan:stamp-q-id($items-to-stamp as item()*) as item()*</code></para><programlisting>1-param version of the full one below </programlisting><para>Used by template <code><link linkend="template-core-expansion-terse-attributes-to-elements">ŧ tan:core-expansion-terse-attributes-to-elements</link></code>.</para><para>Used by function <code><link linkend="function-stamp-q-id">tan:stamp-q-id()</link></code>.</para><para>Relies upon <code><link linkend="function-stamp-q-id">tan:stamp-q-id</link></code>.</para><para><emphasis>Option 2 (TAN-fn-nodes-standard)</emphasis></para><para><code>tan:stamp-q-id($items-to-stamp as item()*, $stamp-shallowly as xs:boolean) as item()*</code></para><programlisting>Input: any XML fragments </programlisting><programlisting>Output: the fragments with <code>@q</code> added to each element via <code>generate-id()</code> </programlisting><para>Related: <link linkend="tan-function-group-nodes">nodes</link>, <link linkend="tan-function-group-identifiers">identifiers</link></para><para>Used by template <code><link linkend="template-core-expansion-terse-attributes-to-elements">ŧ tan:core-expansion-terse-attributes-to-elements</link></code>.</para><para>Used by function <code><link linkend="function-stamp-q-id">tan:stamp-q-id()</link></code>.</para><para>Relies upon <code><link linkend="template-stamp-q-id">ŧ tan:stamp-q-id</link></code>.</para></section>
<section xml:id="function-strip-outer-indentation"><title><code>tan:strip-outer-indentation()</code></title><para><emphasis>TAN-fn-nodes-standard</emphasis></para><para><code>tan:strip-outer-indentation($tree-fragment as item()*) as item()*</code></para><programlisting>Input: any XML fragment </programlisting><programlisting>Output: the same, but without outer indentation </programlisting><para>Related: <link linkend="tan-function-group-nodes">nodes</link>, <link linkend="tan-function-group-tree_manipulation">tree manipulation</link>, <link linkend="tan-function-group-spacing">spacing</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="template-strip-outer-indentation">ŧ tan:strip-outer-indentation</link></code>.</para></section>
<section xml:id="function-tree-to-sequence"><title><code>tan:tree-to-sequence()</code></title><para><emphasis>TAN-fn-nodes-standard</emphasis></para><para><code>tan:tree-to-sequence($xml-fragment as item()*) as item()*</code></para><programlisting>Input: any XML fragment </programlisting><programlisting>Output: a flattened sequence of XML nodes representing the original fragment. Each 
element is given a new <code>@_level</code> specifying the level of hierarchy the element had in the 
original. Closing tags are specified by &lt;_close-at id=""/&gt; with a corresponding <code>@_close-at</code> 
in the opening tag. Empty elements are retained as-is. </programlisting><para>Related: <link linkend="tan-function-group-nodes">nodes</link>, <link linkend="tan-function-group-tree_manipulation">tree manipulation</link></para><para>Used by template <code><link linkend="template-normalize-tree-space">ŧ tan:normalize-tree-space</link></code>.</para><para>Used by function <code><link linkend="function-chop-tree">tan:chop-tree()</link></code>.</para><para>Relies upon <code><link linkend="template-tree-to-sequence">ŧ tan:tree-to-sequence</link></code>.</para></section>
<section xml:id="function-trim-long-text"><title><code>tan:trim-long-text()</code></title><para><emphasis>TAN-fn-nodes-standard</emphasis></para><para><code>tan:trim-long-text($xml-fragment as item()*, $too-long as xs:integer) as item()*</code></para><programlisting>Input: an XML fragment; an integer </programlisting><programlisting>Output: the fragment with text nodes longer than the integer value abbreviated with 
an ellipsis </programlisting><para>Related: <link linkend="tan-function-group-nodes">nodes</link>, <link linkend="tan-function-group-tree_manipulation">tree manipulation</link></para><para>Used by function <code>tan:diff-courtyard()</code>, <code><link linkend="function-collate">tan:collate()</link></code>, <code>tan:diff-loop()</code>.</para><para>Relies upon <code><link linkend="template-trim-long-text">ŧ tan:trim-long-text</link></code>.</para></section>
<section xml:id="function-trim-long-tree"><title><code>tan:trim-long-tree()</code></title><para><emphasis>TAN-fn-nodes-extended</emphasis></para><para><code>tan:trim-long-tree($tree-to-trim as item()*, $shallow-copy-point as xs:integer, $deep-skip-point as xs:integer) as item()*</code></para><programlisting>Input: an XML tree, two integers </programlisting><programlisting>Output: the tree, anything beyond the shallow-copy point will be shallow-copied 
and anything beyond the deep skip point will be deep-skipped. Comments will always 
indicate how many nodes were shallow-copied or deep-skipped. </programlisting><programlisting>This function was written to truncate large diagnostic output </programlisting><para>Related: <link linkend="tan-function-group-nodes">nodes</link>, <link linkend="tan-function-group-tree_manipulation">tree manipulation</link></para><para>Used by template <code><link linkend="template-diff-or-collate-to-html-output-pass-1">ŧ diff-or-collate-to-html-output-pass-1</link></code>.</para><para>Used by function <code><link linkend="function-apply-deltas">tan:apply-deltas()</link></code>, <code><link linkend="function-diff-or-collate-to-html">tan:diff-or-collate-to-html()</link></code>.</para><para>Relies upon <code><link linkend="template-trim-long-tree">ŧ tan:trim-long-tree</link></code>.</para></section>
<section xml:id="function-update-TAN-change-log"><title><code>tan:update-TAN-change-log()</code></title><para><emphasis>Option 1 (TAN-fn-nodes-TAN-output)</emphasis></para><para><code>tan:update-TAN-change-log($TAN-file as document-node()?) as document-node()?</code></para><programlisting>one-parameter version of fuller one, below </programlisting><para>Used by function <code><link linkend="function-update-TAN-change-log">tan:update-TAN-change-log()</link></code>.</para><para>Relies upon <code><link linkend="variable-doc-uri">$tan:doc-uri</link></code>, <code><link linkend="function-update-TAN-change-log">tan:update-TAN-change-log</link></code>.</para><para><emphasis>Option 2 (TAN-fn-nodes-TAN-output)</emphasis></para><para><code>tan:update-TAN-change-log($TAN-file as document-node()?, $agent-IRIs as xs:string+, $agent-names as xs:string+, $agent-base-uri-resolved as xs:string?, $agent-type as xs:string, $agent-responsibility as xs:string, $change-message as xs:string, $source-base-uri as xs:string) as document-node()?</code></para><programlisting>Input: a TAN file; assorted parameters pertaining to the agent that created or 
changed the file </programlisting><programlisting>Output: The TAN file with appropriate credit/blame given </programlisting><programlisting>It is presumed that the TAN file is in its raw state, and that indentation should be 
respected. </programlisting><programlisting>If an agent type is not recognized, the default will be algorithm. </programlisting><para>Related: <link linkend="tan-function-group-nodes">nodes</link>, <link linkend="tan-function-group-versioning">versioning</link></para><para>Used by function <code><link linkend="function-update-TAN-change-log">tan:update-TAN-change-log()</link></code>.</para><para>Relies upon <code><link linkend="variable-TAN-vocabularies">$tan:TAN-vocabularies</link></code>, <code><link linkend="function-has-vocab">tan:has-vocab</link></code>, <code><link linkend="function-normalize-name">tan:normalize-name</link></code>, <code><link linkend="function-resolve-doc">tan:resolve-doc</link></code>, <code><link linkend="function-update-TAN-change-log">tan:update-TAN-change-log()</link></code>, <code><link linkend="function-uri-relative-to">tan:uri-relative-to</link></code>, <code><link linkend="function-vocabulary">tan:vocabulary</link></code>, <code><link linkend="template-update-TAN-change-log">ŧ tan:update-TAN-change-log</link></code>.</para></section>
<section xml:id="function-wrap-text-nodes"><title><code>tan:wrap-text-nodes()</code></title><para><emphasis>TAN-fn-nodes-extended</emphasis></para><para><code>tan:wrap-text-nodes($input-to-adjust as item()*) as item()*</code></para><programlisting>Input: any items where the text should be wrapped </programlisting><programlisting>Output: the items with text nodes wrapped in <code>&lt;_text&gt;</code> with a <code>@q</code> containing the value of 
<code>generate-id()</code> for the text node in question. </programlisting><programlisting>This function is similar to <code><link linkend="function-make-non-mixed">tan:make-non-mixed()</link></code> but applies wrapping 
universally </programlisting><para>Related: <link linkend="tan-function-group-nodes">nodes</link>, <link linkend="tan-function-group-tree_manipulation">tree manipulation</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="template-wrap-text-nodes">ŧ tan:wrap-text-nodes</link></code>.</para></section>
<section xml:id="function-xml-to-string"><title><code>tan:xml-to-string()</code></title><para><emphasis>Option 1 (TAN-fn-nodes-standard)</emphasis></para><para><code>tan:xml-to-string($fragment as item()*) as xs:string?</code></para><programlisting>one-parameter version of the fuller one, below </programlisting><para>Used by template <code><link linkend="template-mark-dependencies-pass-1">ŧ tan:mark-dependencies-pass-1</link></code>, <code><link linkend="template-class-1-expansion-verbose-pass-3">ŧ tan:class-1-expansion-verbose-pass-3</link></code>, <code><link linkend="template-mark-dependencies-for-validation">ŧ tan:mark-dependencies-for-validation</link></code>, <code><link linkend="template-core-expansion-normal">ŧ tan:core-expansion-normal</link></code>.</para><para>Used by function <code><link linkend="function-xml-to-string">tan:xml-to-string()</link></code>, <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>, <code><link linkend="function-get-1st-doc">tan:get-1st-doc()</link></code>.</para><para>Relies upon <code><link linkend="function-xml-to-string">tan:xml-to-string</link></code>.</para><para><emphasis>Option 2 (TAN-fn-nodes-standard)</emphasis></para><para><code>tan:xml-to-string($fragment as item()*, $ignore-whitespace-text-nodes as xs:boolean) as xs:string?</code></para><programlisting>Input: any fragment of XML; boolean indicating whether whitespace nodes should be 
ignored </programlisting><programlisting>Output: a string representation of the fragment </programlisting><programlisting>This function is a proxy of <code>serialize()</code>, used to represent XML fragments in plain 
text, useful in validation reports or in generating guidelines </programlisting><para>Related: <link linkend="tan-function-group-nodes">nodes</link>, <link linkend="tan-function-group-serialization">serialization</link>, <link linkend="tan-function-group-strings">strings</link></para><para>Used by template <code><link linkend="template-mark-dependencies-pass-1">ŧ tan:mark-dependencies-pass-1</link></code>, <code><link linkend="template-class-1-expansion-verbose-pass-3">ŧ tan:class-1-expansion-verbose-pass-3</link></code>, <code><link linkend="template-mark-dependencies-for-validation">ŧ tan:mark-dependencies-for-validation</link></code>, <code><link linkend="template-core-expansion-normal">ŧ tan:core-expansion-normal</link></code>.</para><para>Used by function <code><link linkend="function-xml-to-string">tan:xml-to-string()</link></code>, <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>, <code><link linkend="function-get-1st-doc">tan:get-1st-doc()</link></code>.</para><para>Relies upon <code><link linkend="template-fragment-to-text">ŧ tan:fragment-to-text</link></code>.</para></section>
</section>
</section>
<section xml:id="vkft-numerals"><title>Numerals</title><section><title>Variables</title><section xml:id="variable-alphabet-numeral-key"><title><code>$tan:alphabet-numeral-key</code></title><para><emphasis>TAN-fn-numerals-extended</emphasis></para><para>This variable has a complex definition. See
                                                   stylesheet for definiton.</para><para>Used by function <code><link linkend="function-letter-to-number">tan:letter-to-number()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-arabic-indic-numeral-regex"><title><code>$tan:arabic-indic-numeral-regex</code></title><para><emphasis>TAN-fn-numerals-extended</emphasis></para><para>Definition: <code>[٠١٢٣٤٥٦٧٨٩]+</code></para><para>Used by variable <code><link linkend="variable-nonlatin-letter-numeral-regex">$tan:nonlatin-letter-numeral-regex</link></code>.</para><para>Used by function <code><link linkend="function-letter-to-number">tan:letter-to-number()</link></code>, <code><link linkend="function-ara-to-int">tan:ara-to-int()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-greek-hundreds-regex"><title><code>$tan:greek-hundreds-regex</code></title><para><emphasis>TAN-fn-numerals-extended</emphasis></para><para>Definition: <code>[ρ-ωΡ-ΩϠϡ]</code></para><para>Used by variable <code><link linkend="variable-greek-letter-numeral-regex">$tan:greek-letter-numeral-regex</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-greek-letter-numeral-regex"><title><code>$tan:greek-letter-numeral-regex</code></title><para><emphasis>TAN-fn-numerals-extended</emphasis></para><para>Definition: <code>'͵' || <link linkend="variable-greek-unit-regex">$tan:greek-unit-regex</link> || '?(' || <link linkend="variable-greek-hundreds-regex">$tan:greek-hundreds-regex</link> || '?' || <link linkend="variable-greek-tens-regex">$tan:greek-tens-regex</link> || '?' || <link linkend="variable-greek-unit-regex">$tan:greek-unit-regex</link> || '|' || <link linkend="variable-greek-unit-regex">$tan:greek-unit-regex</link> || '?' || <link linkend="variable-greek-hundreds-regex">$tan:greek-hundreds-regex</link> || '?' ||     <link linkend="variable-greek-tens-regex">$tan:greek-tens-regex</link> || <link linkend="variable-greek-unit-regex">$tan:greek-unit-regex</link> || '?|' || <link linkend="variable-greek-unit-regex">$tan:greek-unit-regex</link> || '?'|| <link linkend="variable-greek-hundreds-regex">$tan:greek-hundreds-regex</link> || <link linkend="variable-greek-tens-regex">$tan:greek-tens-regex</link> || '?' || <link linkend="variable-greek-unit-regex">$tan:greek-unit-regex</link> || '?)ʹ?'</code></para><para>Used by variable <code><link linkend="variable-nonlatin-letter-numeral-regex">$tan:nonlatin-letter-numeral-regex</link></code>.</para><para>Relies upon <code><link linkend="variable-greek-hundreds-regex">$tan:greek-hundreds-regex</link></code>, <code><link linkend="variable-greek-tens-regex">$tan:greek-tens-regex</link></code>, <code><link linkend="variable-greek-unit-regex">$tan:greek-unit-regex</link></code>.</para></section>
<section xml:id="variable-greek-tens-regex"><title><code>$tan:greek-tens-regex</code></title><para><emphasis>TAN-fn-numerals-extended</emphasis></para><para>Definition: <code>[ι-πΙ-ΠϘϙϞϟ]</code></para><para>Used by variable <code><link linkend="variable-greek-letter-numeral-regex">$tan:greek-letter-numeral-regex</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-greek-unit-regex"><title><code>$tan:greek-unit-regex</code></title><para><emphasis>TAN-fn-numerals-extended</emphasis></para><para>Definition: <code>[α-θΑ-ΘϛϚ]</code></para><para>Used by variable <code><link linkend="variable-greek-letter-numeral-regex">$tan:greek-letter-numeral-regex</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-latin-letter-numeral-regex"><title><code>$tan:latin-letter-numeral-regex</code></title><para><emphasis>TAN-fn-numerals-standard</emphasis></para><para>Definition: <code>a+|b+|c+|d+|e+|f+|g+|h+|i+|j+|k+|l+|m+|n+|o+|p+|q+|r+|s+|t+|u+|v+|w+|x+|y+|z+</code></para><para>Used by variable <code><link linkend="variable-n-type-regex">$tan:n-type-regex</link></code>.</para><para>Used by function <code><link linkend="function-aaa-to-int">tan:aaa-to-int()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-n-type"><title><code>$tan:n-type</code></title><para><emphasis>TAN-fn-numerals-standard</emphasis></para><para>Definition: <code>('i', '1', '1a', 'a', 'a1', 'α', '$', 'i-or-a')</code></para><para>Used by template <code><link linkend="template-string-to-numerals">ŧ tan:string-to-numerals</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-n-type-label"><title><code>$tan:n-type-label</code></title><para><emphasis>TAN-fn-numerals-standard</emphasis></para><para>Definition: <code>       ('Roman numerals', 'Arabic numerals', 'Arabic numerals + alphabet numeral', 'alphabet numeral', 'alphabet numeral + Arabic numeral',       'non-Latin-alphabet numeral', 'string', 'Roman or alphabet numeral')</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-n-type-regex"><title><code>$tan:n-type-regex</code></title><para><emphasis>TAN-fn-numerals-standard</emphasis></para><para>This variable has a complex definition. See
                                                   stylesheet for definiton.</para><para>Used by template <code><link linkend="template-string-to-numerals">ŧ tan:string-to-numerals</link></code>.</para><para>Relies upon <code><link linkend="variable-latin-letter-numeral-regex">$tan:latin-letter-numeral-regex</link></code>, <code><link linkend="variable-nonlatin-letter-numeral-regex">$tan:nonlatin-letter-numeral-regex</link></code>, <code><link linkend="variable-roman-numeral-regex">$tan:roman-numeral-regex</link></code>.</para></section>
<section xml:id="variable-nonlatin-letter-numeral-regex"><title><code>$tan:nonlatin-letter-numeral-regex</code></title><para><emphasis>TAN-fn-numerals-extended</emphasis></para><para>Definition: <code>string-join((<link linkend="variable-arabic-indic-numeral-regex">$tan:arabic-indic-numeral-regex</link>, <link linkend="variable-greek-letter-numeral-regex">$tan:greek-letter-numeral-regex</link>, <link linkend="variable-syriac-letter-numeral-pattern">$tan:syriac-letter-numeral-pattern</link>), '|')</code></para><para>Used by variable <code><link linkend="variable-n-type-regex">$tan:n-type-regex</link></code>.</para><para>Relies upon <code><link linkend="variable-arabic-indic-numeral-regex">$tan:arabic-indic-numeral-regex</link></code>, <code><link linkend="variable-greek-letter-numeral-regex">$tan:greek-letter-numeral-regex</link></code>, <code><link linkend="variable-syriac-letter-numeral-pattern">$tan:syriac-letter-numeral-pattern</link></code>.</para></section>
<section xml:id="variable-roman-numeral-regex"><title><code>$tan:roman-numeral-regex</code></title><para><emphasis>TAN-fn-numerals-standard</emphasis></para><para>Definition: <code>m{0,4}(cm|cd|d?c{0,3})(xc|xl|l?x{0,3})(im|ic|il|ix|iv|v?i{0,3})</code></para><para>Used by variable <code><link linkend="variable-n-type-regex">$tan:n-type-regex</link></code>.</para><para>Used by function <code><link linkend="function-rom-to-int">tan:rom-to-int()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-syriac-hundreds-regex"><title><code>$tan:syriac-hundreds-regex</code></title><para><emphasis>TAN-fn-numerals-extended</emphasis></para><para>Definition: <code>ܬ?[ܩܪܫܬ]|[ܢܣܥܦܨ]</code></para><para>Used by variable <code><link linkend="variable-syriac-letter-numeral-pattern">$tan:syriac-letter-numeral-pattern</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-syriac-letter-numeral-pattern"><title><code>$tan:syriac-letter-numeral-pattern</code></title><para><emphasis>TAN-fn-numerals-extended</emphasis></para><para>Definition: <code><link linkend="variable-syriac-unit-regex">$tan:syriac-unit-regex</link> || '?\p{Mc}?(' || <link linkend="variable-syriac-hundreds-regex">$tan:syriac-hundreds-regex</link> || '\p{Mc})?\p{Mc}?' || <link linkend="variable-syriac-tens-regex">$tan:syriac-tens-regex</link> || '?\p{Mc}?' || <link linkend="variable-syriac-unit-regex">$tan:syriac-unit-regex</link> || '\p{Mc}?|' ||        <link linkend="variable-syriac-unit-regex">$tan:syriac-unit-regex</link> || '?\p{Mc}?(' || <link linkend="variable-syriac-hundreds-regex">$tan:syriac-hundreds-regex</link> || '\p{Mc})?\p{Mc}?' || <link linkend="variable-syriac-tens-regex">$tan:syriac-tens-regex</link> || '\p{Mc}?' || <link linkend="variable-syriac-unit-regex">$tan:syriac-unit-regex</link> || '?\p{Mc}?|' ||        <link linkend="variable-syriac-unit-regex">$tan:syriac-unit-regex</link> || '?\p{Mc}?(' || <link linkend="variable-syriac-hundreds-regex">$tan:syriac-hundreds-regex</link> || '\p{Mc})\p{Mc}?' || <link linkend="variable-syriac-tens-regex">$tan:syriac-tens-regex</link> || '?\p{Mc}?' || <link linkend="variable-syriac-unit-regex">$tan:syriac-unit-regex</link> || '?\p{Mc}?'</code></para><para>Used by variable <code><link linkend="variable-nonlatin-letter-numeral-regex">$tan:nonlatin-letter-numeral-regex</link></code>.</para><para>Relies upon <code><link linkend="variable-syriac-hundreds-regex">$tan:syriac-hundreds-regex</link></code>, <code><link linkend="variable-syriac-tens-regex">$tan:syriac-tens-regex</link></code>, <code><link linkend="variable-syriac-unit-regex">$tan:syriac-unit-regex</link></code>.</para></section>
<section xml:id="variable-syriac-tens-regex"><title><code>$tan:syriac-tens-regex</code></title><para><emphasis>TAN-fn-numerals-extended</emphasis></para><para>Definition: <code>[ܝܟܠܡܢܣܥܦܨ]</code></para><para>Used by variable <code><link linkend="variable-syriac-letter-numeral-pattern">$tan:syriac-letter-numeral-pattern</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-syriac-unit-regex"><title><code>$tan:syriac-unit-regex</code></title><para><emphasis>TAN-fn-numerals-extended</emphasis></para><para>Definition: <code>[ܐܒܓܕܗܘܙܚܛ]</code></para><para>Used by variable <code><link linkend="variable-syriac-letter-numeral-pattern">$tan:syriac-letter-numeral-pattern</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
</section>
<section><title>Functions</title><section xml:id="function-aaa-to-int"><title><code>tan:aaa-to-int()</code></title><para><emphasis>TAN-fn-numerals-standard</emphasis></para><para><code>tan:aaa-to-int($arg as xs:string*) as xs:integer*</code></para><programlisting>Input: any numerals in the supported letter numeral system </programlisting><programlisting>Output: the integer equivalent </programlisting><programlisting>Sequence goes a, b, c, ... z, aa, bb, ..., aaa, bbb, .... E.g., 'ccc' - &gt; 55 </programlisting><para>Related: <link linkend="tan-function-group-numerals">numerals</link>, <link linkend="tan-function-group-numerics">numerics</link></para><para>Used by template <code><link linkend="template-string-to-numerals">ŧ tan:string-to-numerals</link></code>.</para><para>Relies upon <code><link linkend="variable-latin-letter-numeral-regex">$tan:latin-letter-numeral-regex</link></code>.</para></section>
<section xml:id="function-ara-to-int"><title><code>tan:ara-to-int()</code></title><para><emphasis>TAN-fn-numerals-extended</emphasis></para><para><code>tan:ara-to-int($arabic-indic-numerals as xs:string*) as xs:integer*</code></para><programlisting>Input: Arabic-indic numerals </programlisting><programlisting>Output: Integer values, if the input conforms to the correct pattern </programlisting><para>Related: <link linkend="tan-function-group-numerals">numerals</link>, <link linkend="tan-function-group-Arabic">Arabic</link>, <link linkend="tan-function-group-numerics">numerics</link></para><para>Used by function <code><link linkend="function-letter-to-number">tan:letter-to-number()</link></code>.</para><para>Relies upon <code><link linkend="variable-arabic-indic-numeral-regex">$tan:arabic-indic-numeral-regex</link></code>.</para></section>
<section xml:id="function-cardinal"><title><code>tan:cardinal()</code></title><para><emphasis>TAN-fn-numerals-standard</emphasis></para><para><code>tan:cardinal($integer-to-convert as xs:integer?) as xs:string?</code></para><programlisting>Input: an integer </programlisting><programlisting>Output: the English term for the number </programlisting><para>Related: <link linkend="tan-function-group-numerals">numerals</link>, <link linkend="tan-function-group-numerics">numerics</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-chop-string">tan:chop-string</link></code>.</para></section>
<section xml:id="function-grc-to-int"><title><code>tan:grc-to-int()</code></title><para><emphasis>TAN-fn-numerals-extended</emphasis></para><para><code>tan:grc-to-int($greek-numerals as xs:string*) as xs:integer*</code></para><programlisting>Input: Greek letters that represent numerals </programlisting><programlisting>Output: the numerical value of the letters </programlisting><programlisting>NB, this does not take into account the use of letters representing numbers 1000 and 
greater </programlisting><para>Related: <link linkend="tan-function-group-numerals">numerals</link>, <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-Greek">Greek</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-letter-to-number">tan:letter-to-number</link></code>.</para></section>
<section xml:id="function-int-to-aaa"><title><code>tan:int-to-aaa()</code></title><para><emphasis>TAN-fn-numerals-extended</emphasis></para><para><code>tan:int-to-aaa($integers as xs:integer*) as xs:string*</code></para><programlisting>Input: any integers </programlisting><programlisting>Output: the alphabetic representation of those numerals </programlisting><para>Related: <link linkend="tan-function-group-numerals">numerals</link>, <link linkend="tan-function-group-numerics">numerics</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-int-to-grc"><title><code>tan:int-to-grc()</code></title><para><emphasis>TAN-fn-numerals-extended</emphasis></para><para><code>tan:int-to-grc($integers as xs:integer*) as xs:string*</code></para><programlisting>Input: any integers </programlisting><programlisting>Output: the integers expressed as lowercase Greek alphabetic numerals, with 
numeral <code>marker(</code>s) </programlisting><para>Related: <link linkend="tan-function-group-numerals">numerals</link>, <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-Greek">Greek</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-chop-string">tan:chop-string</link></code>.</para></section>
<section xml:id="function-integers-to-expression"><title><code>tan:integers-to-expression()</code></title><para><emphasis>TAN-fn-numerals-extended</emphasis></para><para><code>tan:integers-to-expression($input-integers as xs:integer*) as xs:string?</code></para><programlisting>Input: any integers </programlisting><programlisting>Output: a string that compactly expresses those integers, sorted </programlisting><programlisting>Example: (1, 3, 6, 1, 2) - &gt; "1-3, 6" </programlisting><para>Related: <link linkend="tan-function-group-numerals">numerals</link>, <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-sequences">sequences</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="template-integers-to-expression">ŧ tan:integers-to-expression</link></code>.</para></section>
<section xml:id="function-letter-to-number"><title><code>tan:letter-to-number()</code></title><para><emphasis>TAN-fn-numerals-extended</emphasis></para><para><code>tan:letter-to-number($numerical-letters as xs:anyAtomicType*) as xs:integer*</code></para><programlisting>Input: any sequence of strings that represent alphabetic numerals </programlisting><programlisting>Output: those numerals as integers </programlisting><programlisting>Works only for letter patterns that have been defined; anything else produces null 
results </programlisting><para>Related: <link linkend="tan-function-group-numerals">numerals</link>, <link linkend="tan-function-group-numerics">numerics</link></para><para>Used by template <code><link linkend="template-string-to-numerals">ŧ tan:string-to-numerals</link></code>.</para><para>Used by function <code><link linkend="function-grc-to-int">tan:grc-to-int()</link></code>, <code><link linkend="function-syr-to-int">tan:syr-to-int()</link></code>.</para><para>Relies upon <code><link linkend="variable-alphabet-numeral-key">$tan:alphabet-numeral-key</link></code>, <code><link linkend="variable-arabic-indic-numeral-regex">$tan:arabic-indic-numeral-regex</link></code>, <code><link linkend="function-ara-to-int">tan:ara-to-int</link></code>.</para></section>
<section xml:id="function-ordinal"><title><code>tan:ordinal()</code></title><para><emphasis>TAN-fn-numerals-standard</emphasis></para><para><code>tan:ordinal($in as xs:integer*) as xs:string*</code></para><programlisting>Input: one or more numerals </programlisting><programlisting>Output: one or more strings with the English form of the ordinal form of the input 
number </programlisting><programlisting>Example: (1, 4, 17) -&gt; ('first', 'fourth', '17th') </programlisting><para>Related: <link linkend="tan-function-group-numerals">numerals</link>, <link linkend="tan-function-group-numerics">numerics</link></para><para>Used by template <code><link linkend="template-class-2-expansion-terse">ŧ tan:class-2-expansion-terse</link></code> tan:class-2-expansion-terse-for-validation.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-rom-to-int"><title><code>tan:rom-to-int()</code></title><para><emphasis>TAN-fn-numerals-standard</emphasis></para><para><code>tan:rom-to-int($arg as xs:string*) as xs:integer*</code></para><programlisting>Input: any roman numeral less than 5000 </programlisting><programlisting>Output: the numeral converted to an integer </programlisting><para>Related: <link linkend="tan-function-group-numerals">numerals</link>, <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-Latin">Latin</link></para><para>Used by template <code><link linkend="template-string-to-numerals">ŧ tan:string-to-numerals</link></code>.</para><para>Relies upon <code><link linkend="variable-roman-numeral-regex">$tan:roman-numeral-regex</link></code>.</para></section>
<section xml:id="function-string-to-numerals"><title><code>tan:string-to-numerals()</code></title><para><emphasis>Option 1 (TAN-fn-numerals-standard)</emphasis></para><para><code>tan:string-to-numerals($string-to-analyze as xs:string?) as xs:string*</code></para><programlisting>one-parameter version of the function below </programlisting><para>Used by template <code><link linkend="template-check-and-expand-ranges">ŧ tan:check-and-expand-ranges</link></code>, <code><link linkend="template-resolve-numerals">ŧ tan:resolve-numerals</link></code>, <code><link linkend="template-class-1-expansion-verbose-pass-2">ŧ tan:class-1-expansion-verbose-pass-2</link></code>.</para><para>Used by function <code><link linkend="function-string-to-numerals">tan:string-to-numerals()</link></code>, <code>tan:analyze-sequence()</code>, <code>tan:string-to-int()</code>.</para><para>Relies upon <code><link linkend="function-string-to-numerals">tan:string-to-numerals</link></code>.</para><para><emphasis>Option 2 (TAN-fn-numerals-standard)</emphasis></para><para><code>tan:string-to-numerals($string-to-analyze as xs:string?, $ambig-is-roman as xs:boolean?, $return-only-numerals as xs:boolean?, $n-alias-items as element()*, $numeral-exceptions as xs:string*) as xs:string*</code></para><programlisting>Input: a string thought to contain numerals of some type (e.g., Roman); a boolean 
indicating whether ambiguous letters should be treated as Roman numerals or letter numerals; a 
boolean indicating whether only numeral matches should be returned </programlisting><programlisting>Output: the string with parts that look like numerals converted to Arabic numerals </programlisting><programlisting>Does not take into account requests for help </programlisting><para>Related: <link linkend="tan-function-group-numerals">numerals</link>, <link linkend="tan-function-group-strings">strings</link></para><para>Used by template <code><link linkend="template-check-and-expand-ranges">ŧ tan:check-and-expand-ranges</link></code>, <code><link linkend="template-resolve-numerals">ŧ tan:resolve-numerals</link></code>, <code><link linkend="template-class-1-expansion-verbose-pass-2">ŧ tan:class-1-expansion-verbose-pass-2</link></code>.</para><para>Used by function <code><link linkend="function-string-to-numerals">tan:string-to-numerals()</link></code>, <code>tan:analyze-sequence()</code>, <code>tan:string-to-int()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-syr-to-int"><title><code>tan:syr-to-int()</code></title><para><emphasis>TAN-fn-numerals-extended</emphasis></para><para><code>tan:syr-to-int($syriac-numerals as xs:string*) as xs:integer*</code></para><programlisting>Input: Syriac letters that represent numerals </programlisting><programlisting>Output: the numerical value of the letters </programlisting><programlisting>NB, this does not take into account the use of letters representing numbers 1000 and 
greater </programlisting><para>Related: <link linkend="tan-function-group-numerals">numerals</link>, <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-Syriac">Syriac</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-letter-to-number">tan:letter-to-number</link></code>.</para></section>
</section>
</section>
<section xml:id="vkft-numerics"><title>Numerics</title><section><title>Variables</title><section xml:id="variable-binary-error-key"><title><code>$tan:binary-error-key</code></title><para><emphasis>TAN-fn-binary</emphasis></para><para>This variable has a complex definition. See
                                                   stylesheet for definiton.</para><para>Used by variable <code><link linkend="variable-error-key">$tan:error-key</link></code>.</para><para>Used by function <code><link linkend="function-pad-bits">tan:pad-bits()</link></code>, <code><link linkend="function-bitwise-xor">tan:bitwise-xor()</link></code>, <code><link linkend="function-bits-to-eight-bit-chars">tan:bits-to-eight-bit-chars()</link></code>, <code><link linkend="function-bitwise-or">tan:bitwise-or()</link></code>, <code><link linkend="function-bitwise-and">tan:bitwise-and()</link></code>, <code><link linkend="function-bits-to-octets">tan:bits-to-octets()</link></code>, <code><link linkend="function-eight-bit-chars-to-hexBinary">tan:eight-bit-chars-to-hexBinary()</link></code>, <code><link linkend="function-octets-to-hexBinary">tan:octets-to-hexBinary()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-numeric-conversion-error-key"><title><code>$tan:numeric-conversion-error-key</code></title><para><emphasis>TAN-fn-numeric-conversion</emphasis></para><para>This variable has a complex definition. See
                                                   stylesheet for definiton.</para><para>Used by variable <code><link linkend="variable-error-key">$tan:error-key</link></code>.</para><para>Used by function <code><link linkend="function-base64-to-base64Binary">tan:base64-to-base64Binary()</link></code>, <code><link linkend="function-dec-to-n">tan:dec-to-n()</link></code>, <code><link linkend="function-hex-to-base64Binary">tan:hex-to-base64Binary()</link></code>, <code><link linkend="function-hex-to-hexBinary">tan:hex-to-hexBinary()</link></code>, <code><link linkend="function-n-to-dec">tan:n-to-dec()</link></code>, <code><link linkend="function-bin-to-bits">tan:bin-to-bits()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-octet-error-key"><title><code>$tan:octet-error-key</code></title><para><emphasis>TAN-fn-octets</emphasis></para><para>This variable has a complex definition. See
                                                   stylesheet for definiton.</para><para>Used by variable <code><link linkend="variable-error-key">$tan:error-key</link></code>.</para><para>Used by function <code><link linkend="function-utf-8-octets-to-string">tan:utf-8-octets-to-string()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
</section>
<section><title>Functions</title><section xml:id="function-base26-to-dec"><title><code>tan:base26-to-dec()</code></title><para><emphasis>TAN-fn-numeric-conversion</emphasis></para><para><code>tan:base26-to-dec($in as xs:string?) as xs:integer?</code></para><programlisting>Input: a string representation of a base-26 number </programlisting><programlisting>Output: an integer representing the base-10 value of the input </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-n-to-dec">tan:n-to-dec</link></code>.</para></section>
<section xml:id="function-base64-to-base64Binary"><title><code>tan:base64-to-base64Binary()</code></title><para><emphasis>TAN-fn-numeric-conversion</emphasis></para><para><code>tan:base64-to-base64Binary($in as xs:string?) as xs:base64Binary?</code></para><programlisting>Input: a base-64 string </programlisting><programlisting>Output: the string cast to xs:base64Binary, if possible </programlisting><programlisting>base64Binary is not the same as a base 64 number, because it represents a 
redistribution of bits. For example, decimal/base-64 F = hex 05 = binary 00000101 whose bits must 
redistributed into the 4-digit base64binary as follows: 000001 01[0000] [padding] [padding] </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="variable-TAN-namespace">$tan:TAN-namespace</link></code>, <code><link linkend="variable-numeric-conversion-error-key">$tan:numeric-conversion-error-key</link></code>, <code><link linkend="function-base64-to-hex">tan:base64-to-hex</link></code>, <code><link linkend="function-hex-to-hexBinary">tan:hex-to-hexBinary</link></code>.</para></section>
<section xml:id="function-base64-to-bin"><title><code>tan:base64-to-bin()</code></title><para><emphasis>TAN-fn-numeric-conversion</emphasis></para><para><code>tan:base64-to-bin($in as xs:string?) as xs:string?</code></para><programlisting>Input: a string representation of a base-64 number </programlisting><programlisting>Output: a string representing the datum in binary code </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-base64-to-dec">tan:base64-to-dec</link></code>, <code><link linkend="function-dec-to-bin">tan:dec-to-bin</link></code>, <code><link linkend="function-fill">tan:fill</link></code>.</para></section>
<section xml:id="function-base64-to-dec"><title><code>tan:base64-to-dec()</code></title><para><emphasis>TAN-fn-numeric-conversion</emphasis></para><para><code>tan:base64-to-dec($in as xs:string?) as xs:integer?</code></para><programlisting>Input: a string representation of a base-64 number </programlisting><programlisting>Output: an integer representing the base-10 value of the input </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link></para><para>Used by function <code><link linkend="function-base64-to-bin">tan:base64-to-bin()</link></code>, <code><link linkend="function-base64-to-hex">tan:base64-to-hex()</link></code>.</para><para>Relies upon <code><link linkend="function-n-to-dec">tan:n-to-dec</link></code>.</para></section>
<section xml:id="function-base64-to-hex"><title><code>tan:base64-to-hex()</code></title><para><emphasis>TAN-fn-numeric-conversion</emphasis></para><para><code>tan:base64-to-hex($in as xs:string?) as xs:string?</code></para><programlisting>Input: a string representation of a base-64 number </programlisting><programlisting>Output: a string representing the datum in hexadecimal </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link></para><para>Used by function <code><link linkend="function-base64-to-base64Binary">tan:base64-to-base64Binary()</link></code>.</para><para>Relies upon <code><link linkend="function-base64-to-dec">tan:base64-to-dec</link></code>, <code><link linkend="function-dec-to-hex">tan:dec-to-hex</link></code>, <code><link linkend="function-fill">tan:fill</link></code>.</para></section>
<section xml:id="function-base64Binary-to-base64"><title><code>tan:base64Binary-to-base64()</code></title><para><emphasis>TAN-fn-numeric-conversion</emphasis></para><para><code>tan:base64Binary-to-base64($in as xs:base64Binary?) as xs:string?</code></para><programlisting>Input: a base64Binary </programlisting><programlisting>Output: the item as a base-64 number </programlisting><programlisting>The output should have no more initial zeroes (A) than the input </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-hex-to-base64">tan:hex-to-base64</link></code>.</para></section>
<section xml:id="function-base64Binary-to-bin"><title><code>tan:base64Binary-to-bin()</code></title><para><emphasis>TAN-fn-numeric-conversion</emphasis></para><para><code>tan:base64Binary-to-bin($in as xs:base64Binary?) as xs:string?</code></para><programlisting>Input: a base64Binary </programlisting><programlisting>Output: a string with the value in base 2 </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link></para><para>Used by function <code><link linkend="function-base64Binary-to-bits">tan:base64Binary-to-bits()</link></code>.</para><para>Relies upon <code><link linkend="function-hex-to-bin">tan:hex-to-bin</link></code>.</para></section>
<section xml:id="function-base64binary-to-bin"><title><code>tan:base64binary-to-bin()</code></title><para><emphasis>TAN-fn-numeric-conversion</emphasis></para><para><code>tan:base64binary-to-bin($in as xs:base64Binary?) as xs:string?</code></para><programlisting>Input: a base64binary </programlisting><programlisting>Output: the number converted to a base 2 binary string </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-hex-to-bin">tan:hex-to-bin</link></code>.</para></section>
<section xml:id="function-base64Binary-to-bits"><title><code>tan:base64Binary-to-bits()</code></title><para><emphasis>TAN-fn-binary</emphasis></para><para><code>tan:base64Binary-to-bits($in as xs:base64Binary?) as xs:boolean*</code></para><programlisting>Input: a base64Binary </programlisting><programlisting>Output: the value in bits (booleans) </programlisting><programlisting>Because base64Binary works in bytes, the output will be a multiple of 8 </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-binary">binary</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-base64Binary-to-bin">tan:base64Binary-to-bin</link></code>, <code><link linkend="function-bin-to-bits">tan:bin-to-bits</link></code>.</para></section>
<section xml:id="function-base64Binary-to-eight-bit-chars"><title><code>tan:base64Binary-to-eight-bit-chars()</code></title><para><emphasis>TAN-fn-binary</emphasis></para><para><code>tan:base64Binary-to-eight-bit-chars($in as xs:base64Binary?) as xs:string?</code></para><programlisting>Input: a base64 binary </programlisting><programlisting>Output: the same, converted to an 8-bit character string </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-binary">binary</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-hexBinary-to-eight-bit-chars">tan:hexBinary-to-eight-bit-chars</link></code>.</para></section>
<section xml:id="function-base64Binary-to-hex"><title><code>tan:base64Binary-to-hex()</code></title><para><emphasis>TAN-fn-numeric-conversion</emphasis></para><para><code>tan:base64Binary-to-hex($in as xs:base64Binary?) as xs:string?</code></para><programlisting>Input: a base64Binary </programlisting><programlisting>Output: a string with the value in hexadecimal </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-base64Binary-to-octets"><title><code>tan:base64Binary-to-octets()</code></title><para><emphasis>TAN-fn-binary</emphasis></para><para><code>tan:base64Binary-to-octets($in as xs:base64Binary?) as xs:integer*</code></para><programlisting>Input: a base64Binary </programlisting><programlisting>Output: a sequence of integers between 0 and 255 representing the base64Binary 
value </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-binary">binary</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-hexBinary-to-octets">tan:hexBinary-to-octets</link></code>.</para></section>
<section xml:id="function-bin-to-base64"><title><code>tan:bin-to-base64()</code></title><para><emphasis>TAN-fn-numeric-conversion</emphasis></para><para><code>tan:bin-to-base64($in as xs:string?) as xs:string?</code></para><programlisting>Input: a string representing a base 2 binary </programlisting><programlisting>Output: a string representing the number in base 64 </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-bin-to-dec">tan:bin-to-dec</link></code>, <code><link linkend="function-dec-to-base64">tan:dec-to-base64</link></code>, <code><link linkend="function-fill">tan:fill</link></code>.</para></section>
<section xml:id="function-bin-to-base64Binary"><title><code>tan:bin-to-base64Binary()</code></title><para><emphasis>TAN-fn-numeric-conversion</emphasis></para><para><code>tan:bin-to-base64Binary($in as xs:string?) as xs:base64Binary?</code></para><programlisting>Input: a string representing base-2 binary </programlisting><programlisting>Output: the number as xs:base64Binary </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-bin-to-hex">tan:bin-to-hex</link></code>, <code><link linkend="function-hex-to-hexBinary">tan:hex-to-hexBinary</link></code>.</para></section>
<section xml:id="function-bin-to-bits"><title><code>tan:bin-to-bits()</code></title><para><emphasis>TAN-fn-numeric-conversion</emphasis></para><para><code>tan:bin-to-bits($base-2-binary as xs:string?) as xs:boolean*</code></para><programlisting>Input: any string representing base-2 binary </programlisting><programlisting>Output: a sequence of booleans representing the bits of the binary </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link></para><para>Used by function <code><link linkend="function-md5">tan:md5()</link></code>, <code><link linkend="function-hexBinary-to-bits">tan:hexBinary-to-bits()</link></code>, <code><link linkend="function-base64Binary-to-bits">tan:base64Binary-to-bits()</link></code>, <code><link linkend="function-hex-to-bits">tan:hex-to-bits()</link></code>.</para><para>Relies upon <code><link linkend="variable-TAN-namespace">$tan:TAN-namespace</link></code>, <code><link linkend="variable-numeric-conversion-error-key">$tan:numeric-conversion-error-key</link></code>.</para></section>
<section xml:id="function-bin-to-dec"><title><code>tan:bin-to-dec()</code></title><para><emphasis>TAN-fn-numeric-conversion</emphasis></para><para><code>tan:bin-to-dec($in as xs:string?) as xs:integer?</code></para><programlisting>Input: a binary </programlisting><programlisting>Output: the number in decimal form, as an integer </programlisting><programlisting>Input is assumed to be big-endian </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link></para><para>Used by function <code>tan:le-bits-to-int-and-neg()</code>, <code><link linkend="function-md5">tan:md5()</link></code>, <code><link linkend="function-bin-to-hex">tan:bin-to-hex()</link></code>, <code><link linkend="function-bin-to-base64">tan:bin-to-base64()</link></code>, <code><link linkend="function-bits-to-octets">tan:bits-to-octets()</link></code>, <code><link linkend="function-utf-8-octets-to-string">tan:utf-8-octets-to-string()</link></code>.</para><para>Relies upon <code><link linkend="function-n-to-dec">tan:n-to-dec</link></code>.</para></section>
<section xml:id="function-bin-to-hex"><title><code>tan:bin-to-hex()</code></title><para><emphasis>TAN-fn-numeric-conversion</emphasis></para><para><code>tan:bin-to-hex($in as xs:string?) as xs:string?</code></para><programlisting>Input: a string representing a base 2 binary </programlisting><programlisting>Output: a string representing the number in hexadecimal </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link></para><para>Used by function <code><link linkend="function-bin-to-base64Binary">tan:bin-to-base64Binary()</link></code>, <code><link linkend="function-bin-to-hexBinary">tan:bin-to-hexBinary()</link></code>, <code><link linkend="function-bits-to-hex">tan:bits-to-hex()</link></code>.</para><para>Relies upon <code><link linkend="function-bin-to-dec">tan:bin-to-dec</link></code>, <code><link linkend="function-dec-to-hex">tan:dec-to-hex</link></code>, <code><link linkend="function-fill">tan:fill</link></code>.</para></section>
<section xml:id="function-bin-to-hexBinary"><title><code>tan:bin-to-hexBinary()</code></title><para><emphasis>TAN-fn-numeric-conversion</emphasis></para><para><code>tan:bin-to-hexBinary($in as xs:string?) as xs:hexBinary?</code></para><programlisting>Input: a string representing base-2 binary </programlisting><programlisting>Output: the number as xs:hexBinary </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-bin-to-hex">tan:bin-to-hex</link></code>, <code><link linkend="function-hex-to-hexBinary">tan:hex-to-hexBinary</link></code>.</para></section>
<section xml:id="function-bits-to-base64Binary"><title><code>tan:bits-to-base64Binary()</code></title><para><emphasis>TAN-fn-binary</emphasis></para><para><code>tan:bits-to-base64Binary($input-bits as xs:boolean*, $big-endian as xs:boolean) as xs:base64Binary?</code></para><programlisting>Input: a sequence of bits (booleans); a boolean specifying whether the bits are 
big-endian or not </programlisting><programlisting>Output: the bits as a base64Binary </programlisting><programlisting>Because a base64Binary is interchangeable with a hexBinary, which is eight bits, 
the input bits are cast to bytes. For defective byte input, little/big endian options 
will likely result in different output. For whole bytes, the results should be the same, 
since the base64Binary will preserve the endianness of the input. Trailing = are padding 
characters that are neither 0 nor 1 </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-binary">binary</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-bits-to-hexBinary">tan:bits-to-hexBinary</link></code>.</para></section>
<section xml:id="function-bits-to-bin"><title><code>tan:bits-to-bin()</code></title><para><emphasis>TAN-fn-numeric-conversion</emphasis></para><para><code>tan:bits-to-bin($bits as xs:boolean*) as xs:string?</code></para><programlisting>Input: a sequence of booleans </programlisting><programlisting>Output: a base-2 binary representation of the sequence </programlisting><programlisting>Example: false, true, true &gt; '011' </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link></para><para>Used by function <code>tan:le-bits-to-int-and-neg()</code>, <code><link linkend="function-md5">tan:md5()</link></code>, <code><link linkend="function-bitwise-rotate">tan:bitwise-rotate()</link></code>, <code><link linkend="function-bits-to-octets">tan:bits-to-octets()</link></code>, <code><link linkend="function-bits-to-hex">tan:bits-to-hex()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-bits-to-byte"><title><code>tan:bits-to-byte()</code></title><para><emphasis>TAN-fn-binary</emphasis></para><para><code>tan:bits-to-byte($input-bits as xs:boolean*, $big-endian as xs:boolean) as xs:boolean*</code></para><programlisting>Input: a sequence of bits (booleans); a boolean </programlisting><programlisting>Output: the same sequence, but extended to a multiple of 8 bits (a byte). If the 2nd 
param is true, it is big endian and the padding takes place at the beginning, otherwise, at 
the end. </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-binary">binary</link></para><para>Used by function <code><link linkend="function-md5">tan:md5()</link></code>, <code><link linkend="function-bits-to-hexBinary">tan:bits-to-hexBinary()</link></code>.</para><para>Relies upon <code><link linkend="function-pad-bits">tan:pad-bits</link></code>.</para></section>
<section xml:id="function-bits-to-eight-bit-chars"><title><code>tan:bits-to-eight-bit-chars()</code></title><para><emphasis>TAN-fn-binary</emphasis></para><para><code>tan:bits-to-eight-bit-chars($in as xs:boolean*) as xs:string?</code></para><programlisting>Input: a sequence of bits (booleans) </programlisting><programlisting>Output: a string of 8-bit characters (characters corresponding to codepoints 
1-255, and character 0 converted to U+2400 SYMBOL FOR NULL) </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-binary">binary</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="variable-TAN-namespace">$tan:TAN-namespace</link></code>, <code><link linkend="variable-binary-error-key">$tan:binary-error-key</link></code>, <code><link linkend="function-bits-to-hex">tan:bits-to-hex</link></code>, <code><link linkend="function-hexBinary-to-eight-bit-chars">tan:hexBinary-to-eight-bit-chars</link></code>.</para></section>
<section xml:id="function-bits-to-hex"><title><code>tan:bits-to-hex()</code></title><para><emphasis>TAN-fn-numeric-conversion</emphasis></para><para><code>tan:bits-to-hex($in as xs:boolean*) as xs:string?</code></para><programlisting>Input: a sequence of booleans </programlisting><programlisting>Output: a base-2 binary representation of the sequence </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link></para><para>Used by function <code><link linkend="function-bits-to-hexBinary">tan:bits-to-hexBinary()</link></code>, <code><link linkend="function-bits-to-eight-bit-chars">tan:bits-to-eight-bit-chars()</link></code>.</para><para>Relies upon <code><link linkend="function-bin-to-hex">tan:bin-to-hex()</link></code>, <code><link linkend="function-bits-to-bin">tan:bits-to-bin</link></code>.</para></section>
<section xml:id="function-bits-to-hexBinary"><title><code>tan:bits-to-hexBinary()</code></title><para><emphasis>TAN-fn-binary</emphasis></para><para><code>tan:bits-to-hexBinary($input-bits as xs:boolean*, $big-endian as xs:boolean) as xs:hexBinary?</code></para><programlisting>Input: a sequence of bits (booleans); a boolean specifying whether the bits are 
big-endian or not </programlisting><programlisting>Output: the bits as a hexBinary </programlisting><programlisting>Because a hexBinary is eight bits, the input bits are cast to bytes. For defective 
byte input, little/big endian options will likely result in different output. For whole 
bytes, the results should be the same, since the hexBinary will preserve the endianness of 
the input. </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-binary">binary</link></para><para>Used by function <code><link linkend="function-bits-to-base64Binary">tan:bits-to-base64Binary()</link></code>.</para><para>Relies upon <code><link linkend="function-bits-to-byte">tan:bits-to-byte</link></code>, <code><link linkend="function-bits-to-hex">tan:bits-to-hex</link></code>, <code><link linkend="function-hex-to-hexBinary">tan:hex-to-hexBinary</link></code>.</para></section>
<section xml:id="function-bits-to-octets"><title><code>tan:bits-to-octets()</code></title><para><emphasis>TAN-fn-binary</emphasis></para><para><code>tan:bits-to-octets($in as xs:boolean*) as xs:integer*</code></para><programlisting>Input: a sequence of bits (booleans) </programlisting><programlisting>Output: a sequence of integers between 0 and 255 representing the Binary value </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-binary">binary</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="variable-TAN-namespace">$tan:TAN-namespace</link></code>, <code><link linkend="variable-binary-error-key">$tan:binary-error-key</link></code>, <code><link linkend="function-bin-to-dec">tan:bin-to-dec</link></code>, <code><link linkend="function-bits-to-bin">tan:bits-to-bin</link></code>.</para></section>
<section xml:id="function-bits-to-word"><title><code>tan:bits-to-word()</code></title><para><emphasis>TAN-fn-binary</emphasis></para><para><code>tan:bits-to-word($input-bits as xs:boolean*, $big-endian as xs:boolean) as xs:boolean*</code></para><programlisting>Input: a sequence of bits (booleans); a boolean </programlisting><programlisting>Output: the same sequence, but extended to a multiple of 32 bits (a "word"). If the 2nd 
param is true, it is big endian and the padding takes place at the beginning, otherwise, at 
the end. </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-binary">binary</link></para><para>Used by function <code><link linkend="function-md5">tan:md5()</link></code>.</para><para>Relies upon <code><link linkend="function-pad-bits">tan:pad-bits</link></code>.</para></section>
<section xml:id="function-bitwise-and"><title><code>tan:bitwise-and()</code></title><para><emphasis>TAN-fn-binary</emphasis></para><para><code>tan:bitwise-and($bit-sequence-a as xs:boolean*, $bit-sequence-b as xs:boolean*) as xs:boolean*</code></para><programlisting>Input: two sequences of booleans </programlisting><programlisting>Output: a single sequence as long as the longest input sequence, with pairwise AND 
computed. </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-binary">binary</link></para><para>Used by function <code><link linkend="function-md5">tan:md5()</link></code>.</para><para>Relies upon <code><link linkend="variable-TAN-namespace">$tan:TAN-namespace</link></code>, <code><link linkend="variable-binary-error-key">$tan:binary-error-key</link></code>.</para></section>
<section xml:id="function-bitwise-not"><title><code>tan:bitwise-not()</code></title><para><emphasis>TAN-fn-binary</emphasis></para><para><code>tan:bitwise-not($boolean as xs:boolean*) as xs:boolean*</code></para><programlisting>Input: a boolean sequence </programlisting><programlisting>Output: the bitwise complement of the sequence </programlisting><programlisting>e.g., false, true &gt; true, false </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-binary">binary</link></para><para>Used by function <code><link linkend="function-md5">tan:md5()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-bitwise-or"><title><code>tan:bitwise-or()</code></title><para><emphasis>TAN-fn-binary</emphasis></para><para><code>tan:bitwise-or($bit-sequence-a as xs:boolean*, $bit-sequence-b as xs:boolean*) as xs:boolean*</code></para><programlisting>Input: two sequences of booleans </programlisting><programlisting>Output: a single sequence as long as the longest input sequence, with pairwise OR 
computed. </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-binary">binary</link></para><para>Used by function <code><link linkend="function-md5">tan:md5()</link></code>.</para><para>Relies upon <code><link linkend="variable-TAN-namespace">$tan:TAN-namespace</link></code>, <code><link linkend="variable-binary-error-key">$tan:binary-error-key</link></code>.</para></section>
<section xml:id="function-bitwise-plus"><title><code>tan:bitwise-plus()</code></title><para><emphasis>TAN-fn-binary</emphasis></para><para><code>tan:bitwise-plus($bit-sequence-a as xs:boolean*, $bit-sequence-b as xs:boolean*, $big-endian as xs:boolean) as xs:boolean*</code></para><programlisting>Input: two sequences of booleans, and a boolean </programlisting><programlisting>Output: a sequence of booleans representing the sum of the input, as if base-2 
binary. </programlisting><programlisting>Unlike most bitwise operations, where the length of input and output are expected to 
be the same, that is definitely not the case here, which means that a declaration must be 
made whether the operation is big-endian (most significant byte first) or 
little-endian (most significant byte last) </programlisting><programlisting>If one input is longer than the other, each unpaired boolean at the most significant 
part of the longest series will be assessed against an assumed counterpart of false. </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-binary">binary</link></para><para>Used by function <code><link linkend="function-md5">tan:md5()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-bitwise-rotate"><title><code>tan:bitwise-rotate()</code></title><para><emphasis>TAN-fn-binary</emphasis></para><para><code>tan:bitwise-rotate($bit-sequence as xs:boolean*, $rotate-left as xs:integer) as xs:boolean*</code></para><programlisting>Input: a boolean sequence; an integer </programlisting><programlisting>Output: the sequence, circularly shifted left the number of places specified by the 
integer; if the integer is negative, it will be shifted right. </programlisting><programlisting>It is up to the user to consider whether the bits are big- or little-endian as to the 
meaning of "left". </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-binary">binary</link></para><para>Used by function <code><link linkend="function-md5">tan:md5()</link></code>, <code><link linkend="function-bitwise-rotate">tan:bitwise-rotate()</link></code>.</para><para>Relies upon <code><link linkend="function-bits-to-bin">tan:bits-to-bin</link></code>, <code><link linkend="function-bitwise-rotate">tan:bitwise-rotate()</link></code>.</para></section>
<section xml:id="function-bitwise-xor"><title><code>tan:bitwise-xor()</code></title><para><emphasis>TAN-fn-binary</emphasis></para><para><code>tan:bitwise-xor($bit-sequence-a as xs:boolean*, $bit-sequence-b as xs:boolean*) as xs:boolean*</code></para><programlisting>Input: two sequences of booleans </programlisting><programlisting>Output: a single sequence as long as the longest input sequence, with pairwise XOR 
computed. </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-binary">binary</link></para><para>Used by function <code><link linkend="function-md5">tan:md5()</link></code>.</para><para>Relies upon <code><link linkend="variable-TAN-namespace">$tan:TAN-namespace</link></code>, <code><link linkend="variable-binary-error-key">$tan:binary-error-key</link></code>.</para></section>
<section xml:id="function-counts-to-lasts"><title><code>tan:counts-to-lasts()</code></title><para><emphasis>TAN-fn-numerics-extended</emphasis></para><para><code>tan:counts-to-lasts($seq as xs:integer*) as xs:integer*</code></para><programlisting>Input: sequence of numbers representing counts of items. </programlisting><programlisting>Output: sequence of numbers representing the last position of each item within the 
total count. E.g., (4, 12, 0, 7) - &gt; (4, 16, 16, 23) </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-sequences">sequences</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-dec-to-base26"><title><code>tan:dec-to-base26()</code></title><para><emphasis>TAN-fn-numeric-conversion</emphasis></para><para><code>tan:dec-to-base26($in as xs:integer?) as xs:string?</code></para><programlisting>Input: xs:integer </programlisting><programlisting>Output: the base 26 equivalent as a string, e.g., 31 - &gt; 'BF' </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-dec-to-n">tan:dec-to-n</link></code>.</para></section>
<section xml:id="function-dec-to-base64"><title><code>tan:dec-to-base64()</code></title><para><emphasis>TAN-fn-numeric-conversion</emphasis></para><para><code>tan:dec-to-base64($in as xs:integer?) as xs:string?</code></para><programlisting>Input: xs:integer </programlisting><programlisting>Output: the base 64 equivalent as a string, e.g., 31 - &gt; 'f' </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link></para><para>Used by function <code><link linkend="function-bin-to-base64">tan:bin-to-base64()</link></code>, <code><link linkend="function-hex-to-base64">tan:hex-to-base64()</link></code>.</para><para>Relies upon <code><link linkend="function-dec-to-n">tan:dec-to-n</link></code>.</para></section>
<section xml:id="function-dec-to-bin"><title><code>tan:dec-to-bin()</code></title><para><emphasis>TAN-fn-numeric-conversion</emphasis></para><para><code>tan:dec-to-bin($in as xs:integer?) as xs:string?</code></para><programlisting>Input: an integer </programlisting><programlisting>Output: the number in binary form, as a string </programlisting><programlisting>Input is assumed to be big-endian </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link></para><para>Used by function <code><link linkend="function-md5">tan:md5()</link></code>, <code><link linkend="function-hex-to-bin">tan:hex-to-bin()</link></code>, <code><link linkend="function-base64-to-bin">tan:base64-to-bin()</link></code>, <code><link linkend="function-utf-8-octets-to-string">tan:utf-8-octets-to-string()</link></code>.</para><para>Relies upon <code><link linkend="function-dec-to-n">tan:dec-to-n</link></code>.</para></section>
<section xml:id="function-dec-to-hex"><title><code>tan:dec-to-hex()</code></title><para><emphasis>TAN-fn-numeric-conversion</emphasis></para><para><code>tan:dec-to-hex($in as xs:integer?) as xs:string?</code></para><programlisting>Input: xs:integer </programlisting><programlisting>Output: the hexadecimal equivalent as a string, e.g., 31 - &gt; '1F' </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link></para><para>Used by template <code><link linkend="template-core-expansion-normal">ŧ tan:core-expansion-normal</link></code>.</para><para>Used by function <code><link linkend="function-md5">tan:md5()</link></code>, <code>tan:checksum-fletcher()</code>, <code><link linkend="function-bin-to-hex">tan:bin-to-hex()</link></code>, <code><link linkend="function-base64-to-hex">tan:base64-to-hex()</link></code>, <code><link linkend="function-eight-bit-chars-to-hexBinary">tan:eight-bit-chars-to-hexBinary()</link></code>, <code><link linkend="function-octets-to-hexBinary">tan:octets-to-hexBinary()</link></code>.</para><para>Relies upon <code><link linkend="function-dec-to-n">tan:dec-to-n</link></code>.</para></section>
<section xml:id="function-dec-to-n"><title><code>tan:dec-to-n()</code></title><para><emphasis>TAN-fn-numeric-conversion</emphasis></para><para><code>tan:dec-to-n($in as xs:integer?, $base as xs:integer) as xs:string?</code></para><programlisting>Input: two integers </programlisting><programlisting>Output: a string that represents the first numeral in base N, where N is the second 
numeral (must be 2-16, 26, or 64) </programlisting><programlisting>No padding is performed on the output (e.g., = in base-64, or initial zeroes in 
hexadecimal) </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link></para><para>Used by function <code><link linkend="function-dec-to-hex">tan:dec-to-hex()</link></code>, <code><link linkend="function-dec-to-base26">tan:dec-to-base26()</link></code>, <code><link linkend="function-dec-to-base64">tan:dec-to-base64()</link></code>, <code><link linkend="function-dec-to-bin">tan:dec-to-bin()</link></code>, <code><link linkend="function-dec-to-n">tan:dec-to-n()</link></code>.</para><para>Relies upon <code><link linkend="variable-TAN-namespace">$tan:TAN-namespace</link></code>, <code><link linkend="variable-base26-key">$tan:base26-key</link></code>, <code><link linkend="variable-base64-key">$tan:base64-key</link></code>, <code><link linkend="variable-hex-key">$tan:hex-key</link></code>, <code><link linkend="variable-numeric-conversion-error-key">$tan:numeric-conversion-error-key</link></code>, <code><link linkend="function-dec-to-n">tan:dec-to-n</link></code>.</para></section>
<section xml:id="function-eight-bit-chars-to-base64Binary"><title><code>tan:eight-bit-chars-to-base64Binary()</code></title><para><emphasis>TAN-fn-binary</emphasis></para><para><code>tan:eight-bit-chars-to-base64Binary($in as xs:string?) as xs:base64Binary?</code></para><programlisting>Input: a string that is encoded in eight-bit chars; a boolean </programlisting><programlisting>Output: the string as a sequence of hexBinary values, one per character </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-binary">binary</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-eight-bit-chars-to-hexBinary">tan:eight-bit-chars-to-hexBinary</link></code>.</para></section>
<section xml:id="function-eight-bit-chars-to-bits"><title><code>tan:eight-bit-chars-to-bits()</code></title><para><emphasis>TAN-fn-binary</emphasis></para><para><code>tan:eight-bit-chars-to-bits($in as xs:string*) as xs:boolean*</code></para><programlisting>Input: a sequence of eight-bit-chars (integers in the range 0-255) </programlisting><programlisting>Output: the eight-bit-chars as sequence of bits (booleans) </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-binary">binary</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-eight-bit-chars-to-hexBinary">tan:eight-bit-chars-to-hexBinary</link></code>, <code><link linkend="function-hexBinary-to-bits">tan:hexBinary-to-bits</link></code>.</para></section>
<section xml:id="function-eight-bit-chars-to-hexBinary"><title><code>tan:eight-bit-chars-to-hexBinary()</code></title><para><emphasis>TAN-fn-binary</emphasis></para><para><code>tan:eight-bit-chars-to-hexBinary($in as xs:string?) as xs:hexBinary?</code></para><programlisting>Input: a string that is encoded in eight-bit chars; a boolean </programlisting><programlisting>Output: the string as a sequence of hexBinary values, one per character </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-binary">binary</link></para><para>Used by function <code><link linkend="function-eight-bit-chars-to-bits">tan:eight-bit-chars-to-bits()</link></code>, <code><link linkend="function-eight-bit-chars-to-base64Binary">tan:eight-bit-chars-to-base64Binary()</link></code>.</para><para>Relies upon <code><link linkend="variable-TAN-namespace">$tan:TAN-namespace</link></code>, <code><link linkend="variable-binary-error-key">$tan:binary-error-key</link></code>, <code><link linkend="function-dec-to-hex">tan:dec-to-hex</link></code>.</para></section>
<section xml:id="function-hex-to-base64"><title><code>tan:hex-to-base64()</code></title><para><emphasis>TAN-fn-numeric-conversion</emphasis></para><para><code>tan:hex-to-base64($in as xs:string?) as xs:string?</code></para><programlisting>Input: a string representing a hexadecimal number </programlisting><programlisting>Output: a string representing the number in base 64 </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link></para><para>Used by function <code><link linkend="function-base64Binary-to-base64">tan:base64Binary-to-base64()</link></code>.</para><para>Relies upon <code><link linkend="function-dec-to-base64">tan:dec-to-base64</link></code>, <code><link linkend="function-fill">tan:fill</link></code>, <code><link linkend="function-hex-to-dec">tan:hex-to-dec</link></code>.</para></section>
<section xml:id="function-hex-to-base64Binary"><title><code>tan:hex-to-base64Binary()</code></title><para><emphasis>TAN-fn-numeric-conversion</emphasis></para><para><code>tan:hex-to-base64Binary($in as xs:string?) as xs:base64Binary?</code></para><programlisting>Input: a hexadecimal string </programlisting><programlisting>Output: the string cast to xs:base64Binary, if possible </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="variable-TAN-namespace">$tan:TAN-namespace</link></code>, <code><link linkend="variable-numeric-conversion-error-key">$tan:numeric-conversion-error-key</link></code>, <code><link linkend="function-fill">tan:fill</link></code>.</para></section>
<section xml:id="function-hex-to-bin"><title><code>tan:hex-to-bin()</code></title><para><emphasis>TAN-fn-numeric-conversion</emphasis></para><para><code>tan:hex-to-bin($in as xs:string?) as xs:string?</code></para><programlisting>Input: a string representation of a hexadecimal number </programlisting><programlisting>Output: a string representing the datum in binary code </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link></para><para>Used by function <code><link linkend="function-base64binary-to-bin">tan:base64binary-to-bin()</link></code>, <code><link linkend="function-hexBinary-to-bin">tan:hexBinary-to-bin()</link></code>, <code><link linkend="function-base64Binary-to-bin">tan:base64Binary-to-bin()</link></code>, <code><link linkend="function-hex-to-bits">tan:hex-to-bits()</link></code>.</para><para>Relies upon <code><link linkend="function-dec-to-bin">tan:dec-to-bin</link></code>, <code><link linkend="function-fill">tan:fill</link></code>, <code><link linkend="function-hex-to-dec">tan:hex-to-dec</link></code>.</para></section>
<section xml:id="function-hex-to-bits"><title><code>tan:hex-to-bits()</code></title><para><emphasis>TAN-fn-numeric-conversion</emphasis></para><para><code>tan:hex-to-bits($in as xs:string?) as xs:boolean*</code></para><programlisting>Input: any string representing base-2 binary </programlisting><programlisting>Output: a sequence of booleans representing the bits of the binary </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-bin-to-bits">tan:bin-to-bits()</link></code>, <code><link linkend="function-hex-to-bin">tan:hex-to-bin</link></code>.</para></section>
<section xml:id="function-hex-to-dec"><title><code>tan:hex-to-dec()</code></title><para><emphasis>TAN-fn-numeric-conversion</emphasis></para><para><code>tan:hex-to-dec($in as xs:string?) as xs:integer?</code></para><programlisting>Input: a string representing a hexadecimal number </programlisting><programlisting>Output: the integer value, e.g., '1F' - &gt; 31 </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link></para><para>Used by function <code><link linkend="function-hex-to-bin">tan:hex-to-bin()</link></code>, <code><link linkend="function-hex-to-base64">tan:hex-to-base64()</link></code>, <code><link linkend="function-string-to-utf-8-octets">tan:string-to-utf-8-octets()</link></code>, <code><link linkend="function-hexBinary-to-octets">tan:hexBinary-to-octets()</link></code>, <code><link linkend="function-hexBinary-to-eight-bit-chars">tan:hexBinary-to-eight-bit-chars()</link></code>.</para><para>Relies upon <code><link linkend="function-n-to-dec">tan:n-to-dec</link></code>.</para></section>
<section xml:id="function-hex-to-hexBinary"><title><code>tan:hex-to-hexBinary()</code></title><para><emphasis>TAN-fn-numeric-conversion</emphasis></para><para><code>tan:hex-to-hexBinary($in as xs:string?) as xs:hexBinary?</code></para><programlisting>Input: a hexadecimal string </programlisting><programlisting>Output: the string cast to xs:hexBinary, if possible </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link></para><para>Used by function <code><link linkend="function-bits-to-hexBinary">tan:bits-to-hexBinary()</link></code>, <code><link linkend="function-base64-to-base64Binary">tan:base64-to-base64Binary()</link></code>, <code><link linkend="function-bin-to-base64Binary">tan:bin-to-base64Binary()</link></code>, <code><link linkend="function-bin-to-hexBinary">tan:bin-to-hexBinary()</link></code>.</para><para>Relies upon <code><link linkend="variable-TAN-namespace">$tan:TAN-namespace</link></code>, <code><link linkend="variable-numeric-conversion-error-key">$tan:numeric-conversion-error-key</link></code>, <code><link linkend="function-fill">tan:fill</link></code>.</para></section>
<section xml:id="function-hexBinary-to-bin"><title><code>tan:hexBinary-to-bin()</code></title><para><emphasis>TAN-fn-numeric-conversion</emphasis></para><para><code>tan:hexBinary-to-bin($in as xs:hexBinary?) as xs:string?</code></para><programlisting>Input: a hexBinary </programlisting><programlisting>Output: a string with the value in base 2 </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link></para><para>Used by function <code><link linkend="function-hexBinary-to-bits">tan:hexBinary-to-bits()</link></code>.</para><para>Relies upon <code><link linkend="function-hex-to-bin">tan:hex-to-bin</link></code>.</para></section>
<section xml:id="function-hexBinary-to-bits"><title><code>tan:hexBinary-to-bits()</code></title><para><emphasis>TAN-fn-binary</emphasis></para><para><code>tan:hexBinary-to-bits($in as xs:hexBinary?) as xs:boolean*</code></para><programlisting>Input: a hexBinary </programlisting><programlisting>Output: the value in bits (booleans) </programlisting><programlisting>Because hexBinary works in bytes, the output will be a multiple of 8 </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-binary">binary</link></para><para>Used by function <code><link linkend="function-octets-to-bits">tan:octets-to-bits()</link></code>, <code><link linkend="function-eight-bit-chars-to-bits">tan:eight-bit-chars-to-bits()</link></code>.</para><para>Relies upon <code><link linkend="function-bin-to-bits">tan:bin-to-bits</link></code>, <code><link linkend="function-hexBinary-to-bin">tan:hexBinary-to-bin</link></code>.</para></section>
<section xml:id="function-hexBinary-to-eight-bit-chars"><title><code>tan:hexBinary-to-eight-bit-chars()</code></title><para><emphasis>TAN-fn-binary</emphasis></para><para><code>tan:hexBinary-to-eight-bit-chars($hexBinary as xs:hexBinary?) as xs:string?</code></para><programlisting>Input: a hexBinary </programlisting><programlisting>Output: the hexBinary converted to 8-bit characters (characters corresponding to 
codepoints 1-255, and character 0 converted to U+2400 SYMBOL FOR NULL) </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-binary">binary</link></para><para>Used by function <code><link linkend="function-bits-to-eight-bit-chars">tan:bits-to-eight-bit-chars()</link></code>, <code><link linkend="function-base64Binary-to-eight-bit-chars">tan:base64Binary-to-eight-bit-chars()</link></code>.</para><para>Relies upon <code><link linkend="function-hex-to-dec">tan:hex-to-dec</link></code>.</para></section>
<section xml:id="function-hexBinary-to-hex"><title><code>tan:hexBinary-to-hex()</code></title><para><emphasis>TAN-fn-numeric-conversion</emphasis></para><para><code>tan:hexBinary-to-hex($in as xs:hexBinary?) as xs:string?</code></para><programlisting>Input: a base64Binary </programlisting><programlisting>Output: a string with the value in hexadecimal </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link></para><para>Used by function <code><link linkend="function-hexBinary-to-octets">tan:hexBinary-to-octets()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-hexBinary-to-octets"><title><code>tan:hexBinary-to-octets()</code></title><para><emphasis>TAN-fn-binary</emphasis></para><para><code>tan:hexBinary-to-octets($in as xs:hexBinary?) as xs:integer*</code></para><programlisting>Input: a hexBinary </programlisting><programlisting>Output: a sequence of integers between 0 and 255 representing the hexBinary value </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-binary">binary</link></para><para>Used by function <code><link linkend="function-base64Binary-to-octets">tan:base64Binary-to-octets()</link></code>.</para><para>Relies upon <code><link linkend="function-hex-to-dec">tan:hex-to-dec</link></code>, <code><link linkend="function-hexBinary-to-hex">tan:hexBinary-to-hex</link></code>.</para></section>
<section xml:id="function-integer-groups"><title><code>tan:integer-groups()</code></title><para><emphasis>TAN-fn-numerics-extended</emphasis></para><para><code>tan:integer-groups($integers-to-group as xs:integer*) as array(xs:integer+)?</code></para><programlisting>Input: any integers </programlisting><programlisting>Output: an array, with each member containing a sequence of integers that are 
collectively contiguous </programlisting><programlisting>Array members and their contents will be sorted; duplicates will be ignored </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-grouping">grouping</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-last-32-bits"><title><code>tan:last-32-bits()</code></title><para><emphasis>TAN-fn-binary</emphasis></para><para><code>tan:last-32-bits($bit-sequence as xs:boolean*) as xs:boolean*</code></para><programlisting>Input: a sequence of booleans </programlisting><programlisting>Output: the last 32 </programlisting><programlisting>Used as a way of doing modulo 2 ^ 32, usually on big-endian bits; little-endian modulo 
2 ^ 32 is easy with <code>subsequence(</code>X, 1, 32) </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-binary">binary</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-lengths-to-positions"><title><code>tan:lengths-to-positions()</code></title><para><emphasis>TAN-fn-numerics-extended</emphasis></para><para><code>tan:lengths-to-positions($seq as xs:integer*) as xs:integer*</code></para><programlisting>Input: sequence of numbers representing legnths of items. </programlisting><programlisting>Output: sequence of numbers representing the first position of each input item, if 
the sequence concatenated. E.g., (4, 12, 0, 7) - &gt; (1, 5, 17, 17) </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-sequences">sequences</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-log2"><title><code>tan:log2()</code></title><para><emphasis>TAN-fn-numerics-standard</emphasis></para><para><code>tan:log2($arg as xs:double?) as xs:double?</code></para><programlisting>Input: any double </programlisting><programlisting>Output: the binary logarithm of the value </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link></para><para>Used by function <code><link linkend="function-common-start-or-end-string">tan:common-start-or-end-string()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-n-to-dec"><title><code>tan:n-to-dec()</code></title><para><emphasis>TAN-fn-numeric-conversion</emphasis></para><para><code>tan:n-to-dec($input as xs:string?, $base as xs:integer) as xs:integer?</code></para><programlisting>Input: string representation of some number; an integer </programlisting><programlisting>Output: an integer representing the first parameter in the base system of the 2nd 
parameter </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link></para><para>Used by function <code><link linkend="function-hex-to-dec">tan:hex-to-dec()</link></code>, <code><link linkend="function-base26-to-dec">tan:base26-to-dec()</link></code>, <code><link linkend="function-base64-to-dec">tan:base64-to-dec()</link></code>, <code><link linkend="function-bin-to-dec">tan:bin-to-dec()</link></code>, <code><link linkend="function-n-to-dec">tan:n-to-dec()</link></code>.</para><para>Relies upon <code><link linkend="variable-TAN-namespace">$tan:TAN-namespace</link></code>, <code><link linkend="variable-base26-key">$tan:base26-key</link></code>, <code><link linkend="variable-base64-key">$tan:base64-key</link></code>, <code><link linkend="variable-hex-key">$tan:hex-key</link></code>, <code><link linkend="variable-numeric-conversion-error-key">$tan:numeric-conversion-error-key</link></code>, <code><link linkend="function-n-to-dec">tan:n-to-dec()</link></code>.</para></section>
<section xml:id="function-number-sort"><title><code>tan:number-sort()</code></title><para><emphasis>TAN-fn-numerics-extended</emphasis></para><para><code>tan:number-sort($numbers as xs:anyAtomicType*) as xs:double*</code></para><programlisting>Input: any sequence of items </programlisting><programlisting>Output: the same sequence, sorted with string numerals converted to numbers </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link></para><para>Used by function <code><link linkend="function-outliers">tan:outliers()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-numbers-to-portions"><title><code>tan:numbers-to-portions()</code></title><para><emphasis>TAN-fn-numerics-standard</emphasis></para><para><code>tan:numbers-to-portions($numbers as item()*) as xs:decimal*</code></para><programlisting>Input: a sequence of numbers, representing a sequence of quantities of all the parts 
of a whole </programlisting><programlisting>Output: one double per number, from 0 to 1, reflecting where each finishes in the 
sequence proportionate to the sum of the whole. The last item always returns 1. Anything not 
castable to a double will be given the empty sequence. </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link></para><para>Used by function <code><link linkend="function-infuse-tree">tan:infuse-tree()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-octets-to-base64Binary"><title><code>tan:octets-to-base64Binary()</code></title><para><emphasis>TAN-fn-binary</emphasis></para><para><code>tan:octets-to-base64Binary($in as xs:integer*) as xs:base64Binary?</code></para><programlisting>Input: a sequence of octets (integers in the range 0-255) </programlisting><programlisting>Output: the octets as base64Binary </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-binary">binary</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-octets-to-hexBinary">tan:octets-to-hexBinary</link></code>.</para></section>
<section xml:id="function-octets-to-bits"><title><code>tan:octets-to-bits()</code></title><para><emphasis>TAN-fn-binary</emphasis></para><para><code>tan:octets-to-bits($in as xs:integer*) as xs:boolean*</code></para><programlisting>Input: a sequence of octets (integers in the range 0-255) </programlisting><programlisting>Output: the octets as sequence of bits (booleans) </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-binary">binary</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-hexBinary-to-bits">tan:hexBinary-to-bits</link></code>, <code><link linkend="function-octets-to-hexBinary">tan:octets-to-hexBinary</link></code>.</para></section>
<section xml:id="function-octets-to-hexBinary"><title><code>tan:octets-to-hexBinary()</code></title><para><emphasis>TAN-fn-binary</emphasis></para><para><code>tan:octets-to-hexBinary($in as xs:integer*) as xs:hexBinary?</code></para><programlisting>Input: a sequence of octets (integers in the range 0-255) </programlisting><programlisting>Output: the octets as hexBinary </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-binary">binary</link></para><para>Used by function <code><link linkend="function-octets-to-bits">tan:octets-to-bits()</link></code>, <code><link linkend="function-octets-to-base64Binary">tan:octets-to-base64Binary()</link></code>.</para><para>Relies upon <code><link linkend="variable-TAN-namespace">$tan:TAN-namespace</link></code>, <code><link linkend="variable-binary-error-key">$tan:binary-error-key</link></code>, <code><link linkend="function-dec-to-hex">tan:dec-to-hex</link></code>.</para></section>
<section xml:id="function-pad-bits"><title><code>tan:pad-bits()</code></title><para><emphasis>TAN-fn-binary</emphasis></para><para><code>tan:pad-bits($input-bits as xs:boolean*, $big-endian as xs:boolean, $item-size as xs:integer) as xs:boolean*</code></para><programlisting>Input: bits as booleans; a boolean; an integer </programlisting><programlisting>Output: the input padded with enough 0 bits (false booleans) at the front or back 
(depends on 2nd parameter) to make the output as long as the third integer </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-binary">binary</link></para><para>Used by function <code><link linkend="function-bits-to-byte">tan:bits-to-byte()</link></code>, <code><link linkend="function-bits-to-word">tan:bits-to-word()</link></code>.</para><para>Relies upon <code><link linkend="variable-TAN-namespace">$tan:TAN-namespace</link></code>, <code><link linkend="variable-binary-error-key">$tan:binary-error-key</link></code>.</para></section>
<section xml:id="function-product"><title><code>tan:product()</code></title><para><emphasis>TAN-fn-numerics-extended</emphasis></para><para><code>tan:product($numbers as xs:anyAtomicType*) as xs:anyAtomicType?</code></para><programlisting>Input: a sequence of numbers </programlisting><programlisting>Output: the product of those numbers </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-string-to-utf-8-octets"><title><code>tan:string-to-utf-8-octets()</code></title><para><emphasis>TAN-fn-octets</emphasis></para><para><code>tan:string-to-utf-8-octets($str as xs:string) as xs:integer*</code></para><programlisting>Input: a string </programlisting><programlisting>Output: integer values of the string, after conversion to UTF-8 bytes (0..255) </programlisting><programlisting>This function was written to ensure that checksums of Unicode values do not cause 
repeating values. </programlisting><programlisting>Anything below codepoint 128 will be simply the output of <code>string-to-codepoints()</code> </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-codepoints">codepoints</link></para><para>Used by function <code><link linkend="function-unicode-to-eight-bit-chars">tan:unicode-to-eight-bit-chars()</link></code>, <code>tan:checksum-fletcher()</code>.</para><para>Relies upon <code><link linkend="function-hex-to-dec">tan:hex-to-dec</link></code>.</para></section>
<section xml:id="function-unicode-to-eight-bit-chars"><title><code>tan:unicode-to-eight-bit-chars()</code></title><para><emphasis>TAN-fn-octets</emphasis></para><para><code>tan:unicode-to-eight-bit-chars($unicode-string as xs:string?) as xs:string?</code></para><programlisting>Input: any Unicode string </programlisting><programlisting>Output: the string, with upper characters (greater than dec 126, ~) converted to 
8-bit-bytes </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-codepoints">codepoints</link></para><para>Used by function <code><link linkend="function-md5">tan:md5()</link></code>.</para><para>Relies upon <code><link linkend="function-string-to-utf-8-octets">tan:string-to-utf-8-octets</link></code>.</para></section>
<section xml:id="function-utf-8-octets-to-string"><title><code>tan:utf-8-octets-to-string()</code></title><para><emphasis>TAN-fn-octets</emphasis></para><para><code>tan:utf-8-octets-to-string($in as xs:integer*) as xs:string?</code></para><programlisting>Input: a sequence of octets (integers in the range 0-255) </programlisting><programlisting>Output: the octets converted into a Unicode string. </programlisting><para>Related: <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-codepoints">codepoints</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="variable-TAN-namespace">$tan:TAN-namespace</link></code>, <code><link linkend="variable-octet-error-key">$tan:octet-error-key</link></code>, <code><link linkend="function-bin-to-dec">tan:bin-to-dec</link></code>, <code><link linkend="function-dec-to-bin">tan:dec-to-bin</link></code>.</para></section>
</section>
</section>
<section xml:id="vkft-resolution"><title>Resolution</title><section><title>Functions</title><section xml:id="function-resolve-doc"><title><code>tan:resolve-doc()</code></title><para><emphasis>Option 1 (TAN-fn-resolve-files)</emphasis></para><para><code>tan:resolve-doc($TAN-document as document-node()?) as document-node()?</code></para><programlisting>One-parameter version of fuller one below </programlisting><para>Used by variable <code><link linkend="variable-annotations-resolved">$tan:annotations-resolved</link></code>, <code><link linkend="variable-see-alsos-resolved">$tan:see-alsos-resolved</link></code>, <code><link linkend="variable-predecessors-resolved">$tan:predecessors-resolved</link></code>, <code><link linkend="variable-successors-resolved">$tan:successors-resolved</link></code>, <code><link linkend="variable-self-resolved">$tan:self-resolved</link></code>, <code><link linkend="variable-redivisions-resolved">$tan:redivisions-resolved</link></code>, <code><link linkend="variable-model-resolved">$tan:model-resolved</link></code>, <code><link linkend="variable-sources-resolved">$tan:sources-resolved</link></code>, <code><link linkend="variable-morphologies-resolved">$tan:morphologies-resolved</link></code>.</para><para>Used by template <code><link linkend="template-get-and-resolve-dependency">ŧ tan:get-and-resolve-dependency</link></code>, <code><link linkend="template-check-referred-doc">ŧ tan:check-referred-doc</link></code>, <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>, <code><link linkend="template-class-1-expansion-verbose-pass-1">ŧ tan:class-1-expansion-verbose-pass-1</link></code>, <code><link linkend="template-core-expansion-verbose">ŧ tan:core-expansion-verbose</link></code>.</para><para>Used by function <code><link linkend="function-resolve-doc">tan:resolve-doc()</link></code>, <code><link linkend="function-update-TAN-change-log">tan:update-TAN-change-log()</link></code>, <code>tan:resolve-doc-loop()</code>.</para><para>Relies upon <code><link linkend="function-resolve-doc">tan:resolve-doc</link></code>.</para><para><emphasis>Option 2 (TAN-fn-resolve-files)</emphasis></para><para><code>tan:resolve-doc($TAN-document as document-node()?, $add-q-ids as xs:boolean, $attributes-to-add-to-root-element as attribute()*) as document-node()?</code></para><programlisting>Input: any TAN document; a boolean indicating whether each element should be 
stamped with a unique id in <code>@q</code>; attributes that should be added to the root element </programlisting><programlisting>Output: the TAN document, resolved, as explained in the associated loop function 
below </programlisting><para>Related: <link linkend="tan-function-group-resolution">resolution</link>, <link linkend="tan-function-group-files">files</link></para><para>Used by variable <code><link linkend="variable-annotations-resolved">$tan:annotations-resolved</link></code>, <code><link linkend="variable-see-alsos-resolved">$tan:see-alsos-resolved</link></code>, <code><link linkend="variable-predecessors-resolved">$tan:predecessors-resolved</link></code>, <code><link linkend="variable-successors-resolved">$tan:successors-resolved</link></code>, <code><link linkend="variable-self-resolved">$tan:self-resolved</link></code>, <code><link linkend="variable-redivisions-resolved">$tan:redivisions-resolved</link></code>, <code><link linkend="variable-model-resolved">$tan:model-resolved</link></code>, <code><link linkend="variable-sources-resolved">$tan:sources-resolved</link></code>, <code><link linkend="variable-morphologies-resolved">$tan:morphologies-resolved</link></code>.</para><para>Used by template <code><link linkend="template-get-and-resolve-dependency">ŧ tan:get-and-resolve-dependency</link></code>, <code><link linkend="template-check-referred-doc">ŧ tan:check-referred-doc</link></code>, <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>, <code><link linkend="template-class-1-expansion-verbose-pass-1">ŧ tan:class-1-expansion-verbose-pass-1</link></code>, <code><link linkend="template-core-expansion-verbose">ŧ tan:core-expansion-verbose</link></code>.</para><para>Used by function <code><link linkend="function-resolve-doc">tan:resolve-doc()</link></code>, <code><link linkend="function-update-TAN-change-log">tan:update-TAN-change-log()</link></code>, <code>tan:resolve-doc-loop()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-resolve-href"><title><code>tan:resolve-href()</code></title><para><emphasis>Option 1 (TAN-fn-resolve-files)</emphasis></para><para><code>tan:resolve-href($xml-node as node()?) as node()?</code></para><programlisting>One-parameter version of the full one, below </programlisting><para>Used by function <code><link linkend="function-resolve-href">tan:resolve-href()</link></code>, <code><link linkend="function-get-1st-doc">tan:get-1st-doc()</link></code>.</para><para>Relies upon <code><link linkend="function-resolve-href">tan:resolve-href</link></code>.</para><para><emphasis>Option 2 (TAN-fn-resolve-files)</emphasis></para><para><code>tan:resolve-href($xml-node as node()?, $add-q-ids as xs:boolean) as node()?</code></para><programlisting>Two-parameter version of the full one, below </programlisting><para>Used by function <code><link linkend="function-resolve-href">tan:resolve-href()</link></code>, <code><link linkend="function-get-1st-doc">tan:get-1st-doc()</link></code>.</para><para>Relies upon <code><link linkend="function-base-uri">tan:base-uri</link></code>, <code><link linkend="function-resolve-href">tan:resolve-href</link></code>.</para><para><emphasis>Option 3 (TAN-fn-resolve-files)</emphasis></para><para><code>tan:resolve-href($xml-node as node()?, $add-q-ids as xs:boolean, $this-base-uri as xs:string) as node()?</code></para><programlisting>Input: any XML node, a boolean, a string </programlisting><programlisting>Output: the same node, but with <code><link linkend="attribute-href">@href</link></code> in itself and all descendant elements resolved 
to absolute form, with <code>@orig-href</code> inserted preserving the original if there is a 
change </programlisting><programlisting>The second parameter is provided because this function works closely with 
<code><link linkend="function-resolve-doc">tan:resolve-doc()</link></code>. </programlisting><para>Related: <link linkend="tan-function-group-resolution">resolution</link>, <link linkend="tan-function-group-uris">uris</link>, <link linkend="tan-function-group-filenames">filenames</link></para><para>Used by function <code><link linkend="function-resolve-href">tan:resolve-href()</link></code>, <code><link linkend="function-get-1st-doc">tan:get-1st-doc()</link></code>.</para><para>Relies upon <code><link linkend="template-resolve-href">ŧ tan:resolve-href</link></code>.</para></section>
</section>
</section>
<section xml:id="vkft-search"><title>Search</title><section><title>Variables</title><section xml:id="variable-morpheus-map"><title><code>$morpheus-map</code></title><para><emphasis>TAN-fn-search-extended</emphasis></para><para>This variable has a complex definition. See
                                                   stylesheet for definiton.</para><para>Used by template <code><link linkend="template-build-morpheus-ana">ŧ tan:build-morpheus-ana</link></code> tan:build-morpheus-lex.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-search-services"><title><code>$search-services</code></title><para><emphasis>TAN-fn-search-extended</emphasis></para><para>Definition: <code>doc('search-services.xml')</code></para><para>Used by function <code><link linkend="function-search-for-entities">tan:search-for-entities()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
</section>
<section><title>Functions</title><section xml:id="function-search-for-entities"><title><code>tan:search-for-entities()</code></title><para><emphasis>TAN-fn-search-extended</emphasis></para><para><code>tan:search-for-entities($server-idref as xs:string, $params as element()+) as item()*</code></para><programlisting>Input: a sequence of strings (search keywords), a string (options: loc), a string 
(options: marcxml, dc, mods), a positive integer </programlisting><programlisting>Output: up to N records (N = integer parameter) in the protocol of the 3rd paramater, 
using the SRU protocol of the library catalog specified in the 2nd parameter based on 
search words in the 1st </programlisting><para>Related: <link linkend="tan-function-group-search">search</link>, <link linkend="tan-function-group-lexicomorphology">lexicomorphology</link></para><para>Used by function <code><link linkend="function-search-for-entities">tan:search-for-entities()</link></code>, <code><link linkend="function-search-for-scripta">tan:search-for-scripta()</link></code>, <code><link linkend="function-search-for-persons">tan:search-for-persons()</link></code>, <code><link linkend="function-search-wikipedia">tan:search-wikipedia()</link></code>, <code><link linkend="function-search-morpheus">tan:search-morpheus()</link></code>.</para><para>Relies upon <code><link linkend="variable-search-services">$search-services</link></code>, <code><link linkend="variable-internet-available">$tan:internet-available</link></code>, <code><link linkend="function-search-for-entities">tan:search-for-entities()</link></code>.</para></section>
<section xml:id="function-search-for-persons"><title><code>tan:search-for-persons()</code></title><para><emphasis>TAN-fn-search-extended</emphasis></para><para><code>tan:search-for-persons($search-expression as xs:string?, $max-records as xs:integer) as item()*</code></para><programlisting>Input: a search expression, an integer indicating the number of records requested </programlisting><programlisting>Output: that number of records using the search expression in the Virtual 
International Authority File </programlisting><para>Related: <link linkend="tan-function-group-search">search</link>, <link linkend="tan-function-group-vocabulary">vocabulary</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-search-for-entities">tan:search-for-entities</link></code>.</para></section>
<section xml:id="function-search-for-scripta"><title><code>tan:search-for-scripta()</code></title><para><emphasis>TAN-fn-search-extended</emphasis></para><para><code>tan:search-for-scripta($search-expression as xs:string?, $max-records as xs:integer) as item()*</code></para><programlisting>Input: a search expression, an integer indicating the number of records requested </programlisting><programlisting>Output: that number of records using the search expression in the Library of 
Congress </programlisting><para>Related: <link linkend="tan-function-group-search">search</link>, <link linkend="tan-function-group-vocabulary">vocabulary</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-search-for-entities">tan:search-for-entities</link></code>.</para></section>
<section xml:id="function-search-morpheus"><title><code>tan:search-morpheus()</code></title><para><emphasis>TAN-fn-search-extended</emphasis></para><para><code>tan:search-morpheus($search-expression as xs:string?) as document-node()?</code></para><programlisting>Input: a token in Greek or Latin </programlisting><programlisting>Output: lexico-morphological data using Morpheus's service </programlisting><para>Related: <link linkend="tan-function-group-search">search</link>, <link linkend="tan-function-group-lexicomorphology">lexicomorphology</link></para><para>Used by function <code><link linkend="function-lm-data">tan:lm-data()</link></code>.</para><para>Relies upon <code><link linkend="function-item-type">tan:item-type</link></code>, <code><link linkend="function-search-for-entities">tan:search-for-entities</link></code>.</para></section>
<section xml:id="function-search-results-to-claims"><title><code>tan:search-results-to-claims()</code></title><para><emphasis>TAN-fn-search-extended</emphasis></para><para><code>tan:search-results-to-claims($search-results as item()*, $results-vendor as xs:string) as item()*</code></para><programlisting>Input: XML representing a search result that is a claim; a string indicating which 
vendor supplied the results </programlisting><programlisting>Output: the claim represented in TAN elements </programlisting><programlisting>This experimental function, so far only supporting results from 
<code><link linkend="function-search-morpheus">tan:search-morpheus()</link></code> </programlisting><para>Related: <link linkend="tan-function-group-search">search</link>, <link linkend="tan-function-group-lexicomorphology">lexicomorphology</link></para><para>Used by function <code><link linkend="function-lm-data">tan:lm-data()</link></code>.</para><para>Relies upon <code><link linkend="template-claims-morpheus">ŧ tan:claims-morpheus</link></code>.</para></section>
<section xml:id="function-search-results-to-IRI-name-pattern"><title><code>tan:search-results-to-IRI-name-pattern()</code></title><para><emphasis>Option 1 (TAN-fn-search-extended)</emphasis></para><para><code>tan:search-results-to-IRI-name-pattern($search-results as item()*) as item()*</code></para><programlisting>One-parameter version of the fuller one, below </programlisting><para>Used by function <code><link linkend="function-search-results-to-IRI-name-pattern">tan:search-results-to-IRI-name-pattern()</link></code>.</para><para>Relies upon <code><link linkend="function-search-results-to-IRI-name-pattern">tan:search-results-to-IRI-name-pattern</link></code>.</para><para><emphasis>Option 2 (TAN-fn-search-extended)</emphasis></para><para><code>tan:search-results-to-IRI-name-pattern($search-results as item()*, $format-results as xs:boolean) as item()*</code></para><programlisting>Input: search results from <code><link linkend="function-search-for-entities">tan:search-for-entities()</link></code> </programlisting><programlisting>Output: for every entity found, an <code><link linkend="element-item">&lt;item&gt;</link></code> with <code><link linkend="element-IRI">&lt;IRI&gt;</link></code>, <code><link linkend="element-name">&lt;name&gt;</link></code>, and perhaps <code><link linkend="element-desc">&lt;desc&gt;</link></code> </programlisting><programlisting>Note, this is intended to format results from searches that result in identifiers 
and descriptions of entities, not claims. </programlisting><para>Related: <link linkend="tan-function-group-search">search</link>, <link linkend="tan-function-group-vocabulary">vocabulary</link></para><para>Used by function <code><link linkend="function-search-results-to-IRI-name-pattern">tan:search-results-to-IRI-name-pattern()</link></code>.</para><para>Relies upon <code><link linkend="template-get-IRI-name">ŧ tan:get-IRI-name</link></code>.</para></section>
<section xml:id="function-search-wikipedia"><title><code>tan:search-wikipedia()</code></title><para><emphasis>TAN-fn-search-extended</emphasis></para><para><code>tan:search-wikipedia($search-expression as xs:string?, $max-records as xs:integer) as item()*</code></para><programlisting>Input: a search expression, an integer indicating the number of records requested </programlisting><programlisting>Output: that number of records using the search expression in Wikipedia </programlisting><para>Related: <link linkend="tan-function-group-search">search</link>, <link linkend="tan-function-group-vocabulary">vocabulary</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-search-for-entities">tan:search-for-entities</link></code>.</para></section>
</section>
</section>
<section xml:id="vkft-sequences"><title>Sequences</title><section><title>Functions</title><section xml:id="function-collate-pair-of-sequences"><title><code>tan:collate-pair-of-sequences()</code></title><para><emphasis>TAN-fn-sequences-standard</emphasis></para><para><code>tan:collate-pair-of-sequences($string-sequence-1 as xs:string*, $string-sequence-2 as xs:string*) as element()</code></para><programlisting>Input: two sequences of strings </programlisting><programlisting>Output: an element sequence that collates the two sequences as a single sequence, 
attempting to preserve the longest common subsequence. </programlisting><programlisting>This function has been written for two different scenarios: 
1. <code><link linkend="attribute-n">@n</link></code> values in two sets 
of <code><link linkend="element-div">&lt;div&gt;</link></code>s that must be collated; 
2. pre-processing two long strings that need to be 
compared. Although the primary context is two sets of unique string-sequences, one could 
imagine situations where one or both input strings have repetition, in which case it is best 
to retain information about the sequence. Hence the output is a sequence of elements, 
with <code>@p1</code>, <code>@p2</code>, or both signifying the position of the original input. The transformation 
is lossless, and the original input can be reconstructed if needed. </programlisting><para>Related: <link linkend="tan-function-group-grouping">grouping</link>, <link linkend="tan-function-group-sequences">sequences</link>, <link linkend="tan-function-group-strings">strings</link>, <link linkend="tan-function-group-diff">diff</link></para><para>Used by function <code>tan:diff-courtyard()</code>, <code>tan:diff-loop()</code>, <code><link linkend="function-collate-pair-of-sequences">tan:collate-pair-of-sequences()</link></code>, <code>tan:collate-sequence-loop()</code>.</para><para>Relies upon <code><link linkend="function-array-to-xml">tan:array-to-xml</link></code>, <code><link linkend="function-collate-pair-of-sequences">tan:collate-pair-of-sequences()</link></code>, <code><link linkend="function-longest-ascending-subsequence">tan:longest-ascending-subsequence</link></code>.</para></section>
<section xml:id="function-collate-sequences"><title><code>tan:collate-sequences()</code></title><para><emphasis>TAN-fn-sequences-standard</emphasis></para><para><code>tan:collate-sequences($elements-with-elements as element()*) as xs:string*</code></para><programlisting>Input: a sequence of elements, each with a sequence of child elements </programlisting><programlisting>Output: a series of strings that is a collation of the text sequences of the input </programlisting><programlisting>Example: Given input: <code>&lt;a&gt;</code><code>&lt;t&gt;</code>apple&lt;/t&gt;<code>&lt;t&gt;</code>banana&lt;/t&gt;<code>&lt;t&gt;</code>carrot&lt;/t&gt;&lt;/a&gt; 
<code>&lt;b&gt;</code><code>&lt;t&gt;</code>apple&lt;/t&gt;<code>&lt;t&gt;</code>carrot&lt;/t&gt;<code>&lt;t&gt;</code>dessert&lt;/t&gt;&lt;/b&gt; <code>&lt;c&gt;</code><code>&lt;t&gt;</code>apple&lt;/t&gt;<code>&lt;t&gt;</code>dessert&lt;/t&gt;&lt;/c&gt; Output will be: ('apple', 'banana', 
'carrot', 'dessert') </programlisting><para>Related: <link linkend="tan-function-group-nodes">nodes</link>, <link linkend="tan-function-group-sequences">sequences</link></para><para>Used by function <code><link linkend="function-collate-sequences">tan:collate-sequences()</link></code>, <code><link linkend="function-group-divs">tan:group-divs()</link></code>.</para><para>Relies upon <code><link linkend="function-collate-sequences">tan:collate-sequences()</link></code>.</para></section>
<section xml:id="function-distinct-items"><title><code>tan:distinct-items()</code></title><para><emphasis>TAN-fn-sequences-standard</emphasis></para><para><code>tan:distinct-items($items as item()*) as item()*</code></para><programlisting>Input: any sequence of items </programlisting><programlisting>Output: Those items that are not deeply equal to any other item in the sequence </programlisting><programlisting>This function is parallel to <code>distinct-values()</code>, but handles non-string input </programlisting><para>Related: <link linkend="tan-function-group-items">items</link>, <link linkend="tan-function-group-nodes">nodes</link></para><para>Used by template <code><link linkend="template-merge-tan-docs">ŧ tan:merge-tan-docs</link></code>, <code><link linkend="template-infuse-diff-and-collate-stats">ŧ tan:infuse-diff-and-collate-stats</link></code>, <code><link linkend="template-core-expansion-terse-attributes">ŧ tan:core-expansion-terse-attributes</link></code>, <code><link linkend="template-check-referred-doc">ŧ tan:check-referred-doc</link></code>, <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>.</para><para>Used by function <code><link linkend="function-vocabulary">tan:vocabulary()</link></code>, <code>tan:merge-anas()</code>, <code><link linkend="function-attribute-vocabulary">tan:attribute-vocabulary()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-duplicate-items"><title><code>tan:duplicate-items()</code></title><para><emphasis>TAN-fn-sequences-standard</emphasis></para><para><code>tan:duplicate-items($sequence as item()*) as item()*</code></para><programlisting>Input: any sequence of items </programlisting><programlisting>Output: those items that appear in the sequence more than once </programlisting><programlisting>This function parallels the standard <code>fn:distinct-values()</code> </programlisting><para>Related: <link linkend="tan-function-group-items">items</link>, <link linkend="tan-function-group-nodes">nodes</link></para><para>Used by variable <code><link linkend="variable-duplicate-head-iris">$tan:duplicate-head-iris</link></code>.</para><para>Used by template <code><link linkend="template-dependency-adjustments-pass-2">ŧ tan:dependency-adjustments-pass-2</link></code>, <code><link linkend="template-array-to-map">ŧ tan:array-to-map</link></code>, <code><link linkend="template-core-expansion-terse-attributes">ŧ tan:core-expansion-terse-attributes</link></code>, <code><link linkend="template-class-2-expansion-terse">ŧ tan:class-2-expansion-terse</link></code> tan:class-2-expansion-terse-for-validation, <code><link linkend="template-catalog-expansion-terse">ŧ tan:catalog-expansion-terse</link></code>, <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>.</para><para>Used by function <code><link linkend="function-duplicate-values">tan:duplicate-values()</link></code>, <code><link linkend="function-morphological-code-conversion-maps">tan:morphological-code-conversion-maps()</link></code>, <code><link linkend="function-group-elements-by-shared-node-values">tan:group-elements-by-shared-node-values()</link></code>.</para><para>Relies upon <code><link linkend="function-item-type">tan:item-type</link></code>.</para></section>
<section xml:id="function-duplicate-values"><title><code>tan:duplicate-values()</code></title><para><emphasis>TAN-fn-sequences-standard</emphasis></para><para><code>tan:duplicate-values($sequence as item()*) as item()*</code></para><programlisting>surrogate function for <code><link linkend="function-duplicate-items">tan:duplicate-items()</link></code> </programlisting><para>Used by template <code><link linkend="template-dependency-adjustments-pass-1">ŧ tan:dependency-adjustments-pass-1</link></code> tan:core-expansion-terse, <code><link linkend="template-core-expansion-normal">ŧ tan:core-expansion-normal</link></code>, <code><link linkend="template-convert-morphological-codes">ŧ tan:convert-morphological-codes</link></code>, <code><link linkend="template-core-expansion-terse-attributes-to-elements">ŧ tan:core-expansion-terse-attributes-to-elements</link></code>.</para><para>Relies upon <code><link linkend="function-duplicate-items">tan:duplicate-items</link></code>.</para></section>
<section xml:id="function-expand-numerical-expression"><title><code>tan:expand-numerical-expression()</code></title><para><emphasis>TAN-fn-sequences-standard</emphasis></para><para><code>tan:expand-numerical-expression($selector as xs:string?, $max as xs:integer?) as xs:integer*</code></para><programlisting>Input: a string representing a TAN selector (used by <code><link linkend="attribute-pos">@pos</link></code>, <code><link linkend="attribute-chars">@chars</link></code>), and an integer 
defining the value of 'last' </programlisting><programlisting>Output: a sequence of numbers representing the positions selected, unsorted, and 
retaining duplicate values. Example: ("2 - 4, last-5 - last, 36", 50) -&gt; (2, 3, 4, 45, 46, 47, 48, 
49, 50, 36) Errors will be flagged as follows: 0 = value that falls below 1; -1 = value that 
surpasses the value of <code>$max</code>; -2 = ranges that call for negative steps, e.g., '4 - 2'. </programlisting><programlisting>This function assumes that all numerals are Arabic. </programlisting><para>Related: <link linkend="tan-function-group-sequences">sequences</link>, <link linkend="tan-function-group-numerics">numerics</link>, <link linkend="tan-function-group-numerals">numerals</link></para><para>Used by template <code><link linkend="template-core-expansion-terse-attributes-to-elements">ŧ tan:core-expansion-terse-attributes-to-elements</link></code>, <code><link linkend="template-check-and-expand-ranges">ŧ tan:check-and-expand-ranges</link></code>, <code><link linkend="template-mark-dependencies-pass-2-for-validation">ŧ tan:mark-dependencies-pass-2-for-validation</link></code>, <code><link linkend="template-evaluate-conditions">ŧ tan:evaluate-conditions</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-item-type"><title><code>tan:item-type()</code></title><para><emphasis>TAN-fn-sequences-standard</emphasis></para><para><code>tan:item-type($xml-items as item()*) as xs:string*</code></para><programlisting>Input: any XML items </programlisting><programlisting>Output: the type of each item </programlisting><para>Related: <link linkend="tan-function-group-items">items</link>, <link linkend="tan-function-group-datatypes">datatypes</link>, <link linkend="tan-function-group-nodes">nodes</link></para><para>Used by template <code><link linkend="template-map-put">ŧ tan:map-put</link></code>, <code><link linkend="template-array-to-map">ŧ tan:array-to-map</link></code>, <code><link linkend="template-map-remove">ŧ tan:map-remove</link></code>, <code><link linkend="template-map-and-array-to-xml">ŧ tan:map-and-array-to-xml</link></code>.</para><para>Used by function <code><link linkend="function-map-entries">tan:map-entries()</link></code>, <code>tan:stamp-tree-with-text-data()</code>, <code><link linkend="function-restore-chopped-tree">tan:restore-chopped-tree()</link></code>, <code><link linkend="function-duplicate-items">tan:duplicate-items()</link></code>, <code><link linkend="function-search-morpheus">tan:search-morpheus()</link></code>, <code><link linkend="function-map-put">tan:map-put()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-longest-ascending-subsequence"><title><code>tan:longest-ascending-subsequence()</code></title><para><emphasis>TAN-fn-sequences-standard</emphasis></para><para><code>tan:longest-ascending-subsequence($integer-sequence as item()*) as array(xs:integer+)?</code></para><programlisting>Input: a sequence of items. Each item is either an integer, an array of integer 
sequences, or a sequence of integers serialized as text nodes (within child elements) </programlisting><programlisting>Output: An array. Each member of the array is a sequence of two integers. The first 
represents the position of the output integer, and the second is the integer itself that is a 
member of the longest ascending subsequence. The positional first integer allows one to 
disambiguate repetitions in the input. </programlisting><programlisting>Although this function claims by its name to find the longest subsequence, in the 
interests of efficiency, it applies the so-called Patience method of finding the string, 
which may return only a very long string, not the longest possible string. Such an approach 
allows the number of operations to be directly proportionate to the number of input values 
(backtracking would be computationally intensive on long sequences). The routine does 
"remember" gaps. If, given a set of integers, there is no increment available in candidate 
sequences, the sequences are retained, but a check is made backward for a subsequence that would 
account for the smallest of the new integers. </programlisting><programlisting>The input allows a sequence of elements, along with integers, because this function 
has been written to support <code>tan:collate-pairs-of-sequences()</code>, which requires 
choice options. That is, you may have a situation where you are comparing two sequences, 
either of which may have values that repeat, e.g., (a, b, c, b, d) and (c, b, d). The first 
sequence is converted (1, 2, 3, 4, 5). In finding a corresponding sequence of integers for the 
second set, b must be allowed to be either 2 or 4, i.e., the array [3, (2, 4), 5]. Both items of 
input would ideally be expressed as arrays of integers, but this function serves an XSLT 
2.0 library (where arrays are not recognized), and arrays are not as easy to construct 
and extract in XSLT 3.0 as maps are. </programlisting><programlisting>If an input array member consists of the empty sequence, its position impacts the 
positions that are returned in the output, but not the corresponding values (obviously). </programlisting><para>Related: <link linkend="tan-function-group-items">items</link>, <link linkend="tan-function-group-sequences">sequences</link>, <link linkend="tan-function-group-numerics">numerics</link></para><para>Used by function <code><link linkend="function-longest-ascending-subsequence">tan:longest-ascending-subsequence()</link></code>, <code><link linkend="function-collate-pair-of-sequences">tan:collate-pair-of-sequences()</link></code>.</para><para>Relies upon <code><link linkend="function-longest-ascending-subsequence">tan:longest-ascending-subsequence()</link></code>, <code><link linkend="template-build-integer-arrays">ŧ tan:build-integer-arrays</link></code>.</para></section>
<section xml:id="function-most-common-item"><title><code>tan:most-common-item()</code></title><para><emphasis>TAN-fn-sequences-extended</emphasis></para><para><code>tan:most-common-item($sequence as item()*) as item()?</code></para><programlisting>Input: any sequence of items </programlisting><programlisting>Output: the one item that appears most frequently </programlisting><programlisting>If two or more items appear equally frequently, only the first is returned </programlisting><para>Related: <link linkend="tan-function-group-sequences">sequences</link>, <link linkend="tan-function-group-items">items</link></para><para>Used by variable <code><link linkend="variable-most-common-indentations">$tan:most-common-indentations</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-most-common-item-count"><title><code>tan:most-common-item-count()</code></title><para><emphasis>TAN-fn-sequences-standard</emphasis></para><para><code>tan:most-common-item-count($sequence as item()*) as xs:integer?</code></para><programlisting>Input: any sequence of items </programlisting><programlisting>Output: the count of the first item that appears most frequently </programlisting><programlisting>If two or more items appear equally frequently, only the first is returned </programlisting><programlisting>Written to help group <code>&lt;u&gt;</code> elements in <code><link linkend="function-collate">tan:collate()</link></code> </programlisting><para>Related: <link linkend="tan-function-group-items">items</link>, <link linkend="tan-function-group-sequences">sequences</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
</section>
</section>
<section xml:id="vkft-statistics"><title>Statistics</title><section><title>Functions</title><section xml:id="function-median"><title><code>tan:median()</code></title><para><emphasis>TAN-fn-statistics-extended</emphasis></para><para><code>tan:median($numbers as xs:anyAtomicType*) as xs:anyAtomicType?</code></para><programlisting>Input: any sequence of numbers </programlisting><programlisting>Output: the median value </programlisting><programlisting>It is assumed that the input has already been sorted by <code>tan:numbers-sorted()</code> vel sim </programlisting><para>Related: <link linkend="tan-function-group-statistics">statistics</link></para><para>Used by function <code><link linkend="function-outliers">tan:outliers()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-no-outliers"><title><code>tan:no-outliers()</code></title><para><emphasis>TAN-fn-statistics-extended</emphasis></para><para><code>tan:no-outliers($numbers as xs:anyAtomicType*) as xs:anyAtomicType*</code></para><programlisting>Input: any sequence of numbers </programlisting><programlisting>Output: the same sequence, without outliers </programlisting><para>Related: <link linkend="tan-function-group-statistics">statistics</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-outliers">tan:outliers</link></code>.</para></section>
<section xml:id="function-outliers"><title><code>tan:outliers()</code></title><para><emphasis>TAN-fn-statistics-extended</emphasis></para><para><code>tan:outliers($numbers as xs:anyAtomicType*) as xs:anyAtomicType*</code></para><programlisting>Input: any sequence of numbers </programlisting><programlisting>Output: outliers in the sequence </programlisting><para>Related: <link linkend="tan-function-group-statistics">statistics</link></para><para>Used by function <code><link linkend="function-no-outliers">tan:no-outliers()</link></code>, <code><link linkend="function-outliers">tan:outliers()</link></code>.</para><para>Relies upon <code><link linkend="function-median">tan:median</link></code>, <code><link linkend="function-number-sort">tan:number-sort</link></code>, <code><link linkend="function-outliers">tan:outliers()</link></code>.</para></section>
</section>
</section>
<section xml:id="vkft-strings"><title>Strings</title><section><title>Variables</title><section xml:id="variable-diff-and-collate-input-batch-replacements"><title><code>$tan:diff-and-collate-input-batch-replacements</code></title><para><emphasis>TAN-fn-strings-diff-extended</emphasis></para><para>This variable has a complex definition. See
                                                   stylesheet for definiton.</para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-english-articles"><title><code>$tan:english-articles</code></title><para><emphasis>TAN-fn-strings-extended</emphasis></para><para>Definition: <code>('a', 'the')</code></para><para>Used by function <code><link linkend="function-title-case">tan:title-case()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-english-prepositions"><title><code>$tan:english-prepositions</code></title><para><emphasis>TAN-fn-strings-extended</emphasis></para><para>Definition: <code>('aboard', 'about', 'above', 'across', 'after', 'against', 'along', 'amid', 'among', 'anti', 'around', 'as', 'at', 'before', 'behind', 'below', 'beneath', 'beside', 'besides', 'between', 'beyond', 'but', 'by', 'concerning', 'considering', 'despite', 'down', 'during', 'except', 'excepting', 'excluding', 'following', 'for', 'from', 'in', 'inside', 'into', 'like', 'minus', 'near', 'of', 'off', 'on', 'onto', 'opposite', 'outside', 'over', 'past', 'per', 'plus', 'regarding', 'round', 'save', 'since', 'than', 'through', 'to', 'toward', 'towards', 'under', 'underneath', 'unlike', 'until', 'up', 'upon', 'versus', 'via', 'with', 'within', 'without')</code></para><para>Used by function <code><link linkend="function-title-case">tan:title-case()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-nested-phrase-close-marker-regex"><title><code>$tan:nested-phrase-close-marker-regex</code></title><para><emphasis>TAN-fn-strings-standard</emphasis></para><para>Definition: <code>'[' || tan:escape(string-join(<link linkend="variable-nested-phrase-markers">$tan:nested-phrase-markers</link>/tan:pair/tan:close/text())) || ']'</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Relies upon <code><link linkend="variable-nested-phrase-markers">$tan:nested-phrase-markers</link></code>.</para></section>
<section xml:id="variable-nested-phrase-marker-regex"><title><code>$tan:nested-phrase-marker-regex</code></title><para><emphasis>TAN-fn-strings-standard</emphasis></para><para>Definition: <code>'[' || tan:escape(string-join(<link linkend="variable-nested-phrase-markers">$tan:nested-phrase-markers</link>/tan:pair/*/text())) || ']'</code></para><para>Used by function <code>tan:nested-phrase-loop()</code>.</para><para>Relies upon <code><link linkend="variable-nested-phrase-markers">$tan:nested-phrase-markers</link></code>.</para></section>
<section xml:id="variable-nested-phrase-markers"><title><code>$tan:nested-phrase-markers</code></title><para><emphasis>TAN-fn-strings-standard</emphasis></para><para>This variable has a complex definition. See
                                                   stylesheet for definiton.</para><para>Used by variable <code><link linkend="variable-nested-phrase-marker-regex">$tan:nested-phrase-marker-regex</link></code>, <code><link linkend="variable-nested-phrase-close-marker-regex">$tan:nested-phrase-close-marker-regex</link></code>.</para><para>Used by function <code>tan:nested-phrase-loop()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
</section>
<section><title>Functions</title><section xml:id="function-acronym"><title><code>tan:acronym()</code></title><para><emphasis>TAN-fn-strings-extended</emphasis></para><para><code>tan:acronym($string-input as xs:string?) as xs:string?</code></para><programlisting>Input: any strings </programlisting><programlisting>Output: the acronym of those strings (initial letters joined without spaces) </programlisting><programlisting>Example: "The Cat in the Hat" - &gt; "TCitH" </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-adjust-diff"><title><code>tan:adjust-diff()</code></title><para><emphasis>TAN-fn-strings-diff-standard</emphasis></para><para><code>tan:adjust-diff($diff-output as element(tan:diff)*) as element()*</code></para><programlisting>Input: any output <code>&lt;diff&gt;</code>s from <code><link linkend="function-diff">tan:diff()</link></code> </programlisting><programlisting>Output: the output adjusted, with <code>&lt;a&gt;</code> and <code>&lt;b&gt;</code>s shifted if there are more optimal 
divisions </programlisting><programlisting>Multiple inputs are presumed to be <code><link linkend="function-diff">tan:diff()</link></code> results that should be concatenated. </programlisting><programlisting>This function is helpful for cases where the common element needs to be adjusted to 
better respect word or phrase boundaries. </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link>, <link linkend="tan-function-group-diff">diff</link></para><para>Used by function <code><link linkend="function-collate">tan:collate()</link></code>, <code><link linkend="function-replace-diff">tan:replace-diff()</link></code>, <code><link linkend="function-adjust-diff">tan:adjust-diff()</link></code>.</para><para>Relies upon <code><link linkend="function-adjust-diff">tan:adjust-diff()</link></code>, <code><link linkend="function-common-end-string">tan:common-end-string</link></code>, <code><link linkend="function-common-start-string">tan:common-start-string</link></code>, <code><link linkend="template-trim-or-add-text">ŧ tan:trim-or-add-text</link></code>.</para></section>
<section xml:id="function-apply-deltas"><title><code>tan:apply-deltas()</code></title><para><emphasis>Option 1 (TAN-fn-strings-diff-extended)</emphasis></para><para><code>tan:apply-deltas($string-to-convert as xs:string?, $deltas as document-node()*) as xs:string?</code></para><programlisting>2-parameter version of the full one, below </programlisting><para>Used by function <code><link linkend="function-apply-deltas">tan:apply-deltas()</link></code>.</para><para>Relies upon <code><link linkend="function-apply-deltas">tan:apply-deltas</link></code>.</para><para><emphasis>Option 2 (TAN-fn-strings-diff-extended)</emphasis></para><para><code>tan:apply-deltas($string-to-convert as xs:string?, $deltas as document-node()*, $input-is-string-a as xs:boolean?) as xs:string?</code></para><programlisting>Input: a string, a series of delta documents, perhaps a boolean </programlisting><programlisting>Output: another string, after any applicable deltas have been successively 
applied </programlisting><programlisting>Each delta will be applied only once. If any deltas are left over, a warning will be 
returned. </programlisting><programlisting>Output will be verified; if its checksum does not match what is in the given delta, a 
warning will be returned </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link>, <link linkend="tan-function-group-diff">diff</link></para><para>Used by function <code><link linkend="function-apply-deltas">tan:apply-deltas()</link></code>.</para><para>Relies upon <code><link linkend="function-apply-deltas">tan:apply-deltas</link></code>, <code><link linkend="function-checksum-fletcher-64">tan:checksum-fletcher-64</link></code>, <code><link linkend="function-ellipses">tan:ellipses</link></code>, <code><link linkend="function-trim-long-tree">tan:trim-long-tree</link></code>.</para></section>
<section xml:id="function-atomize-string"><title><code>tan:atomize-string()</code></title><para><emphasis>TAN-fn-strings-standard</emphasis></para><para><code>tan:atomize-string($input as xs:string?) as xs:string*</code></para><programlisting>surrogate function for <code><link linkend="function-chop-string">tan:chop-string()</link></code> </programlisting><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-chop-string">tan:chop-string</link></code>.</para></section>
<section xml:id="function-batch-replace"><title><code>tan:batch-replace()</code></title><para><emphasis>TAN-fn-strings-standard</emphasis></para><para><code>tan:batch-replace($string-to-replace as xs:string?, $replace-elements as element()*) as xs:string?</code></para><programlisting>Input: a string, a sequence of: &lt;[ANY NAME] pattern="" replacement="" [flags=""] 
[message=""]&gt; </programlisting><programlisting>Output: the string, after those replaces are processed in order </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link></para><para>Used by function <code><link linkend="function-batch-replace">tan:batch-replace()</link></code>.</para><para>Relies upon <code><link linkend="function-batch-replace">tan:batch-replace()</link></code>.</para></section>
<section xml:id="function-batch-replace-advanced"><title><code>tan:batch-replace-advanced()</code></title><para><emphasis>TAN-fn-strings-extended</emphasis></para><para><code>tan:batch-replace-advanced($items-with-strings as item()*, $replace-elements as element()*) as item()*</code></para><programlisting>Input: any items; a sequence of elements: &lt;[ANY NAME] pattern="" [flags=""] 
[message=""] [exclude-pattern=""]&gt;[ANY CONTENT]&lt;/[ANY NAME]&gt; </programlisting><programlisting>Output: a sequence of items, with instances of <code><link linkend="attribute-pattern">@pattern</link></code> replaced by the content of 
the elements </programlisting><programlisting>This is a more advanced form of <code><link linkend="function-batch-replace">tan:batch-replace()</link></code>, in that it allows text to be 
replaced by elements. It also allows for exclusion of matches via <code>@exclude-pattern.</code>. That is, 
if a span of text matches that value, the match will be ignored. </programlisting><programlisting>The function was devised to convert raw text into TAN-T. Textual references can be 
turned into &lt;div n=""/&gt; anchors, and the result can then be changed into a traditional 
hierarchy. </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link>, <link linkend="tan-function-group-tree_manipulation">tree manipulation</link>, <link linkend="tan-function-group-nodes">nodes</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="template-batch-replace-advanced-pass-1">ŧ tan:batch-replace-advanced-pass-1</link></code>.</para></section>
<section xml:id="function-chop-diff-output"><title><code>tan:chop-diff-output()</code></title><para><emphasis>TAN-fn-strings-diff-standard</emphasis></para><para><code>tan:chop-diff-output($diff-output as element(tan:diff)?, $chop-points as xs:integer*, $use-string-a as xs:boolean, $chop-other-at-regex as xs:string?) as map(xs:integer, item()*)</code></para><programlisting>Input: diff output; a sequence of integers; a boolean; a string </programlisting><programlisting>Output: a map whose constituent map entries consist of the input chopped into parts 
according to the input sequence of integers. If the boolean is true, then chops will be made 
according to string a, with chops on b made proportionally, respecting the boundaries defined 
by the fourth parameter. </programlisting><programlisting>Each map entry have as its value a <code>&lt;diff&gt;</code> wrapping the fragment <code>&lt;a&gt;</code>, <code>&lt;b&gt;</code>, <code>&lt;common&gt;</code>s. </programlisting><programlisting>If the input diff output already has <code>@_pos-a</code> and the like already inside, those 
figures will be respected, otherwise string data will be stamped into the input, and will be 
preserved in the output. </programlisting><programlisting>The numeral 1 will be automatically added to the chop points, and duplicates will be 
removed. </programlisting><programlisting>If the chop regex for the other string is missing, the chops will occur on individual 
characters. </programlisting><programlisting>This function was written primarily to support verbose validation of class 1 files, 
and to drive the application that synchronizes a class 1 file with a given redivision. </programlisting><programlisting>This function provides a more complex approach to the generic one supported by 
<code><link linkend="function-chop-tree">tan:chop-tree()</link></code> </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link>, <link linkend="tan-function-group-tree_manipulation">tree manipulation</link></para><para>Used by template <code><link linkend="template-class-1-expansion-verbose-pass-3">ŧ tan:class-1-expansion-verbose-pass-3</link></code>.</para><para>Used by function <code><link linkend="function-chop-diff-output">tan:chop-diff-output()</link></code>.</para><para>Relies upon <code><link linkend="variable-char-regex">$tan:char-regex</link></code>, <code><link linkend="function-chop-diff-output">tan:chop-diff-output()</link></code>, <code><link linkend="function-stamp-diff-with-text-data">tan:stamp-diff-with-text-data</link></code>, <code><link linkend="template-split-diff-components-1">ŧ tan:split-diff-components-1</link></code>.</para></section>
<section xml:id="function-chop-string"><title><code>tan:chop-string()</code></title><para><emphasis>Option 1 (TAN-fn-strings-standard)</emphasis></para><para><code>tan:chop-string($input as xs:string?) as xs:string*</code></para><programlisting>Input: any string </programlisting><programlisting>Output: that string chopped into a sequence of individual characters, following 
TAN rules (modifying characters always join their preceding base character) </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link>, <link linkend="tan-function-group-sequences">sequences</link></para><para>Used by template <code><link linkend="template-core-expansion-terse-attributes-to-elements">ŧ tan:core-expansion-terse-attributes-to-elements</link></code>, <code><link linkend="template-split-diff-components-1">ŧ tan:split-diff-components-1</link></code>, <code><link linkend="template-mark-dependencies-pass-2">ŧ tan:mark-dependencies-pass-2</link></code>, <code><link linkend="template-split-diff-components-2">ŧ tan:split-diff-components-2</link></code>.</para><para>Used by function <code><link linkend="function-atomize-string">tan:atomize-string()</link></code>, <code><link linkend="function-chop-string">tan:chop-string()</link></code>, <code><link linkend="function-string-length">tan:string-length()</link></code>, <code>tan:diff-loop()</code>, <code><link linkend="function-segment-string">tan:segment-string()</link></code>, <code><link linkend="function-int-to-grc">tan:int-to-grc()</link></code>, <code><link linkend="function-cardinal">tan:cardinal()</link></code>.</para><para>Relies upon <code><link linkend="variable-char-regex">$tan:char-regex</link></code>.</para><para><emphasis>Option 2 (TAN-fn-strings-standard)</emphasis></para><para><code>tan:chop-string($input as xs:string?, $chop-after-regex as xs:string) as xs:string*</code></para><programlisting>Input: any string </programlisting><programlisting>Output: that string chopped into a sequence of individual characters, following 
TAN rules (modifying characters always join their preceding base character) </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link>, <link linkend="tan-function-group-sequences">sequences</link></para><para>Used by template <code><link linkend="template-core-expansion-terse-attributes-to-elements">ŧ tan:core-expansion-terse-attributes-to-elements</link></code>, <code><link linkend="template-split-diff-components-1">ŧ tan:split-diff-components-1</link></code>, <code><link linkend="template-mark-dependencies-pass-2">ŧ tan:mark-dependencies-pass-2</link></code>, <code><link linkend="template-split-diff-components-2">ŧ tan:split-diff-components-2</link></code>.</para><para>Used by function <code><link linkend="function-atomize-string">tan:atomize-string()</link></code>, <code><link linkend="function-chop-string">tan:chop-string()</link></code>, <code><link linkend="function-string-length">tan:string-length()</link></code>, <code>tan:diff-loop()</code>, <code><link linkend="function-segment-string">tan:segment-string()</link></code>, <code><link linkend="function-int-to-grc">tan:int-to-grc()</link></code>, <code><link linkend="function-cardinal">tan:cardinal()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para><para><emphasis>Option 3 (TAN-fn-strings-standard)</emphasis></para><para><code>tan:chop-string($input as xs:string?, $chop-after-regex as xs:string) as xs:string*</code></para><programlisting>2-param version of the full one below </programlisting><para>Used by template <code><link linkend="template-core-expansion-terse-attributes-to-elements">ŧ tan:core-expansion-terse-attributes-to-elements</link></code>, <code><link linkend="template-split-diff-components-1">ŧ tan:split-diff-components-1</link></code>, <code><link linkend="template-mark-dependencies-pass-2">ŧ tan:mark-dependencies-pass-2</link></code>, <code><link linkend="template-split-diff-components-2">ŧ tan:split-diff-components-2</link></code>.</para><para>Used by function <code><link linkend="function-atomize-string">tan:atomize-string()</link></code>, <code><link linkend="function-chop-string">tan:chop-string()</link></code>, <code><link linkend="function-string-length">tan:string-length()</link></code>, <code>tan:diff-loop()</code>, <code><link linkend="function-segment-string">tan:segment-string()</link></code>, <code><link linkend="function-int-to-grc">tan:int-to-grc()</link></code>, <code><link linkend="function-cardinal">tan:cardinal()</link></code>.</para><para>Relies upon <code><link linkend="function-chop-string">tan:chop-string</link></code>.</para><para><emphasis>Option 4 (TAN-fn-strings-standard)</emphasis></para><para><code>tan:chop-string($input as xs:string?, $chop-after-regex as xs:string, $preserve-nested-clauses as xs:boolean) as xs:string*</code></para><programlisting>Input: any string, a regular expression, a boolean </programlisting><programlisting>Output: the input string cut into a sequence of strings using the regular expression 
as the cut marker </programlisting><programlisting>If the last boolean is true, then nested clauses (parentheses, direct quotations, 
etc.) will be preserved. </programlisting><programlisting>This function differs from the 1-parameter version in that it is used to chop the 
string not into individual characters but into words, clauses, sentences, etc. </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link></para><para>Used by template <code><link linkend="template-core-expansion-terse-attributes-to-elements">ŧ tan:core-expansion-terse-attributes-to-elements</link></code>, <code><link linkend="template-split-diff-components-1">ŧ tan:split-diff-components-1</link></code>, <code><link linkend="template-mark-dependencies-pass-2">ŧ tan:mark-dependencies-pass-2</link></code>, <code><link linkend="template-split-diff-components-2">ŧ tan:split-diff-components-2</link></code>.</para><para>Used by function <code><link linkend="function-atomize-string">tan:atomize-string()</link></code>, <code><link linkend="function-chop-string">tan:chop-string()</link></code>, <code><link linkend="function-string-length">tan:string-length()</link></code>, <code>tan:diff-loop()</code>, <code><link linkend="function-segment-string">tan:segment-string()</link></code>, <code><link linkend="function-int-to-grc">tan:int-to-grc()</link></code>, <code><link linkend="function-cardinal">tan:cardinal()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-collate"><title><code>tan:collate()</code></title><para><emphasis>Option 1 (TAN-fn-strings-collate-standard)</emphasis></para><para><code>tan:collate($strings-to-collate as xs:string*, $string-labels as xs:string*, $preoptimize-string-order as xs:boolean) as element()?</code></para><programlisting>3-parameter version of fuller one, below </programlisting><para>Used by template <code><link linkend="template-clean-up-collation-pass-1">ŧ tan:clean-up-collation-pass-1</link></code>.</para><para>Used by function <code><link linkend="function-collate">tan:collate()</link></code>.</para><para>Relies upon <code><link linkend="function-collate">tan:collate</link></code>.</para><para><emphasis>Option 2 (TAN-fn-strings-collate-standard)</emphasis></para><para><code>tan:collate($strings-to-collate as xs:string*, $string-labels as xs:string*, $preoptimize-string-order as xs:boolean, $adjust-diffs-during-preoptimization as xs:boolean, $clean-up-collation as xs:boolean) as element()?</code></para><programlisting>5-parameter version of fuller one, below </programlisting><para>Used by template <code><link linkend="template-clean-up-collation-pass-1">ŧ tan:clean-up-collation-pass-1</link></code>.</para><para>Used by function <code><link linkend="function-collate">tan:collate()</link></code>.</para><para>Relies upon <code><link linkend="function-collate">tan:collate</link></code>.</para><para><emphasis>Option 3 (TAN-fn-strings-collate-standard)</emphasis></para><para><code>tan:collate($strings-to-collate as xs:string*, $string-labels as xs:string*, $preoptimize-string-order as xs:boolean, $adjust-diffs-during-preoptimization as xs:boolean, $clean-up-collation as xs:boolean, $snap-to-word as xs:boolean) as element()?</code></para><programlisting>Input: a sequence of strings to be collated; a sequence of strings that label each 
string; a boolean indicating whether the sequence of input strings should be optimized; a 
boolean indicating whether the results of <code><link linkend="function-diff">tan:diff()</link></code> should be processed and weighed; a 
boolean indicating whether the collation should be cleaned up; a boolean whether diffs 
should be processed word for word or not. </programlisting><programlisting>Output: a <code>&lt;collation&gt;</code> with (1) one <code>&lt;witness&gt;</code> per string (and if the last parameter is 
true, then a sequence of children <code>&lt;commonality&gt;</code>s, signifying how close that string is 
with every other, and (2) a sequence of <code>&lt;c&gt;</code>s and <code>&lt;u&gt;</code>s, each with a <code>&lt;txt&gt;</code> and one or more &lt;wit 
ref="" pos=""/&gt;, indicating which string witness attests to the [c]ommon or [u]nique 
reading, and what position in that string the particular text fragment starts at. </programlisting><programlisting>If there are not enough labels (2nd parameter) for the input strings, the numerical 
position of the input string will be used as the string label / witness id. </programlisting><programlisting>If the third parameter is true, then <code><link linkend="function-diff">tan:diff()</link></code> will be performed against each pair 
of strings. Each diff output will be weighed by closeness of the two texts, and sorted 
accordingly. The results of this operation will be stored in collation/witness/commonality. 
This requires (n-1)! operations, so should be efficient for a few input strings, but will 
grow progressively longer according to the number and size of the input strings. 
Preoptimizing strings will likely produces greater congruence in the <code>&lt;u&gt;</code> fragments. </programlisting><programlisting>If the last parameter is true, then cleanup will not be performed. This parameter was 
introduced because the cleanup process itself invokes <code><link linkend="function-collate">tan:collate()</link></code> and one does not want to 
get into an endless loop because of a mishmash of differences that can never be 
reconciled or brought closer together. </programlisting><programlisting>This version of tan:collate was written in XSLT 3.0 to take advantage of 
xsl:iterate, and has an arity of 3, 5, or 6 parameters, unlike its XSLT 2.0 predecessors, which also 
applied a different approach to collation. </programlisting><programlisting>Changes in output from previous version of <code><link linkend="function-collate">tan:collate()</link></code>: 
- <code>@w</code> is now <code>&lt;wit&gt;</code> with 
<code><link linkend="attribute-ref">@ref</link></code> and <code><link linkend="attribute-pos">@pos</link></code> 
- the text node of <code>&lt;u&gt;</code> or <code>&lt;c&gt;</code> is now wrapped in <code>&lt;txt&gt;</code> 
- <code>@length</code> is ignored (the 
value is easily calculated) With these changes, any witness can be easily reconstructed 
with the XPath expression tan:collation/() </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link>, <link linkend="tan-function-group-diff">diff</link></para><para>Used by template <code><link linkend="template-clean-up-collation-pass-1">ŧ tan:clean-up-collation-pass-1</link></code>.</para><para>Used by function <code><link linkend="function-collate">tan:collate()</link></code>.</para><para>Relies upon <code><link linkend="function-adjust-diff">tan:adjust-diff</link></code>, <code><link linkend="function-collate">tan:collate()</link></code>, <code><link linkend="function-diff-cache">tan:diff-cache</link></code>, <code><link linkend="function-diff-to-collation">tan:diff-to-collation</link></code>, <code><link linkend="function-trim-long-text">tan:trim-long-text</link></code>, <code><link linkend="template-clean-up-collation-pass-1">ŧ tan:clean-up-collation-pass-1</link></code>, <code><link linkend="template-clean-up-collation-pass-2">ŧ tan:clean-up-collation-pass-2</link></code>.</para></section>
<section xml:id="function-commas-and-ands"><title><code>tan:commas-and-ands()</code></title><para><emphasis>Option 1 (TAN-fn-strings-extended)</emphasis></para><para><code>tan:commas-and-ands($input-strings as xs:string*) as xs:string?</code></para><programlisting>One-parameter version of the full one below </programlisting><para>Used by function <code><link linkend="function-commas-and-ands">tan:commas-and-ands()</link></code>.</para><para>Relies upon <code><link linkend="function-commas-and-ands">tan:commas-and-ands</link></code>.</para><para><emphasis>Option 2 (TAN-fn-strings-extended)</emphasis></para><para><code>tan:commas-and-ands($input-strings as xs:string*, $oxford-comma as xs:boolean) as xs:string?</code></para><programlisting>Input: sequences of strings </programlisting><programlisting>Output: the strings joined together with , and 'and' </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link></para><para>Used by function <code><link linkend="function-commas-and-ands">tan:commas-and-ands()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-common-end-string"><title><code>tan:common-end-string()</code></title><para><emphasis>TAN-fn-strings-standard</emphasis></para><para><code>tan:common-end-string($strings as xs:string*) as xs:string?</code></para><programlisting>1-parameter version of fuller function below </programlisting><para>Used by template <code><link linkend="template-adjust-horizontal-search">ŧ tan:adjust-horizontal-search</link></code>.</para><para>Used by function <code><link linkend="function-adjust-diff">tan:adjust-diff()</link></code>.</para><para>Relies upon <code><link linkend="function-common-start-or-end-string">tan:common-start-or-end-string</link></code>.</para></section>
<section xml:id="function-common-start-or-end-string"><title><code>tan:common-start-or-end-string()</code></title><para><emphasis>Option 1 (TAN-fn-strings-standard)</emphasis></para><para><code>tan:common-start-or-end-string($strings as xs:string*, $find-common-start as xs:boolean) as xs:string?</code></para><programlisting>2-parameter version of fuller function below </programlisting><programlisting>This one deals with many strings; the full one, with pairs of them </programlisting><para>Used by function <code><link linkend="function-common-start-string">tan:common-start-string()</link></code>, <code><link linkend="function-common-end-string">tan:common-end-string()</link></code>, <code><link linkend="function-common-start-or-end-string">tan:common-start-or-end-string()</link></code>.</para><para>Relies upon <code><link linkend="function-common-start-or-end-string">tan:common-start-or-end-string</link></code>.</para><para><emphasis>Option 2 (TAN-fn-strings-standard)</emphasis></para><para><code>tan:common-start-or-end-string($string-a as xs:string?, $string-b as xs:string?, $find-common-start as xs:boolean) as xs:string?</code></para><programlisting>Input: two strings; a boolean </programlisting><programlisting>Output: the longest common start (param 2 is true) or end (param 2 is false) portion of 
the two strings. </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link></para><para>Used by function <code><link linkend="function-common-start-string">tan:common-start-string()</link></code>, <code><link linkend="function-common-end-string">tan:common-end-string()</link></code>, <code><link linkend="function-common-start-or-end-string">tan:common-start-or-end-string()</link></code>.</para><para>Relies upon <code><link linkend="function-common-start-or-end-string">tan:common-start-or-end-string()</link></code>, <code><link linkend="function-ellipses">tan:ellipses</link></code>, <code><link linkend="function-log2">tan:log2</link></code>.</para></section>
<section xml:id="function-common-start-string"><title><code>tan:common-start-string()</code></title><para><emphasis>TAN-fn-strings-standard</emphasis></para><para><code>tan:common-start-string($strings as xs:string*) as xs:string?</code></para><programlisting>1-parameter version of fuller function below </programlisting><para>Used by template <code><link linkend="template-adjust-horizontal-search">ŧ tan:adjust-horizontal-search</link></code>.</para><para>Used by function <code><link linkend="function-adjust-diff">tan:adjust-diff()</link></code>.</para><para>Relies upon <code><link linkend="function-common-start-or-end-string">tan:common-start-or-end-string</link></code>.</para></section>
<section xml:id="function-contains-only-once"><title><code>tan:contains-only-once()</code></title><para><emphasis>TAN-fn-strings-standard</emphasis></para><para><code>tan:contains-only-once($arg1 as xs:string?, $arg2 as xs:string?) as xs:boolean</code></para><programlisting>Input: any two strings </programlisting><programlisting>Output: <code>true()</code> if and only if the first string contains the second, only one time </programlisting><programlisting>This function was introduced to support <code><link linkend="function-diff">tan:diff()</link></code>, to ensure that unique common 
tokens between two strings are not substrings of any other unique common tokens. </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link></para><para>Used by function <code>tan:diff-courtyard()</code>, <code>tan:diff-loop()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-diff"><title><code>tan:diff()</code></title><para><emphasis>Option 1 (TAN-fn-strings-diff-standard)</emphasis></para><para><code>tan:diff($string-a as xs:string?, $string-b as xs:string?) as element()</code></para><programlisting>2-param version of fuller one below </programlisting><para>Used by template <code><link linkend="template-class-1-expansion-verbose-pass-1">ŧ tan:class-1-expansion-verbose-pass-1</link></code>, <code><link linkend="template-core-expansion-normal">ŧ tan:core-expansion-normal</link></code>.</para><para>Used by function <code><link linkend="function-diff">tan:diff()</link></code>, <code><link linkend="function-diff-cache">tan:diff-cache()</link></code>, <code>tan:diff-courtyard()</code>, <code>tan:giant-diff()</code>, <code><link linkend="function-replace-collation">tan:replace-collation()</link></code>, <code><link linkend="function-get-diff-output-transpositions">tan:get-diff-output-transpositions()</link></code>, <code><link linkend="function-replace-diff">tan:replace-diff()</link></code>, <code>tan:diff-loop()</code>, <code><link linkend="function-replace-expanded-class-1-body">tan:replace-expanded-class-1-body()</link></code>, <code><link linkend="function-diff-or-collate-to-html">tan:diff-or-collate-to-html()</link></code>.</para><para>Relies upon <code><link linkend="function-diff">tan:diff</link></code>.</para><para><emphasis>Option 2 (TAN-fn-strings-diff-standard)</emphasis></para><para><code>tan:diff($string-a as xs:string?, $string-b as xs:string?, $snap-to-word as xs:boolean) as element()</code></para><programlisting>3-param version of fuller one below </programlisting><para>Used by template <code><link linkend="template-class-1-expansion-verbose-pass-1">ŧ tan:class-1-expansion-verbose-pass-1</link></code>, <code><link linkend="template-core-expansion-normal">ŧ tan:core-expansion-normal</link></code>.</para><para>Used by function <code><link linkend="function-diff">tan:diff()</link></code>, <code><link linkend="function-diff-cache">tan:diff-cache()</link></code>, <code>tan:diff-courtyard()</code>, <code>tan:giant-diff()</code>, <code><link linkend="function-replace-collation">tan:replace-collation()</link></code>, <code><link linkend="function-get-diff-output-transpositions">tan:get-diff-output-transpositions()</link></code>, <code><link linkend="function-replace-diff">tan:replace-diff()</link></code>, <code>tan:diff-loop()</code>, <code><link linkend="function-replace-expanded-class-1-body">tan:replace-expanded-class-1-body()</link></code>, <code><link linkend="function-diff-or-collate-to-html">tan:diff-or-collate-to-html()</link></code>.</para><para>Relies upon <code><link linkend="function-diff">tan:diff</link></code>.</para><para><emphasis>Option 3 (TAN-fn-strings-diff-standard)</emphasis></para><para><code>tan:diff($string-a as xs:string?, $string-b as xs:string?, $snap-to-word as xs:boolean, $preprocess-long-strings as xs:boolean) as element()</code></para><programlisting>Input: any two strings; boolean indicating whether results should snap to nearest 
word; boolean indicating whether long strings should be pre-processed </programlisting><programlisting>Output: an element with <code>&lt;a&gt;</code>, <code>&lt;b&gt;</code>, and <code>&lt;common&gt;</code> children showing where strings a and b 
match and depart </programlisting><programlisting>This function was written to assist the validation of <code><link linkend="element-redivision">&lt;redivision&gt;</link></code>s quickly find 
differences between any two strings. The function has been tested on pairs of strings up to 
combined lengths of 9M characters. At that scale, the only way to efficiently process the 
diffs is by chaining smaller diffs, which are still large, optimally about 350K in length. </programlisting><programlisting>This function prepares strings for 5-arity <code>tan:diff-engine()</code>, primarily by 
tending to input strings that are large or really large (giant). Large pairs of strings are 
parsed to find common characters that might be used to find pairwise congruence of large 
segments. Giant pairs of strings are passed to <code>tan:giant-diff()</code>. </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link>, <link linkend="tan-function-group-diff">diff</link></para><para>Used by template <code><link linkend="template-class-1-expansion-verbose-pass-1">ŧ tan:class-1-expansion-verbose-pass-1</link></code>, <code><link linkend="template-core-expansion-normal">ŧ tan:core-expansion-normal</link></code>.</para><para>Used by function <code><link linkend="function-diff">tan:diff()</link></code>, <code><link linkend="function-diff-cache">tan:diff-cache()</link></code>, <code>tan:diff-courtyard()</code>, <code>tan:giant-diff()</code>, <code><link linkend="function-replace-collation">tan:replace-collation()</link></code>, <code><link linkend="function-get-diff-output-transpositions">tan:get-diff-output-transpositions()</link></code>, <code><link linkend="function-replace-diff">tan:replace-diff()</link></code>, <code>tan:diff-loop()</code>, <code><link linkend="function-replace-expanded-class-1-body">tan:replace-expanded-class-1-body()</link></code>, <code><link linkend="function-diff-or-collate-to-html">tan:diff-or-collate-to-html()</link></code>.</para><para>Relies upon <code><link linkend="function-diff">tan:diff()</link></code>, <code><link linkend="function-ellipses">tan:ellipses</link></code>.</para></section>
<section xml:id="function-diff-cache"><title><code>tan:diff-cache()</code></title><para><emphasis>TAN-fn-strings-diff-standard</emphasis></para><para><code>tan:diff-cache($string-a as xs:string?, $string-b as xs:string?, $snap-to-word as xs:boolean, $preprocess-long-strings as xs:boolean) as element()</code></para><programlisting>4-param version of fuller one below This is a shadow function for <code><link linkend="function-diff">tan:diff()</link></code>. It uses 
XSLT 3.0 <code>@cache</code>, so that <code><link linkend="function-collate">tan:collate()</link></code> can avoid repeating diffs. Works only if the 
processor supports advanced features (e.g., Saxon PE, EE, not HE) </programlisting><para>Used by function <code><link linkend="function-collate">tan:collate()</link></code>.</para><para>Relies upon <code><link linkend="function-diff">tan:diff</link></code>.</para></section>
<section xml:id="function-diff-to-collation"><title><code>tan:diff-to-collation()</code></title><para><emphasis>TAN-fn-strings-diff-standard</emphasis></para><para><code>tan:diff-to-collation($diff-output as element()?, $diff-text-a-label as xs:string?, $diff-text-b-label as xs:string?) as element()</code></para><programlisting>Input: any single output of <code><link linkend="function-diff">tan:diff()</link></code>, two strings for the labels of diff strings a 
and b </programlisting><programlisting>Output: the output converted to the output of <code><link linkend="function-collate">tan:collate()</link></code>, namely, a <code>&lt;collation&gt;</code> 
with <code>&lt;u&gt;</code> and <code>&lt;c&gt;</code> children, wrapping <code>&lt;txt&gt;</code>, <code>&lt;wit&gt;</code>. </programlisting><programlisting>This function was written to support the XSLT 3.0 version of <code><link linkend="function-collate">tan:collate()</link></code>, to allow 
<code><link linkend="function-diff">tan:diff()</link></code> to be merged with <code><link linkend="function-collate">tan:collate()</link></code> output </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link>, <link linkend="tan-function-group-diff">diff</link></para><programlisting>We leave a marker for both witnesses in every <code>&lt;a&gt;</code> or <code>&lt;b&gt;</code>, but marking one as <code>&lt;wit&gt;</code> and 
another as <code>&lt;x&gt;</code>. This will facilitate the grouping of collations. </programlisting><para>Used by function <code><link linkend="function-collate">tan:collate()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-diff-to-delta"><title><code>tan:diff-to-delta()</code></title><para><emphasis>TAN-fn-strings-diff-extended</emphasis></para><para><code>tan:diff-to-delta($diff-output as element(tan:diff)?) as document-node()?</code></para><programlisting>Input: any output from <code><link linkend="function-diff">tan:diff()</link></code> </programlisting><programlisting>Output: a document node registering only the difference between strings a and b </programlisting><programlisting>Delta files are structured to support two-way conversion. That is, they are 
designed such that b can be reconstituted from a or vice versa. See <code><link linkend="function-apply-deltas">tan:apply-deltas()</link></code> for 
documentation. </programlisting><para>Related: <link linkend="tan-function-group-diff">diff</link>, <link linkend="tan-function-group-strings">strings</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="template-diff-to-delta">ŧ tan:diff-to-delta</link></code>.</para></section>
<section xml:id="function-ellipses"><title><code>tan:ellipses()</code></title><para><emphasis>Option 1 (TAN-fn-strings-standard)</emphasis></para><para><code>tan:ellipses($strings-to-truncate as xs:string*, $string-length-to-retain as xs:integer) as xs:string*</code></para><programlisting>2-arity version of the fuller one, below </programlisting><para>Used by template <code><link linkend="template-adjust-horizontal-search">ŧ tan:adjust-horizontal-search</link></code>, <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code> tan:dependency-adjustments-pass-1, <code><link linkend="template-ellipses">ŧ tan:ellipses</link></code>.</para><para>Used by function <code><link linkend="function-ellipses">tan:ellipses()</link></code>, <code>tan:diff-courtyard()</code>, <code>tan:giant-diff()</code>, <code><link linkend="function-get-diff-output-transpositions">tan:get-diff-output-transpositions()</link></code>, <code><link linkend="function-md5">tan:md5()</link></code>, <code><link linkend="function-common-start-or-end-string">tan:common-start-or-end-string()</link></code>, <code>tan:diff-loop()</code>, <code><link linkend="function-infuse-tree">tan:infuse-tree()</link></code>, <code><link linkend="function-diff">tan:diff()</link></code>, <code><link linkend="function-apply-deltas">tan:apply-deltas()</link></code>, <code>tan:checksum-fletcher()</code>, <code><link linkend="function-diff-or-collate-to-html">tan:diff-or-collate-to-html()</link></code>.</para><para>Relies upon <code><link linkend="function-ellipses">tan:ellipses</link></code>.</para><para><emphasis>Option 2 (TAN-fn-strings-standard)</emphasis></para><para><code>tan:ellipses($strings-to-truncate as xs:string*, $string-length-to-retain as xs:integer, $terminal-string-length-to-retain as xs:integer) as xs:string*</code></para><programlisting>3-arity version of the fuller one, below </programlisting><para>Used by template <code><link linkend="template-adjust-horizontal-search">ŧ tan:adjust-horizontal-search</link></code>, <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code> tan:dependency-adjustments-pass-1, <code><link linkend="template-ellipses">ŧ tan:ellipses</link></code>.</para><para>Used by function <code><link linkend="function-ellipses">tan:ellipses()</link></code>, <code>tan:diff-courtyard()</code>, <code>tan:giant-diff()</code>, <code><link linkend="function-get-diff-output-transpositions">tan:get-diff-output-transpositions()</link></code>, <code><link linkend="function-md5">tan:md5()</link></code>, <code><link linkend="function-common-start-or-end-string">tan:common-start-or-end-string()</link></code>, <code>tan:diff-loop()</code>, <code><link linkend="function-infuse-tree">tan:infuse-tree()</link></code>, <code><link linkend="function-diff">tan:diff()</link></code>, <code><link linkend="function-apply-deltas">tan:apply-deltas()</link></code>, <code>tan:checksum-fletcher()</code>, <code><link linkend="function-diff-or-collate-to-html">tan:diff-or-collate-to-html()</link></code>.</para><para>Relies upon <code><link linkend="function-ellipses">tan:ellipses</link></code>.</para><para><emphasis>Option 3 (TAN-fn-strings-standard)</emphasis></para><para><code>tan:ellipses($strings-to-truncate as xs:string*, $initial-string-length-to-retain as xs:integer, $terminal-string-length-to-retain as xs:integer, $indicate-number-of-characters-elided as xs:boolean) as xs:string*</code></para><programlisting>Input: any sequence of strings; two integers; a boolean </programlisting><programlisting>Output: the sequence of strings, but with any initial substring beyond the first 
requested length and any terminal substring beyond the last requested length replaced by 
ellipses. If the boolean is true, then two sets of ellipses will be provided, surrounding in 
square brackets the number of characters removed. </programlisting><programlisting>If the elision is less than the length of the replacement, then no elision will take 
place. </programlisting><programlisting>Examples: "abcd", 1, 1, false &gt; "a…d" "abcd", 1, 1, true &gt; "abcd" "abcdefghijk", 1, 1, 
true &gt; "a…[9]…k" </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link></para><para>Used by template <code><link linkend="template-adjust-horizontal-search">ŧ tan:adjust-horizontal-search</link></code>, <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code> tan:dependency-adjustments-pass-1, <code><link linkend="template-ellipses">ŧ tan:ellipses</link></code>.</para><para>Used by function <code><link linkend="function-ellipses">tan:ellipses()</link></code>, <code>tan:diff-courtyard()</code>, <code>tan:giant-diff()</code>, <code><link linkend="function-get-diff-output-transpositions">tan:get-diff-output-transpositions()</link></code>, <code><link linkend="function-md5">tan:md5()</link></code>, <code><link linkend="function-common-start-or-end-string">tan:common-start-or-end-string()</link></code>, <code>tan:diff-loop()</code>, <code><link linkend="function-infuse-tree">tan:infuse-tree()</link></code>, <code><link linkend="function-diff">tan:diff()</link></code>, <code><link linkend="function-apply-deltas">tan:apply-deltas()</link></code>, <code>tan:checksum-fletcher()</code>, <code><link linkend="function-diff-or-collate-to-html">tan:diff-or-collate-to-html()</link></code>.</para><para>Relies upon <code><link linkend="function-ellipses">tan:ellipses()</link></code>.</para></section>
<section xml:id="function-fill"><title><code>tan:fill()</code></title><para><emphasis>TAN-fn-strings-standard</emphasis></para><para><code>tan:fill($string-to-fill as xs:string?, $times-to-repeat as xs:integer) as xs:string?</code></para><programlisting>Input: a string, an integer </programlisting><programlisting>Output: a string with the first parameter repeated the number of times specified by 
the integer </programlisting><programlisting>This function was written to facilitate indentation </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link>, <link linkend="tan-function-group-spacing">spacing</link></para><para>Used by template <code><link linkend="template-indent-items">ŧ tan:indent-items</link></code>.</para><para>Used by function <code>tan:checksum-fletcher()</code>, <code><link linkend="function-bin-to-hex">tan:bin-to-hex()</link></code>, <code><link linkend="function-hex-to-bin">tan:hex-to-bin()</link></code>, <code><link linkend="function-bin-to-base64">tan:bin-to-base64()</link></code>, <code><link linkend="function-base64-to-bin">tan:base64-to-bin()</link></code>, <code><link linkend="function-hex-to-base64">tan:hex-to-base64()</link></code>, <code><link linkend="function-base64-to-hex">tan:base64-to-hex()</link></code>, <code><link linkend="function-hex-to-base64Binary">tan:hex-to-base64Binary()</link></code>, <code><link linkend="function-hex-to-hexBinary">tan:hex-to-hexBinary()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-get-collate-stats"><title><code>tan:get-collate-stats()</code></title><para><emphasis>TAN-fn-strings-collate-extended</emphasis></para><para><code>tan:get-collate-stats($collate-input as element()?, $include-venns as xs:boolean) as element()?</code></para><programlisting>Input: any output from <code><link linkend="function-collate">tan:collate()</link></code>; boolean </programlisting><programlisting>Output: the output, wrapped in a <code><link linkend="element-group">&lt;group&gt;</link></code> and preceded by statistics. If the boolean 
is true, then 3-way venn statistics will be included. </programlisting><programlisting>For details, see comments at <code>tan:infuse-diff-and-collate-stats()</code>. </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="template-get-diff-stats">ŧ tan:get-diff-stats</link></code>.</para></section>
<section xml:id="function-get-diff-output-transpositions"><title><code>tan:get-diff-output-transpositions()</code></title><para><emphasis>TAN-fn-strings-diff-extended</emphasis></para><para><code>tan:get-diff-output-transpositions($diff-output as element(tan:diff), $minimum-transposition-length as xs:integer, $minimum-commonality as xs:decimal) as element()</code></para><programlisting>Input: output from <code><link linkend="function-diff">tan:diff()</link></code>; an integer; a decimal (from 0 to 1) </programlisting><programlisting>Output: a <code>&lt;transpositions&gt;</code> element, wrapping the following: (1) a <code>&lt;checksums&gt;</code> 
element that contains the checksums for strings a and b of the input; (2) a <code>&lt;parameters&gt;</code> 
element that contains the settings specified; (3) zero or more <code>&lt;transposition&gt;</code> elements 
wrapping the portion of the input diff output that is at least as long as the integer, and whose 
commonality is greater than or equal to the percent specified by the decimal. </programlisting><programlisting>This function looks within likely sections of the results of <code><link linkend="function-diff">tan:diff()</link></code> for 
passages that may represent a transposition. What constitutes a transposition differs 
greatly from one situation to the next. In large stretches of running prose, a safe minimum 
length might be 20 and a corresponding commonality 0.95, to accommodate very occasional 
changes. The lower the commonality number, the more results, but they may include on the edges 
material that is not part of the actual transposition. </programlisting><programlisting><code>&lt;transposition&gt;</code> has attributes that point to the absolute position of the start of 
the a and b fragments within the original diff output. These values can be used as points 
at which to chop the diff result tree, if you wish to synthesize, combine, etc. it with 
the transposition slices. </programlisting><programlisting>Transpositions can be a difficult topic, with many-to-many assignments between 
the two texts, or with assignments in the same text that overlap. This is normal, and 
reflects normal editing habits. For example, an editor may take two sentences from different 
parts of a text and merge them at a third spot. This function, with enough leeway in the 
parameters, would catch both of the transpositions. It is up to you to interpret those 
transpositions and use them as you see fit. </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link>, <link linkend="tan-function-group-diff">diff</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-checksum-fletcher-64">tan:checksum-fletcher-64</link></code>, <code><link linkend="function-diff">tan:diff</link></code>, <code><link linkend="function-ellipses">tan:ellipses</link></code>, <code><link linkend="function-map-to-xml">tan:map-to-xml</link></code>, <code><link linkend="function-stamp-diff-with-text-data">tan:stamp-diff-with-text-data</link></code>, <code><link linkend="template-strip-text-data-stamps">ŧ tan:strip-text-data-stamps</link></code>.</para></section>
<section xml:id="function-get-diff-stats"><title><code>tan:get-diff-stats()</code></title><para><emphasis>TAN-fn-strings-diff-extended</emphasis></para><para><code>tan:get-diff-stats($diff-input as element()?) as element()?</code></para><programlisting>Input: any output from <code><link linkend="function-diff">tan:diff()</link></code> </programlisting><programlisting>Output: the output, wrapped in a <code><link linkend="element-group">&lt;group&gt;</link></code> and preceded by statistics. </programlisting><programlisting>For details, see comments at <code>tan:infuse-diff-and-collate-stats()</code>. </programlisting><para>Related: <link linkend="tan-function-group-diff">diff</link>, <link linkend="tan-function-group-statistics">statistics</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="template-get-diff-stats">ŧ tan:get-diff-stats</link></code>.</para></section>
<section xml:id="function-glob-to-regex"><title><code>tan:glob-to-regex()</code></title><para><emphasis>TAN-fn-strings-extended</emphasis></para><para><code>tan:glob-to-regex($globs as xs:string*) as xs:string*</code></para><programlisting>Input: any strings that follow a glob-like syntax </programlisting><programlisting>Output: the strings converted to regular expressions </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link>, <link linkend="tan-function-group-filenames">filenames</link></para><para>Used by function <code><link linkend="function-uri-collection-from-pattern">tan:uri-collection-from-pattern()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-initial-upper-case"><title><code>tan:initial-upper-case()</code></title><para><emphasis>TAN-fn-strings-extended</emphasis></para><para><code>tan:initial-upper-case($strings as xs:string*) as xs:string*</code></para><programlisting>Input: any strings </programlisting><programlisting>Output: each string with the initial letters capitalized and the rest set 
lower-case </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link></para><para>Used by template <code><link linkend="template-title-case">ŧ tan:title-case</link></code>.</para><para>Used by function <code><link linkend="function-title-case">tan:title-case()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-lcs-distance"><title><code>tan:lcs-distance()</code></title><para><emphasis>TAN-fn-strings-diff-extended</emphasis></para><para><code>tan:lcs-distance($diff-output as element(tan:diff)?) as xs:integer?</code></para><programlisting>Input: results of <code><link linkend="function-diff">tan:diff()</link></code> </programlisting><programlisting>Output: the longest common subsequence distance of the output </programlisting><programlisting>LCS distance assigns 1 point per character deletion and insertion </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link>, <link linkend="tan-function-group-diff">diff</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-levenshtein-distance"><title><code>tan:levenshtein-distance()</code></title><para><emphasis>TAN-fn-strings-diff-extended</emphasis></para><para><code>tan:levenshtein-distance($diff-output as element(tan:diff)?) as xs:integer?</code></para><programlisting>Input: results of <code><link linkend="function-diff">tan:diff()</link></code> </programlisting><programlisting>Output: the Levenstein distance of the output </programlisting><programlisting>Levenstein distance assigns 1 point per character deletion, insertion, or 
substitution </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link>, <link linkend="tan-function-group-diff">diff</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="template-levenshtein-distance">ŧ tan:levenshtein-distance</link></code>.</para></section>
<section xml:id="function-namespace"><title><code>tan:namespace()</code></title><para><emphasis>TAN-fn-strings-extended</emphasis></para><para><code>tan:namespace($prefix-or-uri as xs:string*) as xs:string*</code></para><programlisting>Input: any strings representing a namespace prefix or uri </programlisting><programlisting>Output: the corresponding prefix or uri whenever a match is found in the global 
variable </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link>, <link linkend="tan-function-group-namespaces">namespaces</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="variable-namespaces-and-prefixes">$tan:namespaces-and-prefixes</link></code>.</para></section>
<section xml:id="function-normalize-div-text"><title><code>tan:normalize-div-text()</code></title><para><emphasis>Option 1 (TAN-fn-strings-standard)</emphasis></para><para><code>tan:normalize-div-text($single-leaf-div-text-nodes as xs:string*) as xs:string*</code></para><programlisting>One-parameter version of the fuller one, below. </programlisting><para>Used by template <code><link linkend="template-tokenize-div">ŧ tan:tokenize-div</link></code>, <code><link linkend="template-text-join">ŧ tan:text-join</link></code>.</para><para>Used by function <code><link linkend="function-normalize-div-text">tan:normalize-div-text()</link></code>.</para><para>Relies upon <code><link linkend="function-normalize-div-text">tan:normalize-div-text</link></code>.</para><para><emphasis>Option 2 (TAN-fn-strings-standard)</emphasis></para><para><code>tan:normalize-div-text($single-leaf-div-text-nodes as xs:string*, $remove-special-div-end-chars as xs:boolean) as xs:string*</code></para><programlisting>Input: any sequence of strings, presumed to be text nodes of a single leaf div; a 
boolean indicating whether special div-end characters should be retained or not </programlisting><programlisting>Output: the same sequence, normalized according to TAN rules. Each item in the 
sequence is space normalized and then if its end matches one of the special div-end 
characters, ZWJ U+200D or SOFT HYPHEN U+AD, the character is removed; otherwise a space is added 
at the end. Zero-length strings are skipped. </programlisting><programlisting>This function is designed specifically for TAN's commitment to nonmixed content. 
That is, every TAN element contains either elements or non-space text but not both, which 
also means that space-only text nodes are effectively ignored. It is assumed that every 
TAN element is followed by a notional space. </programlisting><programlisting>The second parameter is important, because output will be used to normalize and 
repopulate leaf <code><link linkend="element-div">&lt;div&gt;</link></code>s (where special div-end characters should be retained) or to 
concatenate leaf <code><link linkend="element-div">&lt;div&gt;</link></code> text (where those characters should be deleted) </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link></para><para>Used by template <code><link linkend="template-tokenize-div">ŧ tan:tokenize-div</link></code>, <code><link linkend="template-text-join">ŧ tan:text-join</link></code>.</para><para>Used by function <code><link linkend="function-normalize-div-text">tan:normalize-div-text()</link></code>.</para><para>Relies upon <code><link linkend="variable-special-end-div-chars-regex">$tan:special-end-div-chars-regex</link></code>, <code><link linkend="function-normalize-div-text">tan:normalize-div-text()</link></code>.</para></section>
<section xml:id="function-normalize-name"><title><code>tan:normalize-name()</code></title><para><emphasis>TAN-fn-strings-standard</emphasis></para><para><code>tan:normalize-name($text as xs:string*) as xs:string*</code></para><programlisting>one-parameter version of fuller one, below </programlisting><para>Used by template <code><link linkend="template-first-stamp-shallow-copy">ŧ tan:first-stamp-shallow-copy</link></code>, <code><link linkend="template-core-expansion-terse-attributes">ŧ tan:core-expansion-terse-attributes</link></code>, <code><link linkend="template-first-stamp-shallow-skip">ŧ tan:first-stamp-shallow-skip</link></code>, <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>, <code><link linkend="template-core-expansion-normal">ŧ tan:core-expansion-normal</link></code>.</para><para>Used by function <code><link linkend="function-vocabulary">tan:vocabulary()</link></code>, <code><link linkend="function-update-TAN-change-log">tan:update-TAN-change-log()</link></code>, <code><link linkend="function-has-vocab">tan:has-vocab()</link></code>, <code>tan:resolve-doc-loop()</code>, <code><link linkend="function-attribute-vocabulary">tan:attribute-vocabulary()</link></code>.</para><para>Relies upon <code><link linkend="function-normalize-text">tan:normalize-text</link></code>.</para></section>
<section xml:id="function-normalize-text"><title><code>tan:normalize-text()</code></title><para><emphasis>Option 1 (TAN-fn-strings-standard)</emphasis></para><para><code>tan:normalize-text($text as xs:string*) as xs:string*</code></para><programlisting>one-parameter version of full function below </programlisting><para>Used by template <code><link linkend="template-check-referred-doc">ŧ tan:check-referred-doc</link></code>.</para><para>Used by function <code><link linkend="function-normalize-text">tan:normalize-text()</link></code>, <code><link linkend="function-normalize-name">tan:normalize-name()</link></code>.</para><para>Relies upon <code><link linkend="function-normalize-text">tan:normalize-text</link></code>.</para><para><emphasis>Option 2 (TAN-fn-strings-standard)</emphasis></para><para><code>tan:normalize-text($text as xs:string*, $treat-as-name-values as xs:boolean) as xs:string*</code></para><programlisting>Input: any sequence of strings; a boolean indicating whether the results should be 
name-normalized </programlisting><programlisting>Output: that sequence, with each item's space normalized, and removal of any help 
requested </programlisting><programlisting>In name-normalization, the string is converted to lower-case, and spaces replace 
hyphens, underscores, and illegal characters. </programlisting><programlisting>Special end div characters are not removed in this operation, nor is tail-end space 
adjusted according to TAN rules; for that, see <code><link linkend="function-normalize-div-text">tan:normalize-div-text()</link></code>. </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link></para><para>Used by template <code><link linkend="template-check-referred-doc">ŧ tan:check-referred-doc</link></code>.</para><para>Used by function <code><link linkend="function-normalize-text">tan:normalize-text()</link></code>, <code><link linkend="function-normalize-name">tan:normalize-name()</link></code>.</para><para>Relies upon <code><link linkend="variable-help-trigger-regex">$tan:help-trigger-regex</link></code>, <code><link linkend="variable-regex-characters-not-permitted">$tan:regex-characters-not-permitted</link></code>, <code><link linkend="variable-regex-name-space-characters">$tan:regex-name-space-characters</link></code>.</para></section>
<section xml:id="function-normalize-unicode"><title><code>tan:normalize-unicode()</code></title><para><emphasis>TAN-fn-strings-extended</emphasis></para><para><code>tan:normalize-unicode($input as item()*) as item()*</code></para><programlisting>Input: any items </programlisting><programlisting>Output: the same items, but with all unicode normalized </programlisting><programlisting>This is a surrogate to <code>fn:normalize-unicode()</code>, extending functionality to any 
item </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link>, <link linkend="tan-function-group-tree_manipulation">tree manipulation</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="template-normalize-unicode">ŧ tan:normalize-unicode</link></code>.</para></section>
<section xml:id="function-replace-collation"><title><code>tan:replace-collation()</code></title><para><emphasis>TAN-fn-strings-collate-extended</emphasis></para><para><code>tan:replace-collation($original-witness-string as xs:string?, $original-witness-id as xs:string?, $collate-output-to-replace as element()?) as element()?</code></para><programlisting>Input: two strings; the output of <code><link linkend="function-collate">tan:collate()</link></code> </programlisting><programlisting>Output: the output, but an attempt is made to change every <code>&lt;c&gt;</code> and every <code>&lt;u&gt;</code> with the 
chosen witness id (param 2) into the original string form (param 1). </programlisting><programlisting>This is a companion function to <code><link linkend="function-replace-diff">tan:replace-diff()</link></code>, but it has some inherent 
limitations. Diffs of 3 or more sources can be messy, and any attempt to replace every <code>&lt;u&gt;</code> with a 
particular version proves to be confusing to interpret. Furthermore, <code><link linkend="function-replace-diff">tan:replace-diff()</link></code> 
adjusts the output so that newly inserted characters are not repeated if they are applied 
equally to coordinate <code>&lt;a&gt;</code>s and <code>&lt;b&gt;</code>s. That is not possible for collate because of how chaotic 
the results can be. So the fallback method is to focus on getting the first witness right, 
and not worrying about the others. </programlisting><programlisting>If the 2nd parameter is empty or doesn't match a particular witness id, then the first 
witness will be chosen. Intentionally supplying a bad 2nd parameter can be a good idea, if you 
are interested in only the dominant source, since <code><link linkend="function-collate">tan:collate()</link></code> by default places at 
the top the witness with the least amount of divergence. </programlisting><programlisting>Because only one witness is being recalibrated, it is possible to update the 
position values. But the other witness values will not be updated, so that the results can be 
correlated with the other witness texts if needed. Further, if a replacement involves that 
witness no longer attesting to that fragment, then it is changed to a <code>&lt;u&gt;</code> (or the <code>&lt;u&gt;</code> is 
retained) and the <code>&lt;wit&gt;</code> is dropped. </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link>, <link linkend="tan-function-group-diff">diff</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-diff">tan:diff</link></code>, <code><link linkend="template-replace-collation">ŧ tan:replace-collation</link></code>.</para></section>
<section xml:id="function-replace-diff"><title><code>tan:replace-diff()</code></title><para><emphasis>TAN-fn-strings-diff-extended</emphasis></para><para><code>tan:replace-diff($original-string-a as xs:string?, $original-string-b as xs:string?, $diff-to-replace as element()?, $prioritize-a-over-b as xs:boolean) as element()?</code></para><programlisting>Input: the results of <code><link linkend="function-diff">tan:diff()</link></code>; the original a and b strings; a boolean </programlisting><programlisting>Output: the output, but with each <code>&lt;a&gt;</code>, and <code>&lt;b&gt;</code> replaced by the original strings. 
<code>&lt;common&gt;</code> follows the a string, not b. </programlisting><programlisting>This function was made to support a more relaxed approach to <code><link linkend="function-diff">tan:diff()</link></code>, one that 
avoids changes that should be ignored. For example, if you are comparing "Gray" (=<code>$a</code>) and 
"greys" (=<code>$b</code>) and for your purposes, alternate spellings and case should be ignored, then 
make appropriate changes to the strings (=<code>$a2</code>, <code>$b2</code>) then <code>tan:reconcile-diff(</code><code>$a</code>, <code>$b</code>, 
<code><link linkend="function-diff">tan:diff</link></code><code>$a2</code>, <code>$b2</code>)) will result in <code>&lt;diff&gt;</code><code>&lt;common&gt;</code>Gray&lt;/common&gt;<code>&lt;b&gt;</code>s&lt;/b&gt;&lt;/diff&gt; </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link>, <link linkend="tan-function-group-diff">diff</link></para><para>Used by function <code><link linkend="function-replace-diff">tan:replace-diff()</link></code>.</para><para>Relies upon <code><link linkend="function-adjust-diff">tan:adjust-diff</link></code>, <code><link linkend="function-diff">tan:diff</link></code>, <code><link linkend="function-map-to-xml">tan:map-to-xml</link></code>, <code><link linkend="function-replace-diff">tan:replace-diff()</link></code>, <code><link linkend="function-stamp-diff-with-text-data">tan:stamp-diff-with-text-data</link></code>, <code><link linkend="template-replace-diff">ŧ tan:replace-diff</link></code>, <code><link linkend="template-shallow-skip-diff-add">ŧ tan:shallow-skip-diff-add</link></code>.</para></section>
<section xml:id="function-reverse-string"><title><code>tan:reverse-string()</code></title><para><emphasis>TAN-fn-strings-extended</emphasis></para><para><code>tan:reverse-string($string-to-reverse as xs:string?) as xs:string?</code></para><programlisting>Input: any string </programlisting><programlisting>Output: the string in reverse order </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link></para><para>Used by function <code>tan:le-bits-to-int-and-neg()</code>, <code><link linkend="function-md5">tan:md5()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-satisfies-regex"><title><code>tan:satisfies-regex()</code></title><para><emphasis>TAN-fn-strings-extended</emphasis></para><para><code>tan:satisfies-regex($string-to-test as xs:string?, $string-must-match-regex as xs:string?) as xs:boolean</code></para><programlisting>2-param version of fuller one, below </programlisting><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-satisfies-regexes">tan:satisfies-regexes</link></code>.</para></section>
<section xml:id="function-satisfies-regexes"><title><code>tan:satisfies-regexes()</code></title><para><emphasis>Option 1 (TAN-fn-strings-extended)</emphasis></para><para><code>tan:satisfies-regexes($string-to-test as xs:string?, $string-must-match-regex as xs:string?, $string-must-not-match-regex as xs:string?) as xs:boolean</code></para><programlisting>3-param version of fuller one, below </programlisting><para>Used by function <code><link linkend="function-satisfies-regex">tan:satisfies-regex()</link></code>, <code>tan:filename-satisfies-regex()</code>, <code><link linkend="function-satisfies-regexes">tan:satisfies-regexes()</link></code>, <code>tan:filename-satisfies-regexes()</code>.</para><para>Relies upon <code><link linkend="function-satisfies-regexes">tan:satisfies-regexes</link></code>.</para><para><emphasis>Option 2 (TAN-fn-strings-extended)</emphasis></para><para><code>tan:satisfies-regexes($string-to-test as xs:string?, $string-must-match-regex as xs:string?, $string-must-not-match-regex as xs:string?, $flags as xs:string?) as xs:boolean</code></para><programlisting>Input: a string value; an optional regex the string must match; an optional regex the 
string must not match </programlisting><programlisting>Output: whether the string satisfies the two regex conditions; if either regex is 
empty, true will be returned </programlisting><programlisting>If the input string is less than zero length, the function returns false </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link>, <link linkend="tan-function-group-regular_expressions">regular expressions</link></para><para>Used by function <code><link linkend="function-satisfies-regex">tan:satisfies-regex()</link></code>, <code>tan:filename-satisfies-regex()</code>, <code><link linkend="function-satisfies-regexes">tan:satisfies-regexes()</link></code>, <code>tan:filename-satisfies-regexes()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-segment-string"><title><code>tan:segment-string()</code></title><para><emphasis>Option 1 (TAN-fn-strings-extended)</emphasis></para><para><code>tan:segment-string($string-to-segment as xs:string?, $segment-portions as xs:decimal*) as xs:string*</code></para><programlisting>2-arity version of the more complete function, below </programlisting><para>Used by function <code><link linkend="function-segment-string">tan:segment-string()</link></code>, <code><link linkend="function-infuse-tree">tan:infuse-tree()</link></code>.</para><para>Relies upon <code><link linkend="function-segment-string">tan:segment-string</link></code>.</para><para><emphasis>Option 2 (TAN-fn-strings-extended)</emphasis></para><para><code>tan:segment-string($string-to-segment as xs:string?, $segment-portions as xs:decimal*, $break-at-regex as xs:string) as xs:string*</code></para><programlisting>Input: a string, a sequence of doubles from 0 through 1, a regular expression </programlisting><programlisting>Output: the string divided into segments proportionate to the doubles, with 
divisions allowed only by the regular expression </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link>, <link linkend="tan-function-group-sequences">sequences</link></para><para>Used by function <code><link linkend="function-segment-string">tan:segment-string()</link></code>, <code><link linkend="function-infuse-tree">tan:infuse-tree()</link></code>.</para><para>Relies upon <code><link linkend="function-chop-string">tan:chop-string</link></code>.</para></section>
<section xml:id="function-stamp-diff-with-text-data"><title><code>tan:stamp-diff-with-text-data()</code></title><para><emphasis>TAN-fn-strings-diff-standard</emphasis></para><para><code>tan:stamp-diff-with-text-data($diff-result as element(tan:diff)?) as item()*</code></para><programlisting>Input: any output from <code><link linkend="function-diff">tan:diff()</link></code> </programlisting><programlisting>Output: each <code>&lt;diff&gt;</code> child stamped with <code>@_len</code>, <code>@_pos-a</code>, <code>@_pos-b</code> indicating length 
and the starting positions for a and b </programlisting><programlisting>This function produces output analogous to <code>tan:stamp-tree-with-text-data()</code> </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link>, <link linkend="tan-function-group-tree_manipulation">tree manipulation</link>, <link linkend="tan-function-group-attributes">attributes</link></para><para>Used by template <code><link linkend="template-infuse-diff-and-collate-stats">ŧ tan:infuse-diff-and-collate-stats</link></code>, <code><link linkend="template-class-1-expansion-verbose-pass-1">ŧ tan:class-1-expansion-verbose-pass-1</link></code>, <code><link linkend="template-diff-or-collate-to-html-output-pass-1">ŧ diff-or-collate-to-html-output-pass-1</link></code>.</para><para>Used by function <code>tan:diff-a-map()</code>, <code><link linkend="function-get-diff-output-transpositions">tan:get-diff-output-transpositions()</link></code>, <code><link linkend="function-replace-diff">tan:replace-diff()</link></code>, <code><link linkend="function-chop-diff-output">tan:chop-diff-output()</link></code>, <code>tan:get-diff-output-slices()</code>.</para><para>Relies upon <code><link linkend="template-stamp-diff-with-text-data">ŧ tan:stamp-diff-with-text-data</link></code>.</para></section>
<section xml:id="function-string-length"><title><code>tan:string-length()</code></title><para><emphasis>TAN-fn-strings-standard</emphasis></para><para><code>tan:string-length($input as xs:string?) as xs:integer</code></para><programlisting>Input: any string </programlisting><programlisting>Output: the number of characters in the string, as defined by TAN (i.e., modifiers 
are counted with the preceding base character) </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link></para><para>Used by template <code><link linkend="template-split-diff-components-2">ŧ tan:split-diff-components-2</link></code>.</para><para>Used by function <code>tan:stamp-tree-with-text-data()</code>.</para><para>Relies upon <code><link linkend="function-chop-string">tan:chop-string</link></code>.</para></section>
<section xml:id="function-substring-after"><title><code>tan:substring-after()</code></title><para><emphasis>TAN-fn-strings-standard</emphasis></para><para><code>tan:substring-after($arg1 as xs:string?, $arg2 as xs:string?, $return-first-match as xs:boolean) as xs:string</code></para><programlisting>Input: two strings; a boolean </programlisting><programlisting>Output: if the last parameter is true: the substring of the value of <code>$arg1</code> that 
follows in the value of <code>$arg1</code> the first occurrence of the value of <code>$arg2</code> . if false: the last 
occurrence </programlisting><programlisting>This function provides extra flexibility not available in <code>fn:substring-before()</code> </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-substring-before"><title><code>tan:substring-before()</code></title><para><emphasis>TAN-fn-strings-standard</emphasis></para><para><code>tan:substring-before($arg1 as xs:string?, $arg2 as xs:string?, $return-first-match as xs:boolean) as xs:string</code></para><programlisting>Input: two strings; a boolean </programlisting><programlisting>Output: if the last parameter is true: the substring of the value of <code>$arg1</code> that 
precedes in the value of <code>$arg1</code> the first occurrence of the value <code>$arg2</code> . if false: the last 
occurrence </programlisting><programlisting>This function provides extra flexibility not available in <code>fn:substring-before()</code> </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-text-join"><title><code>tan:text-join()</code></title><para><emphasis>Option 1 (TAN-fn-strings-standard)</emphasis></para><para><code>tan:text-join($items as item()*) as xs:string?</code></para><programlisting>one-parameter version of the full function below </programlisting><para>Used by template <code><link linkend="template-text-join">ŧ tan:text-join</link></code>, <code><link linkend="template-merge-divs">ŧ tan:merge-divs</link></code>, <code><link linkend="template-class-1-expansion-verbose-pass-1">ŧ tan:class-1-expansion-verbose-pass-1</link></code>.</para><para>Used by function <code><link linkend="function-text-join">tan:text-join()</link></code>.</para><para>Relies upon <code><link linkend="function-text-join">tan:text-join</link></code>.</para><para><emphasis>Option 2 (TAN-fn-strings-standard)</emphasis></para><para><code>tan:text-join($items as item()*, $set-divs-on-new-line as xs:boolean) as xs:string?</code></para><programlisting>Input: any document fragment of a TAN class 1 body, whether raw or resolved </programlisting><programlisting>Output: a single string that joins and normalizes the leaf div text according to TAN 
rules </programlisting><programlisting>All special leaf-div-end characters will be stripped including the last </programlisting><programlisting>Do not apply this function to class-1 files that have been expanded, because 
normalization will have already occurred. </programlisting><programlisting>Do not apply this function to TEI elements within leaf divs. </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link>, <link linkend="tan-function-group-nodes">nodes</link></para><para>Used by template <code><link linkend="template-text-join">ŧ tan:text-join</link></code>, <code><link linkend="template-merge-divs">ŧ tan:merge-divs</link></code>, <code><link linkend="template-class-1-expansion-verbose-pass-1">ŧ tan:class-1-expansion-verbose-pass-1</link></code>.</para><para>Used by function <code><link linkend="function-text-join">tan:text-join()</link></code>.</para><para>Relies upon <code><link linkend="template-text-join">ŧ tan:text-join</link></code>.</para></section>
<section xml:id="function-title-case"><title><code>tan:title-case()</code></title><para><emphasis>TAN-fn-strings-extended</emphasis></para><para><code>tan:title-case($string-to-convert as xs:string*) as xs:string*</code></para><programlisting>Input: a sequence of strings </programlisting><programlisting>Output: each string set in title case, following the conventions of English (one of 
the only languages that bother with title-case) </programlisting><programlisting>According to Chicago rules of title casing, the first and last words are always 
capitalized, and interior words are capitalized unless they are a preposition or article </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="variable-english-articles">$tan:english-articles</link></code>, <code><link linkend="variable-english-prepositions">$tan:english-prepositions</link></code>, <code><link linkend="function-initial-upper-case">tan:initial-upper-case</link></code>, <code><link linkend="template-title-case">ŧ tan:title-case</link></code>.</para></section>
<section xml:id="function-tokenize-div"><title><code>tan:tokenize-div()</code></title><para><emphasis>TAN-fn-strings-standard</emphasis></para><para><code>tan:tokenize-div($input as item()*, $token-definitions as element(tan:token-definition)) as item()*</code></para><programlisting>Input: any items, a <code><link linkend="element-token-definition">&lt;token-definition&gt;</link></code> </programlisting><programlisting>Output: the items with <code><link linkend="element-div">&lt;div&gt;</link></code>s in tokenized form </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="template-tokenize-div">ŧ tan:tokenize-div</link></code>.</para></section>
<section xml:id="function-tokenize-text"><title><code>tan:tokenize-text()</code></title><para><emphasis>Option 1 (TAN-fn-strings-standard)</emphasis></para><para><code>tan:tokenize-text($text as xs:string*) as element()*</code></para><programlisting>one-parameter version of the function below </programlisting><para>Used by template <code><link linkend="template-dependency-adjustments-pass-2">ŧ tan:dependency-adjustments-pass-2</link></code>, <code><link linkend="template-mark-dependencies-for-validation">ŧ tan:mark-dependencies-for-validation</link></code>, <code><link linkend="template-tokenize-div">ŧ tan:tokenize-div</link></code>, <code><link linkend="template-mark-dependencies-pass-1">ŧ tan:mark-dependencies-pass-1</link></code>, <code><link linkend="template-dependency-expansion-normal">ŧ tan:dependency-expansion-normal</link></code>, <code><link linkend="template-dependency-expansion-verbose">ŧ tan:dependency-expansion-verbose</link></code>.</para><para>Used by function <code><link linkend="function-tokenize-text">tan:tokenize-text()</link></code>.</para><para>Relies upon <code><link linkend="variable-token-definition-default">$tan:token-definition-default</link></code>, <code><link linkend="function-tokenize-text">tan:tokenize-text</link></code>.</para><para><emphasis>Option 2 (TAN-fn-strings-standard)</emphasis></para><para><code>tan:tokenize-text($text as xs:string*, $token-definition as element(tan:token-definition)?, $count-toks as xs:boolean?) as element()*</code></para><programlisting>three-parameter version of the function below </programlisting><para>Used by template <code><link linkend="template-dependency-adjustments-pass-2">ŧ tan:dependency-adjustments-pass-2</link></code>, <code><link linkend="template-mark-dependencies-for-validation">ŧ tan:mark-dependencies-for-validation</link></code>, <code><link linkend="template-tokenize-div">ŧ tan:tokenize-div</link></code>, <code><link linkend="template-mark-dependencies-pass-1">ŧ tan:mark-dependencies-pass-1</link></code>, <code><link linkend="template-dependency-expansion-normal">ŧ tan:dependency-expansion-normal</link></code>, <code><link linkend="template-dependency-expansion-verbose">ŧ tan:dependency-expansion-verbose</link></code>.</para><para>Used by function <code><link linkend="function-tokenize-text">tan:tokenize-text()</link></code>.</para><para>Relies upon <code><link linkend="function-tokenize-text">tan:tokenize-text</link></code>.</para><para><emphasis>Option 3 (TAN-fn-strings-standard)</emphasis></para><para><code>tan:tokenize-text($text as xs:string*, $token-definition as element(tan:token-definition)?, $count-toks as xs:boolean?, $add-attr-q as xs:boolean?, $add-attr-pos as xs:boolean?) as element()*</code></para><programlisting>Input: any number of strings; a <code><link linkend="element-token-definition">&lt;token-definition&gt;</link></code>; a boolean indicating whether 
tokens should be counted and labeled. </programlisting><programlisting>Output: a <code>&lt;result&gt;</code> for each string, tokenized into <code><link linkend="element-tok">&lt;tok&gt;</link></code> and <code>&lt;non-tok&gt;</code>, 
respectively. If the counting option is turned on, the <code>&lt;result&gt;</code> contains <code>@tok-count</code> and 
<code>@non-tok-count</code>, and each <code><link linkend="element-tok">&lt;tok&gt;</link></code> and <code>&lt;non-tok&gt;</code> have an <code><link linkend="attribute-n">@n</link></code> indicating which <code><link linkend="element-tok">&lt;tok&gt;</link></code> group it belongs to. </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link>, <link linkend="tan-function-group-sequences">sequences</link></para><para>Used by template <code><link linkend="template-dependency-adjustments-pass-2">ŧ tan:dependency-adjustments-pass-2</link></code>, <code><link linkend="template-mark-dependencies-for-validation">ŧ tan:mark-dependencies-for-validation</link></code>, <code><link linkend="template-tokenize-div">ŧ tan:tokenize-div</link></code>, <code><link linkend="template-mark-dependencies-pass-1">ŧ tan:mark-dependencies-pass-1</link></code>, <code><link linkend="template-dependency-expansion-normal">ŧ tan:dependency-expansion-normal</link></code>, <code><link linkend="template-dependency-expansion-verbose">ŧ tan:dependency-expansion-verbose</link></code>.</para><para>Used by function <code><link linkend="function-tokenize-text">tan:tokenize-text()</link></code>.</para><para>Relies upon <code><link linkend="variable-token-definition-default">$tan:token-definition-default</link></code>, <code><link linkend="function-tokenize-text">tan:tokenize-text()</link></code>, <code><link linkend="template-add-tok-pos">ŧ tan:add-tok-pos</link></code>, <code><link linkend="template-first-stamp-shallow-copy">ŧ tan:first-stamp-shallow-copy</link></code>.</para></section>
<section xml:id="function-unique-char"><title><code>tan:unique-char()</code></title><para><emphasis>TAN-fn-strings-standard</emphasis></para><para><code>tan:unique-char($context-strings as xs:string*) as xs:string?</code></para><programlisting>Input: any sequence of strings </programlisting><programlisting>Output: a single character that is not to be found in those strings </programlisting><programlisting>This function, written to support <code><link linkend="function-collate-sequences">tan:collate-sequences()</link></code>, provides unique way 
to join any sequence strings in such a way that it can later be tokenized. </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
</section>
<section><title>Templates</title><section xml:id="template-regex-group-count"><title><code>Ŧ tan:regex-group-count</code></title><para><emphasis>TAN-fn-strings-extended</emphasis></para><programlisting>Input: perhaps a parameter specifying how many blank entries are permitted before 
stopping the iteration. </programlisting><programlisting>Output: the number of groups of regular expressions in the current context. </programlisting><programlisting>Most often in the TAN function library, a function is preferred over a named 
template. In this case, we have a named template, because the function severs the context of 
<code>regex-groups()</code> </programlisting><para>Related: <link linkend="tan-function-group-strings">strings</link>, <link linkend="tan-function-group-regular_expressions">regular expressions</link></para><para>Used by template <code><link linkend="template-batch-replace-advanced-pass-1">ŧ tan:batch-replace-advanced-pass-1</link></code>, <code><link linkend="template-batch-replace-advanced-pass-2">ŧ tan:batch-replace-advanced-pass-2</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
</section>
</section>
<section xml:id="vkft-time"><title>Time</title><section><title>Functions</title><section xml:id="function-get-doc-history"><title><code>tan:get-doc-history()</code></title><para><emphasis>TAN-fn-time</emphasis></para><para><code>tan:get-doc-history($TAN-doc as document-node()*) as element()*</code></para><programlisting>Input: any TAN document </programlisting><programlisting>Output: a sequence of elements with <code><link linkend="attribute-when">@when</link></code>, <code><link linkend="attribute-ed-when">@ed-when</link></code>, <code><link linkend="attribute-accessed-when">@accessed-when</link></code>, 
<code><link linkend="attribute-claim-when">@claim-when</link></code>, sorted from most recent to least; each element includes <code>@when-sort</code>, a decimal that 
represents the value of the most recent time-date stamp in that element </programlisting><para>Related: <link linkend="tan-function-group-versioning">versioning</link></para><para>Used by variable <code><link linkend="variable-doc-history">$tan:doc-history</link></code>.</para><para>Used by template <code><link linkend="template-check-referred-doc">ŧ tan:check-referred-doc</link></code>, <code><link linkend="template-core-expansion-normal">ŧ tan:core-expansion-normal</link></code>.</para><para>Used by function <code><link linkend="function-last-change-agent">tan:last-change-agent()</link></code>.</para><para>Relies upon <code><link linkend="template-get-doc-history">ŧ tan:get-doc-history</link></code>.</para></section>
</section>
</section>
<section xml:id="vkft-uris"><title>Uris</title><section><title>Functions</title><section xml:id="function-absolutize-hrefs"><title><code>tan:absolutize-hrefs()</code></title><para><emphasis>TAN-fn-uris-extended</emphasis></para><para><code>tan:absolutize-hrefs($items-to-resolve as item()*, $items-base-uri as xs:string) as item()*</code></para><programlisting>Input: any items that should have urls converted to absolute URIs; a string 
representing the base uri </programlisting><programlisting>Output: the items with each <code><link linkend="attribute-href">@href</link></code> (also in processing instructions) and html:*/src 
resolved against the input base uri </programlisting><para>Related: <link linkend="tan-function-group-uris">uris</link>, <link linkend="tan-function-group-filenames">filenames</link>, <link linkend="tan-function-group-tree_manipulation">tree manipulation</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="template-revise-hrefs">ŧ tan:revise-hrefs</link></code>.</para></section>
<section xml:id="function-base-uri"><title><code>tan:base-uri()</code></title><para><emphasis>TAN-fn-uris-standard</emphasis></para><para><code>tan:base-uri($any-node as node()?) as xs:anyURI</code></para><programlisting>Input: any node </programlisting><programlisting>Output: the base uri of the node's document </programlisting><programlisting>An explicit <code>@xml:base</code> has the highest priority over any native <code>base-uri()</code>. If the 
node is a fragment and has no declared or detected base uri, the <code>static-base-uri()</code> will be 
returned </programlisting><para>Related: <link linkend="tan-function-group-uris">uris</link></para><para>Used by template <code><link linkend="template-resolve-critical-dependencies-loop">ŧ tan:resolve-critical-dependencies-loop</link></code>, <code><link linkend="template-check-referred-doc">ŧ tan:check-referred-doc</link></code>, <code><link linkend="template-resolve-href">ŧ tan:resolve-href</link></code> tan:expand-standard-tan-voc, <code><link linkend="template-resolve-href">ŧ tan:resolve-href</link></code> tan:first-stamp-shallow-copy.</para><para>Used by function <code><link linkend="function-lm-data">tan:lm-data()</link></code>, <code><link linkend="function-resolve-href">tan:resolve-href()</link></code>, <code>tan:resolve-doc-loop()</code>, <code>tan:TAN-A-lm-hrefs()</code>, <code><link linkend="function-collection">tan:collection()</link></code>, <code><link linkend="function-catalog-uris">tan:catalog-uris()</link></code>, <code><link linkend="function-first-loc-available">tan:first-loc-available()</link></code>, <code><link linkend="function-attribute-vocabulary">tan:attribute-vocabulary()</link></code>, <code><link linkend="function-cfn">tan:cfn()</link></code>, <code><link linkend="function-cfne">tan:cfne()</link></code>, <code><link linkend="function-get-1st-doc">tan:get-1st-doc()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-catalog-uris"><title><code>tan:catalog-uris()</code></title><para><emphasis>TAN-fn-uris-standard</emphasis></para><para><code>tan:catalog-uris($input-node as node()?) as xs:string*</code></para><programlisting>Input: a node from an XML file </programlisting><programlisting>Output: URLs for locally available TAN catalog files, beginning with the immediate 
subdirectory and proceeding rootward </programlisting><para>Related: <link linkend="tan-function-group-uris">uris</link>, <link linkend="tan-function-group-filenames">filenames</link></para><para>Used by variable <code><link linkend="variable-doc-catalog-uris">$tan:doc-catalog-uris</link></code>.</para><para>Used by function <code><link linkend="function-catalogs">tan:catalogs()</link></code>.</para><para>Relies upon <code><link linkend="function-base-uri">tan:base-uri</link></code>.</para></section>
<section xml:id="function-catalogs"><title><code>tan:catalogs()</code></title><para><emphasis>TAN-fn-uris-standard</emphasis></para><para><code>tan:catalogs($input-node as node()?, $strip-bad-hrefs as xs:boolean) as document-node()*</code></para><programlisting>Input: a node from an XML file; a boolean indicating whether bad <code>@hrefs</code> should be 
stripped </programlisting><programlisting>Output: the TAN catalog documents available, beginning with the most local path and 
proceeding rootward </programlisting><para>Related: <link linkend="tan-function-group-uris">uris</link>, <link linkend="tan-function-group-filenames">filenames</link></para><para>Used by variable <code><link linkend="variable-doc-catalogs">$tan:doc-catalogs</link></code>.</para><para>Used by template <code><link linkend="template-core-expansion-verbose">ŧ tan:core-expansion-verbose</link></code>.</para><para>Used by function <code><link linkend="function-get-1st-doc">tan:get-1st-doc()</link></code>.</para><para>Relies upon <code><link linkend="function-catalog-uris">tan:catalog-uris</link></code>, <code><link linkend="template-cut-faulty-hrefs">ŧ tan:cut-faulty-hrefs</link></code>.</para></section>
<section xml:id="function-cfn"><title><code>tan:cfn()</code></title><para><emphasis>TAN-fn-uris-standard</emphasis></para><para><code>tan:cfn($item as item()*) as xs:string*</code></para><programlisting>Input: any items </programlisting><programlisting>Output: the Current File Name, without extension, of the host document node of each 
item, or of the input string if detected as a uri </programlisting><para>Related: <link linkend="tan-function-group-uris">uris</link>, <link linkend="tan-function-group-filenames">filenames</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-base-uri">tan:base-uri</link></code>, <code><link linkend="function-cfne">tan:cfne</link></code>.</para></section>
<section xml:id="function-cfne"><title><code>tan:cfne()</code></title><para><emphasis>TAN-fn-uris-standard</emphasis></para><para><code>tan:cfne($item as item()*) as xs:string*</code></para><programlisting>Input: any items </programlisting><programlisting>Output: the Current File Name, with Extension, of the host document node of each 
item, or of the input string if detected as a uri </programlisting><para>Related: <link linkend="tan-function-group-uris">uris</link>, <link linkend="tan-function-group-filenames">filenames</link></para><para>Used by variable <code><link linkend="variable-doc-filename">$tan:doc-filename</link></code>.</para><para>Used by function <code><link linkend="function-cfn">tan:cfn()</link></code>.</para><para>Relies upon <code><link linkend="function-base-uri">tan:base-uri</link></code>.</para></section>
<section xml:id="function-collection"><title><code>tan:collection()</code></title><para><emphasis>Option 1 (TAN-fn-uris-standard)</emphasis></para><para><code>tan:collection($catalog-docs as document-node()*) as document-node()*</code></para><programlisting>One-parameter version of the master one, below </programlisting><para>Used by template <code><link linkend="template-core-expansion-verbose">ŧ tan:core-expansion-verbose</link></code>.</para><para>Used by function <code><link linkend="function-collection">tan:collection()</link></code>.</para><para>Relies upon <code><link linkend="function-collection">tan:collection</link></code>.</para><para><emphasis>Option 2 (TAN-fn-uris-standard)</emphasis></para><para><code>tan:collection($catalog-docs as document-node()*, $root-names as xs:string*, $id-matches as xs:string?, $href-matches as xs:string?) as document-node()*</code></para><programlisting>Input: one or more catalog.tan.xml files; filtering parameters </programlisting><programlisting>Output: documents that are available </programlisting><para>Related: <link linkend="tan-function-group-uris">uris</link>, <link linkend="tan-function-group-filenames">filenames</link></para><para>Used by template <code><link linkend="template-core-expansion-verbose">ŧ tan:core-expansion-verbose</link></code>.</para><para>Used by function <code><link linkend="function-collection">tan:collection()</link></code>.</para><para>Relies upon <code><link linkend="function-base-uri">tan:base-uri</link></code>.</para></section>
<section xml:id="function-doc-available"><title><code>tan:doc-available()</code></title><para><emphasis>TAN-fn-uris-extended</emphasis></para><para><code>tan:doc-available($uri as xs:string?) as xs:boolean</code></para><programlisting>Input: a string </programlisting><programlisting>Output: true if an XML document is available at the URI, false otherwise </programlisting><programlisting>This is a surrogate function to fn:doc-available, and behaves exactly the same, but 
avoids the possibility of read conflicts, so a file can be overwritten. </programlisting><programlisting>An alternative to this is to make sure that when writing a secondary result document 
the last / is doubled; the string will not be recognized as a duplicate of what was read. </programlisting><para>Related: <link linkend="tan-function-group-files">files</link>, <link linkend="tan-function-group-uris">uris</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-get-uuid"><title><code>tan:get-uuid()</code></title><para><emphasis>Option 1 (TAN-fn-uris-extended)</emphasis></para><para><code>tan:get-uuid() </code></para><programlisting>zero-param version of the full one below </programlisting><para>Used by function <code><link linkend="function-get-uuid">tan:get-uuid()</link></code>.</para><para>Relies upon <code><link linkend="function-get-uuid">tan:get-uuid</link></code>.</para><para><emphasis>Option 2 (TAN-fn-uris-extended)</emphasis></para><para><code>tan:get-uuid($quantity as xs:integer) as xs:string*</code></para><programlisting>Input: a digit </programlisting><programlisting>Output: that digit's quantity of UUIDs </programlisting><programlisting>Code courtesy D. Novatchev, 
<link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://stackoverflow.com/questions/8126963/xslt-generate-uuid/64792196#64792196"><code>https://stackoverflow.com/questions/8126963/xslt-generate-uuid/64792196#64792196</code></link> 
</programlisting><para>Related: <link linkend="tan-function-group-uris">uris</link></para><para>Used by function <code><link linkend="function-get-uuid">tan:get-uuid()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-is-valid-uri"><title><code>tan:is-valid-uri()</code></title><para><emphasis>TAN-fn-uris-standard</emphasis></para><para><code>tan:is-valid-uri($uri-to-check as xs:string?) as xs:boolean?</code></para><programlisting>Input: a string </programlisting><programlisting>Output: a boolean indicating whether the string is syntactically a valid uri </programlisting><programlisting>This assumes not only absolute but relative uris will be checked, which means that a 
wide variety of characters could be fed in, but not ones disallowed in pathnames, and the 
string must not be zero length. </programlisting><para>Related: <link linkend="tan-function-group-uris">uris</link></para><para>Used by template <code><link linkend="template-first-stamp-shallow-copy">ŧ tan:first-stamp-shallow-copy</link></code>, <code><link linkend="template-resolve-critical-dependencies-loop">ŧ tan:resolve-critical-dependencies-loop</link></code>.</para><para>Used by function <code><link linkend="function-uri-relative-to">tan:uri-relative-to()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-parse-urls"><title><code>tan:parse-urls()</code></title><para><emphasis>TAN-fn-uris-extended</emphasis></para><para><code>tan:parse-urls($input-strings as xs:string*) as element()*</code></para><programlisting>Input: any sequence of strings </programlisting><programlisting>Output: one element per string, parsed into children <code>&lt;non-url&gt;</code> and <code>&lt;url&gt;</code> </programlisting><para>Related: <link linkend="tan-function-group-uris">uris</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="variable-url-regex">$tan:url-regex</link></code>.</para></section>
<section xml:id="function-relativize-hrefs"><title><code>tan:relativize-hrefs()</code></title><para><emphasis>TAN-fn-uris-extended</emphasis></para><para><code>tan:relativize-hrefs($input-items as item()*, $target-base-uri-resolved as xs:string) as item()*</code></para><programlisting>Input: any items; a resolved base uri (target) </programlisting><programlisting>Output: the items, with links in standard attributes such as <code><link linkend="attribute-href">@href</link></code> changed so as to be 
relative to the target base uri. </programlisting><programlisting>This function is intended to serve output that is going to a particular destination, 
and that needs to have links to nearby resources revised to their relative form. </programlisting><para>Related: <link linkend="tan-function-group-uris">uris</link>, <link linkend="tan-function-group-filenames">filenames</link>, <link linkend="tan-function-group-tree_manipulation">tree manipulation</link></para><para>No variables, keys, functions, or named templates depend upon this xsl:function.</para><para>Relies upon <code><link linkend="function-uri-is-relative">tan:uri-is-relative</link></code>, <code><link linkend="template-relativize-hrefs">ŧ tan:relativize-hrefs</link></code>.</para></section>
<section xml:id="function-revise-hrefs"><title><code>tan:revise-hrefs()</code></title><para><emphasis>TAN-fn-uris-extended</emphasis></para><para><code>tan:revise-hrefs($items-to-resolve as item()?, $items-original-url as xs:string, $items-destination-url as xs:string) as item()*</code></para><programlisting>Input: an item that should have urls resolved; the original url of the item; the 
target url (the item's destination) </programlisting><programlisting>Output: the item with each <code><link linkend="attribute-href">@href</link></code> (including those in processing instructions) and 
html:*/<code><link linkend="attribute-src">@src</link></code> resolved </programlisting><para>Related: <link linkend="tan-function-group-uris">uris</link>, <link linkend="tan-function-group-filenames">filenames</link>, <link linkend="tan-function-group-tree_manipulation">tree manipulation</link></para><para>Used by function <code><link linkend="function-revise-hrefs">tan:revise-hrefs()</link></code>.</para><para>Relies upon <code><link linkend="function-revise-hrefs">tan:revise-hrefs()</link></code>, <code><link linkend="template-revise-hrefs">ŧ tan:revise-hrefs</link></code>.</para></section>
<section xml:id="function-uri-collection-from-pattern"><title><code>tan:uri-collection-from-pattern()</code></title><para><emphasis>TAN-fn-uris-extended</emphasis></para><para><code>tan:uri-collection-from-pattern($resolved-patterned-uri as xs:string?) as xs:anyURI*</code></para><programlisting>Input: a string representing a resolved uri, with patterns </programlisting><programlisting>Output: a uri collection based on the string as an input pattern </programlisting><programlisting>This function was written to support glob-like patterns for files. </programlisting><para>Related: <link linkend="tan-function-group-uris">uris</link></para><para>Used by function <code><link linkend="function-uri-collection-from-pattern">tan:uri-collection-from-pattern()</link></code>.</para><para>Relies upon <code><link linkend="function-glob-to-regex">tan:glob-to-regex</link></code>, <code><link linkend="function-uri-collection-from-pattern">tan:uri-collection-from-pattern()</link></code>.</para></section>
<section xml:id="function-uri-directory"><title><code>tan:uri-directory()</code></title><para><emphasis>TAN-fn-uris-standard</emphasis></para><para><code>tan:uri-directory($uris as xs:string*) as xs:string*</code></para><programlisting>Input: any URIs, as strings </programlisting><programlisting>Output: the file path </programlisting><programlisting>NB, this function does not assume any URIs have been resolved; its only action is 
syntactic, ensuring that each URI specifies a directory path, i.e., has a trailing slash. </programlisting><para>Related: <link linkend="tan-function-group-uris">uris</link>, <link linkend="tan-function-group-filenames">filenames</link></para><para>Used by variable <code><link linkend="variable-doc-parent-directory">$tan:doc-parent-directory</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-uri-is-relative"><title><code>tan:uri-is-relative()</code></title><para><emphasis>TAN-fn-uris-standard</emphasis></para><para><code>tan:uri-is-relative($uri-to-test as xs:string?) as xs:boolean?</code></para><programlisting>Input: a string representing a URI </programlisting><programlisting>Output: a boolean indicating whether it is relative </programlisting><para>Related: <link linkend="tan-function-group-uris">uris</link></para><para>Used by function <code><link linkend="function-relativize-hrefs">tan:relativize-hrefs()</link></code>.</para><para>Relies upon <code><link linkend="function-uri-is-resolved">tan:uri-is-resolved</link></code>.</para></section>
<section xml:id="function-uri-is-resolved"><title><code>tan:uri-is-resolved()</code></title><para><emphasis>TAN-fn-uris-standard</emphasis></para><para><code>tan:uri-is-resolved($uri-to-test as xs:string?) as xs:boolean?</code></para><programlisting>Input: a string representing a URI </programlisting><programlisting>Output: a boolean indicating whether it is resolved </programlisting><para>Related: <link linkend="tan-function-group-uris">uris</link></para><para>Used by template <code><link linkend="template-relativize-hrefs">ŧ tan:relativize-hrefs</link></code>.</para><para>Used by function <code><link linkend="function-uri-is-relative">tan:uri-is-relative()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="function-uri-relative-to"><title><code>tan:uri-relative-to()</code></title><para><emphasis>Option 1 (TAN-fn-uris-standard)</emphasis></para><para><code>tan:uri-relative-to($uri-to-revise as xs:string?, $uri-to-revise-against as xs:string?) as xs:string?</code></para><programlisting>2-parameter version of the one below </programlisting><para>Used by template <code><link linkend="template-revise-hrefs">ŧ tan:revise-hrefs</link></code>, <code><link linkend="template-core-expansion-terse-attributes-to-elements">ŧ tan:core-expansion-terse-attributes-to-elements</link></code>, <code><link linkend="template-relativize-hrefs">ŧ tan:relativize-hrefs</link></code>.</para><para>Used by function <code><link linkend="function-uri-relative-to">tan:uri-relative-to()</link></code>, <code><link linkend="function-update-TAN-change-log">tan:update-TAN-change-log()</link></code>, <code><link linkend="function-get-1st-doc">tan:get-1st-doc()</link></code>.</para><para>Relies upon <code><link linkend="function-uri-relative-to">tan:uri-relative-to</link></code>.</para><para><emphasis>Option 2 (TAN-fn-uris-standard)</emphasis></para><para><code>tan:uri-relative-to($uri-to-revise as xs:string?, $uri-to-revise-against as xs:string?, $base-uri as xs:string?) as xs:string?</code></para><programlisting>Input: two strings representing URIs; a third representing the base against which 
the first two should be resolved </programlisting><programlisting>Output: the first string in a form relative to the second string </programlisting><programlisting>This function looks for common paths within two absolute URIs and tries to convert 
the first URI as a relative path </programlisting><para>Related: <link linkend="tan-function-group-uris">uris</link>, <link linkend="tan-function-group-filenames">filenames</link></para><para>Used by template <code><link linkend="template-revise-hrefs">ŧ tan:revise-hrefs</link></code>, <code><link linkend="template-core-expansion-terse-attributes-to-elements">ŧ tan:core-expansion-terse-attributes-to-elements</link></code>, <code><link linkend="template-relativize-hrefs">ŧ tan:relativize-hrefs</link></code>.</para><para>Used by function <code><link linkend="function-uri-relative-to">tan:uri-relative-to()</link></code>, <code><link linkend="function-update-TAN-change-log">tan:update-TAN-change-log()</link></code>, <code><link linkend="function-get-1st-doc">tan:get-1st-doc()</link></code>.</para><para>Relies upon <code><link linkend="function-is-valid-uri">tan:is-valid-uri</link></code>, <code><link linkend="function-uri-relative-to">tan:uri-relative-to()</link></code>.</para></section>
</section>
</section>
<section xml:id="vkft-vocabulary"><title>Vocabulary</title><section><title>Functions</title><section xml:id="function-attribute-vocabulary"><title><code>tan:attribute-vocabulary()</code></title><para><emphasis>TAN-fn-vocabulary</emphasis></para><para><code>tan:attribute-vocabulary($attributes as attribute()*) as element()*</code></para><programlisting>Input: attributes, assumed to be still tethered to their resolved document context </programlisting><programlisting>Output: the vocabulary items for that element's attributes (<code><link linkend="attribute-which">@which</link></code>, etc.) </programlisting><programlisting>See full <code><link linkend="function-vocabulary">tan:vocabulary()</link></code> function below </programlisting><para>Related: <link linkend="tan-function-group-vocabulary">vocabulary</link>, <link linkend="tan-function-group-attributes">attributes</link></para><para>Used by template <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>.</para><para>Used by function <code><link linkend="function-has-vocab">tan:has-vocab()</link></code>, <code><link linkend="function-attribute-vocabulary">tan:attribute-vocabulary()</link></code>, <code><link linkend="function-element-vocabulary">tan:element-vocabulary()</link></code>.</para><para>Relies upon <code><link linkend="function-attribute-vocabulary">tan:attribute-vocabulary()</link></code>, <code><link linkend="function-base-uri">tan:base-uri</link></code>, <code><link linkend="function-distinct-items">tan:distinct-items</link></code>, <code><link linkend="function-normalize-name">tan:normalize-name</link></code>, <code><link linkend="function-shallow-copy">tan:shallow-copy</link></code>, <code><link linkend="function-vocabulary">tan:vocabulary</link></code>, <code><link linkend="template-remove-inclusions">ŧ tan:remove-inclusions</link></code>.</para></section>
<section xml:id="function-element-vocabulary"><title><code>tan:element-vocabulary()</code></title><para><emphasis>TAN-fn-vocabulary</emphasis></para><para><code>tan:element-vocabulary($element as element()*) as element()*</code></para><programlisting>Input: elements, assumed to be tethered to their resolved document context </programlisting><programlisting>Output: the vocabulary items for that element's attributes (<code><link linkend="attribute-which">@which</link></code>, etc.) </programlisting><programlisting>See full <code><link linkend="function-vocabulary">tan:vocabulary()</link></code> function below </programlisting><para>Related: <link linkend="tan-function-group-vocabulary">vocabulary</link>, <link linkend="tan-function-group-nodes">nodes</link></para><para>Used by template <code><link linkend="template-get-and-resolve-dependency">ŧ tan:get-and-resolve-dependency</link></code>, <code><link linkend="template-apply-inclusions-and-adjust-vocabulary">ŧ tan:apply-inclusions-and-adjust-vocabulary</link></code>, <code><link linkend="template-check-referred-doc">ŧ tan:check-referred-doc</link></code>, <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>.</para><para>Used by function <code><link linkend="function-get-1st-doc">tan:get-1st-doc()</link></code>.</para><para>Relies upon <code><link linkend="function-attribute-vocabulary">tan:attribute-vocabulary</link></code>.</para></section>
<section xml:id="function-has-vocab"><title><code>tan:has-vocab()</code></title><para><emphasis>TAN-fn-vocabulary</emphasis></para><para><code>tan:has-vocab($attr-to-check as attribute()?, $ids-and-names as xs:string*) as xs:boolean</code></para><programlisting>Input: an attribute; a string </programlisting><programlisting>Output: true if at least one value of the attribute points to vocabulary items that 
have an <code>&lt;id&gt;</code> or <code><link linkend="element-name">&lt;name&gt;</link></code> that is identical to the 2nd parameter. </programlisting><programlisting>The local vocabulary will be checked. If no vocabulary is returned, a check will be 
made based upon the standard TAN vocabulary </programlisting><programlisting>This was written to make XPath predicate expressions easier. </programlisting><para>Related: <link linkend="tan-function-group-vocabulary">vocabulary</link></para><para>Used by function <code><link linkend="function-update-TAN-change-log">tan:update-TAN-change-log()</link></code>.</para><para>Relies upon <code><link linkend="variable-TAN-vocabularies">$tan:TAN-vocabularies</link></code>, <code><link linkend="function-attribute-vocabulary">tan:attribute-vocabulary</link></code>, <code><link linkend="function-normalize-name">tan:normalize-name</link></code>, <code><link linkend="function-vocabulary">tan:vocabulary</link></code>.</para></section>
<section xml:id="function-vocabulary"><title><code>tan:vocabulary()</code></title><para><emphasis>Option 1 (TAN-fn-vocabulary)</emphasis></para><para><code>tan:vocabulary($target-element-names as xs:string*, $target-values as xs:string*) as element()*</code></para><programlisting>2-param version of fuller one below </programlisting><para>Used by variable <code><link linkend="variable-self-expanded-vocabulary">$tan:self-expanded-vocabulary</link></code>, <code><link linkend="variable-doc-vocabulary">$tan:doc-vocabulary</link></code>.</para><para>Used by template <code><link linkend="template-tan-a-lm-expansion-terse">ŧ tan:tan-a-lm-expansion-terse</link></code>, <code><link linkend="template-core-expansion-terse-attributes">ŧ tan:core-expansion-terse-attributes</link></code>, <code><link linkend="template-mark-dependencies-pass-1">ŧ tan:mark-dependencies-pass-1</link></code>, <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>.</para><para>Used by function <code><link linkend="function-vocabulary">tan:vocabulary()</link></code>, <code><link linkend="function-update-TAN-change-log">tan:update-TAN-change-log()</link></code>, <code><link linkend="function-has-vocab">tan:has-vocab()</link></code>, <code><link linkend="function-morphological-code-conversion-maps">tan:morphological-code-conversion-maps()</link></code>, <code><link linkend="function-attribute-vocabulary">tan:attribute-vocabulary()</link></code>, <code><link linkend="function-last-change-agent">tan:last-change-agent()</link></code>.</para><para>Relies upon <code><link linkend="variable-doc-vocabulary">$tan:doc-vocabulary</link></code>, <code><link linkend="function-vocabulary">tan:vocabulary</link></code>.</para><para><emphasis>Option 2 (TAN-fn-vocabulary)</emphasis></para><para><code>tan:vocabulary($target-element-names as xs:string*, $target-values as xs:string*, $resolved-vocabulary-ancestors as element()*) as element()*</code></para><programlisting>Input: two sequences of zero or more strings; a sequence of elements representing 
the ancestor of vocabulary in a resolved TAN file </programlisting><programlisting>Output: the vocabulary items for the particular elements whose names match the 
first sequence and whose id, alias, or name values match the second sequence, found in 
descendants of the elements provided by the third sequence </programlisting><programlisting>If either of the first two sequences are empty, or have an *, it is assumed that all 
possible values are sought. Therefore if the first two parameters are empty, the entire 
vocabulary will be returned </programlisting><programlisting>The second parameter is assumed to have one value per item in the sequence. This is 
mandatory because it is designed to take two different types of values: <code><link linkend="attribute-which">@which</link></code> (which is a 
single value and permits spaces) and other attributes (can be multiple values, 
space-delimited) </programlisting><programlisting>If you approach this function with an attribute that points to elements, and you must 
first to retrieve that attribute's elements, you should run 
<code>tan:target-element-names()</code> beforehand to generate a list of element names that should be targeted </programlisting><programlisting>It is assumed that the elements are the result of a fully resolved TAN file. </programlisting><programlisting>If a value matches id or alias, no matches on name will be sought (locally redefined 
ids override name values) </programlisting><programlisting>This function does not mark apparant errors, e.g., vocabulary items missing, or 
more than one for a single value </programlisting><programlisting>If you are trying to work with vocabulary from an included document, the 
<code>$resolved-vocabulary-ancestors</code> should point exclusively to content (not self) of the appropriate resolved 
tan:include </programlisting><para>Related: <link linkend="tan-function-group-vocabulary">vocabulary</link></para><para>Used by variable <code><link linkend="variable-self-expanded-vocabulary">$tan:self-expanded-vocabulary</link></code>, <code><link linkend="variable-doc-vocabulary">$tan:doc-vocabulary</link></code>.</para><para>Used by template <code><link linkend="template-tan-a-lm-expansion-terse">ŧ tan:tan-a-lm-expansion-terse</link></code>, <code><link linkend="template-core-expansion-terse-attributes">ŧ tan:core-expansion-terse-attributes</link></code>, <code><link linkend="template-mark-dependencies-pass-1">ŧ tan:mark-dependencies-pass-1</link></code>, <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>.</para><para>Used by function <code><link linkend="function-vocabulary">tan:vocabulary()</link></code>, <code><link linkend="function-update-TAN-change-log">tan:update-TAN-change-log()</link></code>, <code><link linkend="function-has-vocab">tan:has-vocab()</link></code>, <code><link linkend="function-morphological-code-conversion-maps">tan:morphological-code-conversion-maps()</link></code>, <code><link linkend="function-attribute-vocabulary">tan:attribute-vocabulary()</link></code>, <code><link linkend="function-last-change-agent">tan:last-change-agent()</link></code>.</para><para>Relies upon <code><link linkend="function-distinct-items">tan:distinct-items</link></code>, <code><link linkend="function-normalize-name">tan:normalize-name</link></code>, <code><link linkend="function-vocabulary">tan:vocabulary()</link></code>, <code><link linkend="template-vocabulary-all-vals">ŧ tan:vocabulary-all-vals</link></code>, <code><link linkend="template-vocabulary-by-id">ŧ tan:vocabulary-by-id</link></code>, <code><link linkend="template-vocabulary-by-name">ŧ tan:vocabulary-by-name</link></code>.</para></section>
</section>
</section>
<section xml:id="vkft-diagnostics"><title>Diagnostics</title><section><title>Variables</title><section xml:id="variable-all-functions"><title><code>$tan:all-functions</code></title><para><emphasis>TAN-fn-function-diagnostics</emphasis></para><para>Definition: <code>          for $i in <link linkend="variable-function-collection">$tan:function-collection</link>/collection/doc/<link linkend="attribute-href">@href</link>,             $j in resolve-uri($i, <link linkend="variable-function-collection-base-uri">$tan:function-collection-base-uri</link>)          return             if (doc-available($j)) then                doc($j)             else                ()</code></para><para>Used by function <code>tan:errors-checked-where()</code>, <code>tan:variables-checked-where()</code>.</para><para>Relies upon <code><link linkend="variable-function-collection">$tan:function-collection</link></code>, <code><link linkend="variable-function-collection-base-uri">$tan:function-collection-base-uri</link></code>.</para></section>
<section xml:id="variable-function-collection"><title><code>$tan:function-collection</code></title><para><emphasis>TAN-fn-function-diagnostics</emphasis></para><para>Definition: <code>doc('../collection.xml')</code></para><para>Used by variable <code><link linkend="variable-function-collection-base-uri">$tan:function-collection-base-uri</link></code>, <code><link linkend="variable-all-functions">$tan:all-functions</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-function-collection-base-uri"><title><code>$tan:function-collection-base-uri</code></title><para><emphasis>TAN-fn-function-diagnostics</emphasis></para><para>Definition: <code>base-uri(<link linkend="variable-function-collection">$tan:function-collection</link>)</code></para><para>Used by variable <code><link linkend="variable-all-functions">$tan:all-functions</link></code>.</para><para>Relies upon <code><link linkend="variable-function-collection">$tan:function-collection</link></code>.</para></section>
<section xml:id="variable-orig-self-validated"><title><code>$tan:orig-self-validated</code></title><para><emphasis>TAN-fn-nodes-diagnostics</emphasis></para><para>This variable has a complex definition. See
                                                   stylesheet for definiton.</para><para>No variables, keys, functions, or named templates depend upon this xsl:variable.</para><para>Relies upon <code><link linkend="template-imitate-validation">ŧ tan:imitate-validation</link></code>.</para></section>
<section xml:id="variable-rng-collection"><title><code>$tan:rng-collection</code></title><para><emphasis>TAN-fn-schema-diagnostics</emphasis></para><para>Definition: <code><link linkend="variable-schema-collection">$tan:schema-collection</link>[rng:*]</code></para><para>Used by variable <code><link linkend="variable-rng-collection-without-TEI">$tan:rng-collection-without-TEI</link></code>.</para><para>Used by function <code>tan:get-parent-elements()</code>.</para><para>Relies upon <code><link linkend="variable-schema-collection">$tan:schema-collection</link></code>.</para></section>
<section xml:id="variable-rng-collection-without-TEI"><title><code>$tan:rng-collection-without-TEI</code></title><para><emphasis>TAN-fn-schema-diagnostics</emphasis></para><para>Definition: <code><link linkend="variable-rng-collection">$tan:rng-collection</link>[not(matches(base-uri(.), 'TAN-TEI'))]</code></para><para>Used by function <code>tan:get-parent-elements()</code>.</para><para>Relies upon <code><link linkend="variable-rng-collection">$tan:rng-collection</link></code>.</para></section>
<section xml:id="variable-schema-collection"><title><code>$tan:schema-collection</code></title><para><emphasis>TAN-fn-schema-diagnostics</emphasis></para><para>Definition: <code>             for $i in <link linkend="variable-schema-uri-collection">$tan:schema-uri-collection</link>             return                 if (doc-available($i)) then                     doc($i)                 else                     ()</code></para><para>Used by variable <code><link linkend="variable-rng-collection">$tan:rng-collection</link></code>.</para><para>Relies upon <code><link linkend="variable-schema-uri-collection">$tan:schema-uri-collection</link></code>.</para></section>
<section xml:id="variable-schema-uri-collection"><title><code>$tan:schema-uri-collection</code></title><para><emphasis>TAN-fn-schema-diagnostics</emphasis></para><para>Definition: <code>uri-collection('../../schemas'), uri-collection('../../schemas/incl')</code></para><para>Used by variable <code><link linkend="variable-schema-collection">$tan:schema-collection</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
</section>
</section>
<section xml:id="vkft-errors"><title>Errors</title><section><title>Variables</title><section xml:id="variable-errors"><title><code>$tan:errors</code></title><para><emphasis>TAN-core-errors</emphasis></para><para>Definition: <code>doc('TAN-errors.xml')</code></para><para>Used by variable <code><link linkend="variable-errors-to-squelch">$tan:errors-to-squelch</link></code>.</para><para>Used by template <code><link linkend="template-imitate-validation">ŧ tan:imitate-validation</link></code>, <code><link linkend="template-element-to-error">ŧ tan:element-to-error</link></code>.</para><para>Used by function <code>tan:error()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
<section xml:id="variable-errors-to-squelch"><title><code>$tan:errors-to-squelch</code></title><para><emphasis>TAN-core-errors</emphasis></para><para>Definition: <code><link linkend="variable-errors">$tan:errors</link>/tan:errors/tan:squelch[@phase = $tan:default-validation-phase]/tan:error-id</code></para><para>Used by template <code><link linkend="template-imitate-validation">ŧ tan:imitate-validation</link></code>.</para><para>Relies upon <code><link linkend="variable-errors">$tan:errors</link></code>.</para></section>
<section xml:id="variable-help-trigger-regex"><title><code>$tan:help-trigger-regex</code></title><para><emphasis>TAN-core-errors</emphasis></para><para>Definition: <code>tan:escape($tan:help-trigger)</code></para><para>Used by template <code><link linkend="template-core-expansion-terse-attributes">ŧ tan:core-expansion-terse-attributes</link></code>.</para><para>Used by function <code><link linkend="function-normalize-text">tan:normalize-text()</link></code>, <code>tan:help-extracted()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section>
</section>
</section>
</section><section xml:id="vkft-template"><title>Templates (by mode)</title><para>Templates based on modes are frequently found in multiple files and
                           directories, so they are collated here separately, one entry per
                           mode.</para><section xml:id="template-all"><title><code>ŧ #all</code></title><bridgehead><code>TAN-core-errors.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:error/tan:fix | tan:help/tan:fix |        tan:warning/tan:fix | tan:fatal/tan:fix | tan:info/tan:fix' priority='-999' mode='#all' /&gt;</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:template.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-adjust-diff-infusion"><title><code>ŧ adjust-diff-infusion</code></title><bridgehead><code>TAN-fn-html-diff-and-collate.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:_text' mode='adjust-diff-infusion' /&gt;</code></para><para><code>&lt;xsl:template match='tan:c | tan:u' mode='adjust-diff-infusion' /&gt;</code></para><para><code>&lt;xsl:template match='tan:b' mode='adjust-diff-infusion' /&gt;</code></para><para><code>&lt;xsl:template match='tan:wit' mode='adjust-diff-infusion' /&gt;</code></para><para>Used by template <code><link linkend="template-infuse-primary-file-with-diff-results">ŧ infuse-primary-file-with-diff-results</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-diff-or-collate-to-html-output-pass-1"><title><code>ŧ diff-or-collate-to-html-output-pass-1</code></title><bridgehead><code>TAN-fn-html-diff-and-collate.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:stats' mode='diff-or-collate-to-html-output-pass-1' /&gt;</code></para><para><code>&lt;xsl:template match='tan:stats/tan:witness | tan:stats/tan:collation | tan:stats/tan:diff' mode='diff-or-collate-to-html-output-pass-1' /&gt;</code></para><para><code>&lt;xsl:template match='tan:stats/tan:witness/* | tan:stats/tan:collation/* | tan:stats/tan:diff/*' mode='diff-or-collate-to-html-output-pass-1' /&gt;</code></para><para><code>&lt;xsl:template match='tan:note' mode='diff-or-collate-to-html-output-pass-1' priority='1' /&gt;</code></para><para><code>&lt;xsl:template match='tan:venns' priority='1' mode='diff-or-collate-to-html-output-pass-1' /&gt;</code></para><para><code>&lt;xsl:template match='tan:venns/tan:venn' priority='1' mode='diff-or-collate-to-html-output-pass-1' /&gt;</code></para><para><code>&lt;xsl:template match='tan:venn/tan:part' mode='diff-or-collate-to-html-output-pass-1' /&gt;</code></para><para><code>&lt;xsl:template match='tan:diff | tan:collation' mode='diff-or-collate-to-html-output-pass-1' /&gt;</code></para><para><code>&lt;xsl:template match='tan:witness' mode='diff-or-collate-to-html-output-pass-1' /&gt;</code></para><para>Used by function <code><link linkend="function-diff-or-collate-to-html">tan:diff-or-collate-to-html()</link></code>.</para><para>Relies upon <code><link linkend="function-shallow-copy">tan:shallow-copy</link></code>, <code><link linkend="function-stamp-diff-with-text-data">tan:stamp-diff-with-text-data</link></code>, <code><link linkend="function-trim-long-tree">tan:trim-long-tree</link></code>, <code><link linkend="template-infuse-primary-file-with-diff-results">ŧ infuse-primary-file-with-diff-results</link></code>.</para></section><section xml:id="template-infuse-primary-file-with-diff-results"><title><code>ŧ infuse-primary-file-with-diff-results</code></title><bridgehead><code>TAN-fn-html-diff-and-collate.xsl </code></bridgehead><para><code>&lt;xsl:template match='comment() | processing-instruction()' mode='infuse-primary-file-with-diff-results' /&gt;</code></para><para><code>&lt;xsl:template match='tan:unparsed-text | w:document' mode='infuse-primary-file-with-diff-results' /&gt;</code></para><para><code>&lt;xsl:template match='*[@q or @id]' mode='infuse-primary-file-with-diff-results' /&gt;</code></para><para><code>&lt;xsl:template match='             @q | tei:*/@part | tei:*/@org | tei:*/@sample |             /tei:TEI/@* | tan:TAN-T/@*' mode='infuse-primary-file-with-diff-results' /&gt;</code></para><para>Used by template <code><link linkend="template-diff-or-collate-to-html-output-pass-1">ŧ diff-or-collate-to-html-output-pass-1</link></code>.</para><para>Relies upon <code><link linkend="template-adjust-diff-infusion">ŧ adjust-diff-infusion</link></code>.</para></section><section xml:id="template-add-category-position"><title><code>ŧ tan:add-category-position</code></title><bridgehead><code>TAN-fn-language-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:feature | tan:item[tan:affects-element = 'feature']' mode='tan:add-category-position' /&gt;</code></para><para>Used by function <code><link linkend="function-morphological-code-conversion-maps">tan:morphological-code-conversion-maps()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-add-code-test-toks"><title><code>ŧ tan:add-code-test-toks</code></title><bridgehead><code>TAN-fn-language-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='*:match | *:non-match' mode='tan:add-code-test-toks' /&gt;</code></para><para><code>&lt;xsl:template match='*:match/text()' mode='tan:add-code-test-toks' /&gt;</code></para><para>Used by template <code><link linkend="template-convert-morphological-codes">ŧ tan:convert-morphological-codes</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-add-collation-pos-offset"><title><code>ŧ tan:add-collation-pos-offset</code></title><bridgehead><code>TAN-fn-strings-collate-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:wit' mode='tan:add-collation-pos-offset' /&gt;</code></para><para>Used by template <code><link linkend="template-clean-up-collation-pass-1">ŧ tan:clean-up-collation-pass-1</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-add-tok-pos"><title><code>ŧ tan:add-tok-pos</code></title><bridgehead><code>TAN-fn-strings-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:tok' mode='tan:add-tok-pos' /&gt;</code></para><para>Used by function <code><link linkend="function-tokenize-text">tan:tokenize-text()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-adjust-horizontal-search"><title><code>ŧ tan:adjust-horizontal-search</code></title><bridgehead><code>TAN-fn-strings-diff-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:result' mode='tan:adjust-horizontal-search' /&gt;</code></para><para><code>&lt;xsl:template match='tan:common' mode='tan:adjust-horizontal-search' /&gt;</code></para><para><code>&lt;xsl:template match='tan:check-start' mode='tan:adjust-horizontal-search' /&gt;</code></para><para><code>&lt;xsl:template match='tan:check-end' mode='tan:adjust-horizontal-search' /&gt;</code></para><para><code>&lt;xsl:template match='tan:check-start-and-end' mode='tan:adjust-horizontal-search' /&gt;</code></para><para><code>&lt;xsl:template match='tan:a | tan:b' mode='tan:adjust-horizontal-search' /&gt;</code></para><para>Used by function <code>tan:diff-loop()</code>.</para><para>Relies upon <code><link linkend="function-common-end-string">tan:common-end-string()</link></code>, <code><link linkend="function-common-start-string">tan:common-start-string</link></code>, <code><link linkend="function-ellipses">tan:ellipses</link></code>.</para></section><section xml:id="template-apply-inclusions-and-adjust-vocabulary"><title><code>ŧ tan:apply-inclusions-and-adjust-vocabulary</code></title><bridgehead><code>TAN-fn-resolve-files.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:inclusion/*[tan:head]' mode='tan:apply-inclusions-and-adjust-vocabulary' /&gt;</code></para><para><code>&lt;xsl:template match='*[@include]' mode='tan:apply-inclusions-and-adjust-vocabulary' /&gt;</code></para><para><code>&lt;xsl:template match='tan:vocabulary/tan:TAN-voc' mode='tan:apply-inclusions-and-adjust-vocabulary' /&gt;</code></para><para><code>&lt;xsl:template match='tan:vocabulary/tan:TAN-voc/tan:item | tan:vocabulary/tan:TAN-voc/tan:verb' priority='1' mode='tan:apply-inclusions-and-adjust-vocabulary' /&gt;</code></para><para><code>&lt;xsl:template match='tan:head/tan:TAN-voc' mode='tan:apply-inclusions-and-adjust-vocabulary' /&gt;</code></para><para>Used by function <code>tan:resolve-doc-loop()</code>.</para><para>Relies upon <code><link linkend="function-copy-of-except">tan:copy-of-except</link></code>, <code><link linkend="function-element-vocabulary">tan:element-vocabulary</link></code>, <code><link linkend="template-prefix-attr-include">ŧ tan:prefix-attr-include</link></code>.</para></section><section xml:id="template-archive-to-plain-text"><title><code>ŧ tan:archive-to-plain-text</code></title><bridgehead><code>TAN-fn-docx.xsl </code></bridgehead><para><code>&lt;xsl:template match='w:p' mode='tan:archive-to-plain-text' /&gt;</code></para><para><code>&lt;xsl:template match='ssh:c[not(@t)]' mode='tan:archive-to-plain-text' /&gt;</code></para><para><code>&lt;xsl:template match='w:tab' mode='tan:archive-to-plain-text' /&gt;</code></para><para><code>&lt;xsl:template match='w:br' mode='tan:archive-to-plain-text' /&gt;</code></para><para><code>&lt;xsl:template match='w:noBreakHyphen' mode='tan:archive-to-plain-text' /&gt;</code></para><para><code>&lt;xsl:template match='w:softHyphen' mode='tan:archive-to-plain-text' /&gt;</code></para><para><code>&lt;xsl:template match='w:instrText | prop:Properties | cp:coreProperties | w:pPr' mode='tan:archive-to-plain-text' /&gt;</code></para><para>Used by function <code><link linkend="function-docx-to-text">tan:docx-to-text()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-array-to-map"><title><code>ŧ tan:array-to-map</code></title><bridgehead><code>TAN-fn-arrays-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='.[. instance of array(*)]' mode='tan:array-to-map' /&gt;</code></para><bridgehead><code>TAN-fn-maps-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='.[. instance of map(*)]' priority='-1' mode='tan:shallow-copy tan:map-put tan:array-to-map' /&gt;</code></para><para>Used by function <code><link linkend="function-array-to-map">tan:array-to-map()</link></code>.</para><para>Relies upon <code><link linkend="function-duplicate-items">tan:duplicate-items</link></code>, <code><link linkend="function-item-type">tan:item-type</link></code>.</para></section><section xml:id="template-attributes-not-in-inclusions"><title><code>ŧ tan:attributes-not-in-inclusions</code></title><bridgehead><code>TAN-fn-expand-files.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:inclusion | *[@include]' mode='tan:attributes-not-in-inclusions' /&gt;</code></para><para><code>&lt;xsl:template match='@xml:id | @id' mode='tan:attributes-not-in-inclusions' /&gt;</code></para><para>Used by template <code><link linkend="template-core-expansion-terse-attributes">ŧ tan:core-expansion-terse-attributes</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-batch-replace-advanced-pass-1"><title><code>ŧ tan:batch-replace-advanced-pass-1</code></title><bridgehead><code>TAN-fn-strings-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='text()' mode='tan:batch-replace-advanced-pass-1' /&gt;</code></para><para><code>&lt;xsl:template match='.[. instance of xs:string]' mode='tan:batch-replace-advanced-pass-1' /&gt;</code></para><para>Used by function <code><link linkend="function-batch-replace-advanced">tan:batch-replace-advanced()</link></code>.</para><para>Relies upon <code><link linkend="template-regex-group-count">Ŧ tan:regex-group-count</link></code>, <code><link linkend="template-batch-replace-advanced-pass-2">ŧ tan:batch-replace-advanced-pass-2</link></code>.</para></section><section xml:id="template-batch-replace-advanced-pass-2"><title><code>ŧ tan:batch-replace-advanced-pass-2</code></title><bridgehead><code>TAN-fn-strings-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='@*' mode='tan:batch-replace-advanced-pass-2' /&gt;</code></para><para><code>&lt;xsl:template match='text()' mode='tan:batch-replace-advanced-pass-2' /&gt;</code></para><para>Used by template <code><link linkend="template-batch-replace-advanced-pass-1">ŧ tan:batch-replace-advanced-pass-1</link></code>.</para><para>Relies upon <code><link linkend="template-regex-group-count">Ŧ tan:regex-group-count</link></code>.</para></section><section xml:id="template-build-anchor-reference"><title><code>ŧ tan:build-anchor-reference</code></title><bridgehead><code>TAN-fn-expand-terse-class-1.xsl </code></bridgehead><para><code>&lt;xsl:template match='tei:lb | tei:pb | tei:cb | tei:milestone' mode='tan:build-anchor-reference' /&gt;</code></para><para><code>&lt;xsl:template match='tan:ref | tan:n | tan:type | tan:ed-who' mode='tan:build-anchor-reference' /&gt;</code></para><para>Used by template <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code> tan:dependency-adjustments-pass-1.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-build-grouping-key"><title><code>ŧ tan:build-grouping-key</code></title><bridgehead><code>TAN-fn-nodes-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='text()' mode='tan:build-grouping-key' /&gt;</code></para><para><code>&lt;xsl:template match='*' mode='tan:build-grouping-key' /&gt;</code></para><para>Used by function <code><link linkend="function-group-elements-by-shared-node-values">tan:group-elements-by-shared-node-values()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-build-integer-arrays"><title><code>ŧ tan:build-integer-arrays</code></title><bridgehead><code>TAN-fn-sequences-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='*' mode='tan:build-integer-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='.[. castable as xs:integer]' priority='-1' mode='tan:build-integer-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='.[. instance of array(xs:integer*)]' mode='tan:build-integer-arrays' /&gt;</code></para><para>Used by function <code><link linkend="function-longest-ascending-subsequence">tan:longest-ascending-subsequence()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-build-lm-arrays"><title><code>ŧ tan:build-lm-arrays</code></title><bridgehead><code>TAN-fn-language-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:ana' mode='tan:build-lm-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='tan:lm' mode='tan:build-lm-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='tan:l' mode='tan:build-lm-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='tan:m' mode='tan:build-lm-arrays' /&gt;</code></para><para>Used by function <code>tan:ana-lm-arrays()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-build-maps-and-arrays"><title><code>ŧ tan:build-maps-and-arrays</code></title><bridgehead><code>TAN-fn-maps-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='map:item[@type eq 'document-node'] | array:item[@type eq 'document-node']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:item[@type eq 'comment'] | array:item[@type eq 'comment']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:item[@type eq 'processing-instruction'] | array:item[@type eq 'processing-instruction']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:item[@type eq 'element'] | array:item[@type eq 'element']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:item[@type eq 'attribute'] | array:item[@type eq 'attribute']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='@_type' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:item[@type eq 'text'] | array:item[@type eq 'text']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:item[@type eq 'map'] | array:item[@type eq 'map']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:item[@type eq 'array'] | array:item[@type eq 'array']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:item[@type = ('function')] | array:item[@type = ('function')]' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key | map:item' priority='-1' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:anyURI'] | map:item[@type eq 'xs:anyURI'] | array:item[@type eq 'xs:anyURI']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:base64Binary'] | map:item[@type eq 'xs:base64Binary'] | array:item[@type eq 'xs:base64Binary']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:boolean'] | map:item[@type eq 'xs:boolean'] | array:item[@type eq 'xs:boolean']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:date'] | map:item[@type eq 'xs:date'] | array:item[@type eq 'xs:date']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:dateTime'] | map:item[@type eq 'xs:dateTime'] | array:item[@type eq 'xs:dateTime']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:decimal'] | map:item[@type eq 'xs:decimal'] | array:item[@type eq 'xs:decimal']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:integer'] | map:item[@type eq 'xs:integer'] | array:item[@type eq 'xs:integer']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:long'] | map:item[@type eq 'xs:long'] | array:item[@type eq 'xs:long']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:int'] | map:item[@type eq 'xs:int'] | array:item[@type eq 'xs:int']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:short'] | map:item[@type eq 'xs:short'] | array:item[@type eq 'xs:short']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:byte'] | map:item[@type eq 'xs:byte'] | array:item[@type eq 'xs:byte']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:nonNegativeInteger'] | map:item[@type eq 'xs:nonNegativeInteger'] | array:item[@type eq 'xs:nonNegativeInteger']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:positiveInteger'] | map:item[@type eq 'xs:positiveInteger'] | array:item[@type eq 'xs:positiveInteger']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:unsignedLong'] | map:item[@type eq 'xs:unsignedLong'] | array:item[@type eq 'xs:unsignedLong']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:unsignedInt'] | map:item[@type eq 'xs:unsignedInt'] | array:item[@type eq 'xs:unsignedInt']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:unsignedShort'] | map:item[@type eq 'xs:unsignedShort'] | array:item[@type eq 'xs:unsignedShort']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:unsignedByte'] | map:item[@type eq 'xs:unsignedByte'] | array:item[@type eq 'xs:unsignedByte']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:nonPositiveInteger'] | map:item[@type eq 'xs:nonPositiveInteger'] | array:item[@type eq 'xs:nonPositiveInteger']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:negativeInteger'] | map:item[@type eq 'xs:negativeInteger'] | array:item[@type eq 'xs:negativeInteger']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:double'] | map:item[@type eq 'xs:double'] | array:item[@type eq 'xs:double']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:duration'] | map:item[@type eq 'xs:duration'] | array:item[@type eq 'xs:duration']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:dayTimeDuration'] | map:item[@type eq 'xs:dayTimeDuration'] | array:item[@type eq 'xs:dayTimeDuration']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:yearMonthDuration'] | map:item[@type eq 'xs:yearMonthDuration'] | array:item[@type eq 'xs:yearMonthDuration']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:float'] | map:item[@type eq 'xs:float'] | array:item[@type eq 'xs:float']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:gDay'] | map:item[@type eq 'xs:gDay'] | array:item[@type eq 'xs:gDay']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:gMonth'] | map:item[@type eq 'xs:gMonth'] | array:item[@type eq 'xs:gMonth']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:gMonthDay'] | map:item[@type eq 'xs:gMonthDay'] | array:item[@type eq 'xs:gMonthDay']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:gYear'] | map:item[@type eq 'xs:gYear'] | array:item[@type eq 'xs:gYear']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:gYearMonth'] | map:item[@type eq 'xs:gYearMonth'] | array:item[@type eq 'xs:gYearMonth']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:hexBinary'] | map:item[@type eq 'xs:hexBinary'] | array:item[@type eq 'xs:hexBinary']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:QName'] | map:item[@type eq 'xs:QName'] | array:item[@type eq 'xs:QName']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:string'] | map:item[@type eq 'xs:string'] | array:item[@type eq 'xs:string']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:normalizedString'] | map:item[@type eq 'xs:normalizedString'] | array:item[@type eq 'xs:normalizedString']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:token'] | map:item[@type eq 'xs:token'] | array:item[@type eq 'xs:token']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:language'] | map:item[@type eq 'xs:language'] | array:item[@type eq 'xs:language']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:Name'] | map:item[@type eq 'xs:Name'] | array:item[@type eq 'xs:Name']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:NCName'] | map:item[@type eq 'xs:NCName'] | array:item[@type eq 'xs:NCName']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:ENTITY'] | map:item[@type eq 'xs:ENTITY'] | array:item[@type eq 'xs:ENTITY']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:ID'] | map:item[@type eq 'xs:ID'] | array:item[@type eq 'xs:ID']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:IDREF'] | map:item[@type eq 'xs:IDREF'] | array:item[@type eq 'xs:IDREF']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:NMTOKEN'] | map:item[@type eq 'xs:NMTOKEN'] | array:item[@type eq 'xs:NMTOKEN']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para><code>&lt;xsl:template match='map:key[@type eq 'xs:time'] | map:item[@type eq 'xs:time'] | array:item[@type eq 'xs:time']' mode='tan:build-maps-and-arrays' /&gt;</code></para><para>Used by template <code><link linkend="template-xml-to-map-and-array">ŧ tan:xml-to-map-and-array</link></code>.</para><para>Used by function <code>tan:array-members()</code>, <code>tan:build-xml-to-map-key()</code>.</para><para>Relies upon <code><link linkend="function-xml-to-map">tan:xml-to-map()</link></code>, <code><link linkend="template-xml-to-map-and-array">ŧ tan:xml-to-map-and-array</link></code>.</para></section><section xml:id="template-build-morpheus-ana"><title><code>ŧ tan:build-morpheus-ana</code></title><bridgehead><code>TAN-fn-search-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='oac:Body' mode='tan:build-morpheus-ana' /&gt;</code></para><para><code>&lt;xsl:template match='entry' mode='tan:build-morpheus-ana' /&gt;</code></para><para><code>&lt;xsl:template match='dict' mode='tan:build-morpheus-ana' /&gt;</code></para><para><code>&lt;xsl:template match='infl' mode='tan:build-morpheus-ana' /&gt;</code></para><para><code>&lt;xsl:template match='pofs | case | gend | num | mood | tense | voice | comp' mode='tan:build-morpheus-ana tan:build-morpheus-lex' /&gt;</code></para><para>Used by template <code><link linkend="template-claims-morpheus">ŧ tan:claims-morpheus</link></code>.</para><para>Relies upon <code><link linkend="variable-morpheus-map">$morpheus-map</link></code>, <code><link linkend="variable-TAN-feature-vocabulary">$tan:TAN-feature-vocabulary</link></code>.</para></section><section xml:id="template-build-morpheus-lex"><title><code>ŧ tan:build-morpheus-lex</code></title><bridgehead><code>TAN-fn-search-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='pofs | case | gend | num | mood | tense | voice | comp' mode='tan:build-morpheus-ana tan:build-morpheus-lex' /&gt;</code></para><para><code>&lt;xsl:template match='infl' mode='tan:build-morpheus-lex' /&gt;</code></para><para><code>&lt;xsl:template match='dict' mode='tan:build-morpheus-lex' /&gt;</code></para><para><code>&lt;xsl:template match='hdwd' mode='tan:build-morpheus-lex' /&gt;</code></para><para><code>&lt;xsl:template match='@xml:lang' mode='tan:build-morpheus-lex' /&gt;</code></para><para>Used by template <code><link linkend="template-claims-morpheus">ŧ tan:claims-morpheus</link></code>.</para><para>Relies upon <code><link linkend="variable-morpheus-map">$morpheus-map</link></code>, <code><link linkend="variable-TAN-feature-vocabulary">$tan:TAN-feature-vocabulary</link></code>.</para></section><section xml:id="template-build-namespace-map"><title><code>ŧ tan:build-namespace-map</code></title><bridgehead><code>TAN-fn-nodes-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='*' mode='tan:build-namespace-map' /&gt;</code></para><para>Used by function <code><link linkend="function-get-namespace-map">tan:get-namespace-map()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-catalog-expansion-terse"><title><code>ŧ tan:catalog-expansion-terse</code></title><bridgehead><code>TAN-fn-expand-files.xsl </code></bridgehead><para><code>&lt;xsl:template match='collection' mode='tan:catalog-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='doc' mode='tan:catalog-expansion-terse' /&gt;</code></para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>.</para><para>Relies upon <code><link linkend="function-duplicate-items">tan:duplicate-items</link></code>.</para></section><section xml:id="template-check-and-expand-ranges"><title><code>ŧ tan:check-and-expand-ranges</code></title><bridgehead><code>TAN-fn-sequences-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='*[@from][text()]' mode='tan:check-and-expand-ranges' /&gt;</code></para><para><code>&lt;xsl:template match='tan:ref[@from][tan:n]' priority='1' mode='tan:check-and-expand-ranges' /&gt;</code></para><para>Used by function <code>tan:analyze-sequence()</code>.</para><para>Relies upon <code><link linkend="variable-separator-hierarchy">$tan:separator-hierarchy</link></code>, <code><link linkend="function-expand-numerical-expression">tan:expand-numerical-expression</link></code>, <code><link linkend="function-string-to-numerals">tan:string-to-numerals</link></code>.</para></section><section xml:id="template-check-referred-doc"><title><code>ŧ tan:check-referred-doc</code></title><bridgehead><code>TAN-fn-expand-files.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:inclusion/* | tan:vocabulary/tan:item' priority='1' mode='tan:check-referred-doc' /&gt;</code></para><para><code>&lt;xsl:template match='tan:algorithm | tan:TAN-T/tan:head/tan:source | tei:TEI/tan:head/tan:source' mode='tan:check-referred-doc' /&gt;</code></para><para><code>&lt;xsl:template match='tan:predecessor | tan:see-also' mode='tan:check-referred-doc' priority='1' /&gt;</code></para><para><code>&lt;xsl:template match='          tan:inclusion | tan:vocabulary | tan:TAN-A/tan:head/tan:source | tan:TAN-A-lm/tan:head/tan:source | tan:TAN-A-tok/tan:head/tan:source          | tan:see-also | tan:morphology | tan:redivision | tan:model | tan:successor | tan:predecessor | tan:annotation' mode='tan:check-referred-doc' /&gt;</code></para><para><code>&lt;xsl:template match='tan:checksum/tan:IRI' priority='3' mode='tan:check-referred-doc' /&gt;</code></para><para><code>&lt;xsl:template match='tan:IRI' priority='2' mode='tan:check-referred-doc' /&gt;</code></para><para><code>&lt;xsl:template match='*[@href]' mode='tan:check-referred-doc' /&gt;</code></para><bridgehead><code>TAN-fn-expand-terse-class-2.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:vocabulary/tan:item' priority='2' mode='tan:check-referred-doc' /&gt;</code></para><para>Used by template <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code>, <code><link linkend="template-core-expansion-normal">ŧ tan:core-expansion-normal</link></code>.</para><para>Relies upon <code><link linkend="variable-TAN-namespace">$tan:TAN-namespace</link></code>, <code><link linkend="variable-TAN-vocabularies">$tan:TAN-vocabularies</link></code>, <code><link linkend="variable-TEI-namespace">$tan:TEI-namespace</link></code>, <code><link linkend="variable-doc-id">$tan:doc-id</link></code>, <code><link linkend="variable-duplicate-head-iris">$tan:duplicate-head-iris</link></code>, <code><link linkend="variable-empty-doc">$tan:empty-doc</link></code>, <code><link linkend="variable-empty-element">$tan:empty-element</link></code>, <code><link linkend="variable-inclusions-resolved">$tan:inclusions-resolved</link></code>, <code><link linkend="variable-internet-available">$tan:internet-available</link></code>, <code><link linkend="variable-sources-resolved">$tan:sources-resolved</link></code>, <code><link linkend="variable-vocabularies-resolved">$tan:vocabularies-resolved</link></code>, <code><link linkend="function-base-uri">tan:base-uri</link></code>, <code><link linkend="function-distinct-items">tan:distinct-items</link></code>, <code><link linkend="function-element-vocabulary">tan:element-vocabulary</link></code>, <code><link linkend="function-get-1st-doc">tan:get-1st-doc</link></code>, <code><link linkend="function-get-doc-history">tan:get-doc-history</link></code>, <code><link linkend="function-last-change-agent">tan:last-change-agent</link></code>, <code><link linkend="function-normalize-text">tan:normalize-text</link></code>, <code><link linkend="function-resolve-doc">tan:resolve-doc</link></code>, <code><link linkend="function-shallow-copy">tan:shallow-copy</link></code>, <code><link linkend="function-url-is-local">tan:url-is-local</link></code>.</para></section><section xml:id="template-claims-morpheus"><title><code>ŧ tan:claims-morpheus</code></title><bridgehead><code>TAN-fn-search-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='/*' mode='tan:claims-morpheus' /&gt;</code></para><para>Used by function <code><link linkend="function-search-results-to-claims">tan:search-results-to-claims()</link></code>.</para><para>Relies upon <code><link linkend="template-build-morpheus-ana">ŧ tan:build-morpheus-ana</link></code>, <code><link linkend="template-build-morpheus-lex">ŧ tan:build-morpheus-lex</link></code>.</para></section><section xml:id="template-class-1-expansion-verbose-pass-1"><title><code>ŧ tan:class-1-expansion-verbose-pass-1</code></title><bridgehead><code>TAN-fn-expand-verbose.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:head' mode='tan:class-1-expansion-verbose-pass-1' /&gt;</code></para><para><code>&lt;xsl:template match='tan:redivision' mode='tan:class-1-expansion-verbose-pass-1' /&gt;</code></para><para><code>&lt;xsl:template match='tan:model' mode='tan:class-1-expansion-verbose-pass-1' /&gt;</code></para><para><code>&lt;xsl:template match='tan:body' mode='tan:class-1-expansion-verbose-pass-1' /&gt;</code></para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>.</para><para>Relies upon <code><link linkend="variable-doc-id">$tan:doc-id</link></code>, <code><link linkend="variable-model-resolved">$tan:model-resolved</link></code>, <code><link linkend="variable-redivisions-resolved">$tan:redivisions-resolved</link></code>, <code><link linkend="function-copy-of-except">tan:copy-of-except</link></code>, <code><link linkend="function-diff">tan:diff</link></code>, <code><link linkend="function-expand-doc">tan:expand-doc</link></code>, <code><link linkend="function-get-1st-doc">tan:get-1st-doc</link></code>, <code><link linkend="function-merge-expanded-docs">tan:merge-expanded-docs</link></code>, <code><link linkend="function-resolve-doc">tan:resolve-doc</link></code>, <code><link linkend="function-stamp-diff-with-text-data">tan:stamp-diff-with-text-data</link></code>, <code><link linkend="function-text-join">tan:text-join</link></code>.</para></section><section xml:id="template-class-1-expansion-verbose-pass-2"><title><code>ŧ tan:class-1-expansion-verbose-pass-2</code></title><bridgehead><code>TAN-fn-expand-verbose.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:model' mode='tan:class-1-expansion-verbose-pass-2' /&gt;</code></para><para><code>&lt;xsl:template match='tan:model/tan:body' mode='tan:class-1-expansion-verbose-pass-2' /&gt;</code></para><para><code>&lt;xsl:template match='tan:TAN-T/tan:body | tei:TEI/tan:body' mode='tan:class-1-expansion-verbose-pass-2' /&gt;</code></para><para><code>&lt;xsl:template match='tan:div' mode='tan:class-1-expansion-verbose-pass-2' /&gt;</code></para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>.</para><para>Relies upon <code><link linkend="element-div">&lt;div&gt;</link></code>, <code><link linkend="function-shallow-copy">tan:shallow-copy</link></code>, <code><link linkend="function-string-to-numerals">tan:string-to-numerals</link></code>.</para></section><section xml:id="template-class-1-expansion-verbose-pass-3"><title><code>ŧ tan:class-1-expansion-verbose-pass-3</code></title><bridgehead><code>TAN-fn-expand-verbose.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:model/tan:body' mode='tan:class-1-expansion-verbose-pass-3' /&gt;</code></para><para><code>&lt;xsl:template match='tan:TAN-T/tan:body | tei:TEI/tan:body' mode='tan:class-1-expansion-verbose-pass-3' /&gt;</code></para><para><code>&lt;xsl:template match='tan:div[not(tan:div)][@_pos]' mode='tan:class-1-expansion-verbose-pass-3' /&gt;</code></para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>.</para><para>Relies upon <code><link linkend="variable-char-regex">$tan:char-regex</link></code>, <code><link linkend="function-chop-diff-output">tan:chop-diff-output</link></code>, <code><link linkend="function-xml-to-string">tan:xml-to-string</link></code>, <code><link linkend="template-ellipses">ŧ tan:ellipses</link></code>, <code><link linkend="template-strip-attributes">ŧ tan:strip-attributes</link></code>.</para></section><section xml:id="template-class-2-expansion-normal"><title><code>ŧ tan:class-2-expansion-normal</code></title><bridgehead><code>TAN-fn-expand-normal.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:div-ref' mode='tan:core-expansion-normal tan:class-2-expansion-normal' /&gt;</code></para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-class-2-expansion-terse"><title><code>ŧ tan:class-2-expansion-terse</code></title><bridgehead><code>TAN-fn-expand-terse-class-2.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:skip/tan:div-type | tan:skip/tan:n | tan:rename/tan:n | tan:passage       | tan:from-tok | tan:through-tok | tan:rename | tan:reassign' mode='tan:class-2-expansion-terse tan:class-2-expansion-terse-for-validation' /&gt;</code></para><para><code>&lt;xsl:template match='tan:equate' mode='tan:class-2-expansion-terse tan:class-2-expansion-terse-for-validation' /&gt;</code></para><para><code>&lt;xsl:template match='tan:to/tan:ref | tan:new/tan:ref' mode='tan:class-2-expansion-terse tan:class-2-expansion-terse-for-validation' /&gt;</code></para><para><code>&lt;xsl:template match='tan:ref' mode='tan:class-2-expansion-terse tan:class-2-expansion-terse-for-validation' /&gt;</code></para><para><code>&lt;xsl:template match='tan:pos' mode='tan:class-2-expansion-terse tan:class-2-expansion-terse-for-validation' /&gt;</code></para><para><code>&lt;xsl:template match='tan:chars' mode='tan:class-2-expansion-terse tan:class-2-expansion-terse-for-validation' /&gt;</code></para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>.</para><para>Relies upon <code><link linkend="function-duplicate-items">tan:duplicate-items</link></code>, <code><link linkend="function-ordinal">tan:ordinal</link></code>.</para></section><section xml:id="template-class-2-expansion-terse-for-validation"><title><code>ŧ tan:class-2-expansion-terse-for-validation</code></title><bridgehead><code>TAN-fn-expand-terse-class-2.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:skip/tan:div-type | tan:skip/tan:n | tan:rename/tan:n | tan:passage       | tan:from-tok | tan:through-tok | tan:rename | tan:reassign' mode='tan:class-2-expansion-terse tan:class-2-expansion-terse-for-validation' /&gt;</code></para><para><code>&lt;xsl:template match='tan:equate' mode='tan:class-2-expansion-terse tan:class-2-expansion-terse-for-validation' /&gt;</code></para><para><code>&lt;xsl:template match='tan:to/tan:ref | tan:new/tan:ref' mode='tan:class-2-expansion-terse tan:class-2-expansion-terse-for-validation' /&gt;</code></para><para><code>&lt;xsl:template match='tan:ref' mode='tan:class-2-expansion-terse tan:class-2-expansion-terse-for-validation' /&gt;</code></para><para><code>&lt;xsl:template match='tan:pos' mode='tan:class-2-expansion-terse tan:class-2-expansion-terse-for-validation' /&gt;</code></para><para><code>&lt;xsl:template match='tan:chars' mode='tan:class-2-expansion-terse tan:class-2-expansion-terse-for-validation' /&gt;</code></para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>.</para><para>Relies upon <code><link linkend="function-duplicate-items">tan:duplicate-items</link></code>, <code><link linkend="function-ordinal">tan:ordinal</link></code>.</para></section><section xml:id="template-class-2-expansion-verbose"><title><code>ŧ tan:class-2-expansion-verbose</code></title><bridgehead><code>TAN-fn-expand-verbose.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:source' mode='tan:class-2-expansion-verbose' /&gt;</code></para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>.</para><para>Relies upon <code><link linkend="function-get-1st-doc">tan:get-1st-doc</link></code>.</para></section><section xml:id="template-clean-reset-divs-1"><title><code>ŧ tan:clean-reset-divs-1</code></title><bridgehead><code>TAN-fn-expand-terse-class-1.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:div' mode='tan:clean-reset-divs-1' /&gt;</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:template.</para><para>Relies upon <code><link linkend="template-clean-reset-divs-2">ŧ tan:clean-reset-divs-2</link></code>.</para></section><section xml:id="template-clean-reset-divs-2"><title><code>ŧ tan:clean-reset-divs-2</code></title><bridgehead><code>TAN-fn-expand-terse-class-1.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:div[tan:ref/@reset]' mode='tan:reset-hierarchy tan:clean-reset-divs-2' /&gt;</code></para><para><code>&lt;xsl:template match='tan:ref' mode='tan:clean-reset-divs-2' /&gt;</code></para><para>Used by template <code><link linkend="template-clean-reset-divs-1">ŧ tan:clean-reset-divs-1</link></code>.</para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>, <code>tan:reset-hierarchy-loop()</code>, <code>tan:reset-hierarchy()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-clean-up-archive"><title><code>ŧ tan:clean-up-archive</code></title><bridgehead><code>TAN-fn-file-archive-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='@_archive-path | @xml:base' mode='tan:clean-up-archive' /&gt;</code></para><para>Used by template <code><link linkend="template-save-archive">Ŧ tan:save-archive</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-clean-up-collation-pass-1"><title><code>ŧ tan:clean-up-collation-pass-1</code></title><bridgehead><code>TAN-fn-strings-collate-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:x | tan:witness' mode='tan:clean-up-collation-pass-1' /&gt;</code></para><para><code>&lt;xsl:template match='tan:previous-collation | tan:diagnostics' mode='tan:clean-up-collation-pass-1' /&gt;</code></para><para><code>&lt;xsl:template match='*[tan:u]' mode='tan:clean-up-collation-pass-1' /&gt;</code></para><para>Used by function <code><link linkend="function-collate">tan:collate()</link></code>.</para><para>Relies upon <code><link linkend="function-collate">tan:collate</link></code>, <code><link linkend="template-add-collation-pos-offset">ŧ tan:add-collation-pos-offset</link></code>.</para></section><section xml:id="template-clean-up-collation-pass-2"><title><code>ŧ tan:clean-up-collation-pass-2</code></title><bridgehead><code>TAN-fn-strings-collate-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='*[tan:u]' mode='tan:clean-up-collation-pass-2' /&gt;</code></para><para>Used by function <code><link linkend="function-collate">tan:collate()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-collated-sequences-to-diff"><title><code>ŧ tan:collated-sequences-to-diff</code></title><bridgehead><code>TAN-fn-strings-diff-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:long-seq' mode='tan:collated-sequences-to-diff' /&gt;</code></para><para><code>&lt;xsl:template match='tan:item[@p1 and @p2]' priority='1' mode='tan:collated-sequences-to-diff' /&gt;</code></para><para><code>&lt;xsl:template match='tan:item[@p1]' mode='tan:collated-sequences-to-diff' /&gt;</code></para><para><code>&lt;xsl:template match='tan:item[@p2]' mode='tan:collated-sequences-to-diff' /&gt;</code></para><para>Used by function <code>tan:diff-loop()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-collation-to-strings"><title><code>ŧ tan:collation-to-strings</code></title><bridgehead><code>TAN-fn-strings-collate-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:witness' mode='tan:collation-to-strings' /&gt;</code></para><para>Used by function <code>tan:collation-to-strings()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-consolidate-identical-adjacent-divs"><title><code>ŧ tan:consolidate-identical-adjacent-divs</code></title><bridgehead><code>TAN-fn-nodes-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='*[*:div]' mode='tan:consolidate-identical-adjacent-divs' /&gt;</code></para><para>Used by function <code>tan:consolidate-identical-adjacent-divs()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-convert-morphological-codes"><title><code>ŧ tan:convert-morphological-codes</code></title><bridgehead><code>TAN-fn-language-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:m' mode='tan:convert-morphological-codes' /&gt;</code></para><para>Used by function <code><link linkend="function-convert-morphological-codes">tan:convert-morphological-codes()</link></code>.</para><para>Relies upon <code><link linkend="function-duplicate-values">tan:duplicate-values</link></code>, <code><link linkend="template-add-code-test-toks">ŧ tan:add-code-test-toks</link></code>.</para></section><section xml:id="template-convert-tok-to-push"><title><code>ŧ tan:convert-tok-to-push</code></title><bridgehead><code>TAN-fn-expand-terse-class-1.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:tok' mode='tan:convert-tok-to-push' /&gt;</code></para><para>Used by template <code><link linkend="template-mark-dependencies-pass-2">ŧ tan:mark-dependencies-pass-2</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-copy-of-except"><title><code>ŧ tan:copy-of-except</code></title><bridgehead><code>TAN-fn-nodes-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='*' mode='tan:copy-of-except' /&gt;</code></para><para>Used by function <code><link linkend="function-copy-of-except">tan:copy-of-except()</link></code>, <code>tan:stamp-tree-with-text-data()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-core-expansion-normal"><title><code>ŧ tan:core-expansion-normal</code></title><bridgehead><code>TAN-fn-expand-files.xsl </code></bridgehead><para><code>&lt;xsl:template match='/*' mode='tan:core-expansion-normal tan:dependency-expansion-normal' /&gt;</code></para><para><code>&lt;xsl:template match='tan:master-location' mode='tan:core-expansion-normal' /&gt;</code></para><para><code>&lt;xsl:template priority='1' match='tan:TAN-A/tan:head/tan:source | tan:TAN-A-tok/tan:head/tan:source | tan:TAN-A-lm/tan:head/tan:source' mode='tan:core-expansion-normal' /&gt;</code></para><para><code>&lt;xsl:template match='tan:see-also | tan:model | tan:redivision | tan:successor | tan:predecessor | tan:algorithm | tan:source[tan:location] | tan:annotation' mode='tan:core-expansion-normal' /&gt;</code></para><para><code>&lt;xsl:template match='text()[matches(., '\S')]' mode='tan:core-expansion-normal' /&gt;</code></para><bridgehead><code>TAN-fn-expand-normal.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:TAN-T/tan:body | tan:div' mode='tan:core-expansion-normal' /&gt;</code></para><para><code>&lt;xsl:template match='tan:div-ref' mode='tan:core-expansion-normal tan:class-2-expansion-normal' /&gt;</code></para><para><code>&lt;xsl:template match='tan:subject/tan:div | tan:object/tan:div' priority='1' mode='tan:core-expansion-normal' /&gt;</code></para><para><code>&lt;xsl:template match='tan:TAN-voc/tan:body' mode='tan:core-expansion-normal' /&gt;</code></para><para><code>&lt;xsl:template match='tan:name' mode='tan:core-expansion-normal' /&gt;</code></para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>.</para><para>Relies upon <code><link linkend="variable-doc-uri">$tan:doc-uri</link></code>, <code><link linkend="variable-orig-self">$tan:orig-self</link></code>, <code><link linkend="variable-regex-characters-not-permitted">$tan:regex-characters-not-permitted</link></code>, <code><link linkend="function-copy-of-except">tan:copy-of-except</link></code>, <code><link linkend="function-dec-to-hex">tan:dec-to-hex</link></code>, <code><link linkend="function-diff">tan:diff</link></code>, <code><link linkend="function-duplicate-values">tan:duplicate-values</link></code>, <code><link linkend="function-get-1st-doc">tan:get-1st-doc</link></code>, <code><link linkend="function-get-doc-history">tan:get-doc-history</link></code>, <code><link linkend="function-normalize-name">tan:normalize-name</link></code>, <code><link linkend="function-xml-to-string">tan:xml-to-string</link></code>, <code><link linkend="template-check-referred-doc">ŧ tan:check-referred-doc</link></code>, <code><link linkend="template-ellipses">ŧ tan:ellipses</link></code>.</para></section><section xml:id="template-core-expansion-prep-for-attr-query"><title><code>ŧ tan:core-expansion-prep-for-attr-query</code></title><bridgehead><code>TAN-fn-expand-files.xsl </code></bridgehead><para><code>&lt;xsl:template match='tei:teiHeader | tan:tail | tei:div[not(tei:div)]/node()' mode='tan:core-expansion-prep-for-attr-query' /&gt;</code></para><para>Used by template <code><link linkend="template-core-expansion-terse-attributes">ŧ tan:core-expansion-terse-attributes</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-core-expansion-terse"><title><code>ŧ tan:core-expansion-terse</code></title><bridgehead><code>TAN-fn-expand-files.xsl </code></bridgehead><para><code>&lt;xsl:template match='tei:teiHeader | tan:tail' use-when='$tan:validation-mode-on' mode='tan:core-expansion-terse-attributes tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tei:teiHeader | tan:tail' use-when='not($tan:validation-mode-on)' mode='tan:core-expansion-terse-attributes tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='/*' mode='tan:core-expansion-terse' priority='-2' /&gt;</code></para><para><code>&lt;xsl:template match='tan:head' mode='tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:inclusion | tan:vocabulary' mode='tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='*[@which]/tan:id' mode='tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:feature[@which]/tan:id' priority='1' mode='tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:name' mode='tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:IRI' mode='tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:token-definition' mode='tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:alias/tan:idref' mode='tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:vocabulary-key' mode='tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:file-resp' mode='tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:to-do' mode='tan:core-expansion-terse' /&gt;</code></para><bridgehead><code>TAN-fn-expand-terse-class-1.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:redivision | /tan:TAN-T/tan:head/tan:companion-version | /tei:TEI/tan:head/tan:companion-version' mode='tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:reference-system' mode='tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:model' mode='tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:TAN-T | tei:TEI' mode='tan:core-expansion-terse tan:dependency-adjustments-pass-1' /&gt;</code></para><para><code>&lt;xsl:template match='*:body' mode='tan:core-expansion-terse tan:dependency-adjustments-pass-1' /&gt;</code></para><para><code>&lt;xsl:template match='tei:text' mode='tan:core-expansion-terse tan:dependency-adjustments-pass-1' /&gt;</code></para><para><code>&lt;xsl:template match='tan:div | tei:div' mode='tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tei:teiHeader' mode='tan:core-expansion-terse tan:dependency-adjustments-pass-1' /&gt;</code></para><para><code>&lt;xsl:template match='tei:lb | tei:pb | tei:cb' mode='tan:core-expansion-terse tan:dependency-adjustments-pass-1' /&gt;</code></para><bridgehead><code>TAN-fn-expand-terse-class-2.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:source | tan:morphology[not(@attr)]' mode='tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:rename' mode='tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:rename/tan:by' mode='tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:tok[not(tan:from)] | tan:tok/tan:from | tan:tok/tan:to |       tan:from-tok | tan:through-tok' mode='tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='          tan:adjustments/tan:skip/tan:div-type |          tan:adjustments/tan:*/tan:ref | tan:adjustments/tan:*/tan:n | tan:passage/tan:ref[not(@q)]' mode='tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:ref[@q][@from]' priority='1' mode='tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:ref[@q][@to]' priority='1' mode='tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='/' mode='tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:claim/tan:work | tan:object/tan:work | tan:subject/tan:work' mode='tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:group[tan:work]' mode='tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:TAN-A/tan:body' mode='tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:claim' mode='tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:subject | tan:object' mode='tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:adjustments' mode='tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:TAN-A-lm/tan:body' mode='tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:tok' mode='tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:m' mode='tan:core-expansion-terse' /&gt;</code></para><bridgehead><code>TAN-fn-expand-terse-class-3.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:TAN-mor/tan:body' mode='tan:dependency-adjustments-pass-1 tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:category' mode='tan:dependency-adjustments-pass-1 tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:category/tan:code/tan:val | tan:body/tan:code/tan:val' mode='tan:dependency-adjustments-pass-1 tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:code/tan:val/text()' mode='tan:dependency-adjustments-pass-1 tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:TAN-voc/tan:body' mode='tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='*[@affects-element]/tan:affects-element' mode='tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:item | tan:verb' mode='tan:core-expansion-terse' /&gt;</code></para><para>Used by template <code><link linkend="template-dependency-adjustments-pass-1">ŧ tan:dependency-adjustments-pass-1</link></code>.</para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>.</para><para>Relies upon <code><link linkend="variable-TAN-id-namespace">$tan:TAN-id-namespace</link></code>, <code><link linkend="variable-TAN-namespace">$tan:TAN-namespace</link></code>, <code><link linkend="variable-TAN-version">$tan:TAN-version</link></code>, <code><link linkend="variable-TAN-version-is-under-development">$tan:TAN-version-is-under-development</link></code>, <code><link linkend="variable-TAN-vocabularies">$tan:TAN-vocabularies</link></code>, <code><link linkend="variable-TAN-vocabulary-files">$tan:TAN-vocabulary-files</link></code>, <code><link linkend="variable-all-selector">$tan:all-selector</link></code>, <code><link linkend="variable-break-marker-regex">$tan:break-marker-regex</link></code>, <code><link linkend="variable-datatypes-that-require-unit-specification">$tan:datatypes-that-require-unit-specification</link></code>, <code><link linkend="variable-doc-id">$tan:doc-id</link></code>, <code><link linkend="variable-doc-id-namespace">$tan:doc-id-namespace</link></code>, <code><link linkend="variable-doc-is-error-test">$tan:doc-is-error-test</link></code>, <code><link linkend="variable-doc-uri">$tan:doc-uri</link></code>, <code><link linkend="variable-duplicate-head-iris">$tan:duplicate-head-iris</link></code>, <code><link linkend="variable-empty-element">$tan:empty-element</link></code>, <code><link linkend="variable-model-resolved">$tan:model-resolved</link></code>, <code><link linkend="variable-names-of-elements-targeted-by-objects">$tan:names-of-elements-targeted-by-objects</link></code>, <code><link linkend="variable-names-of-elements-targeted-by-subjects">$tan:names-of-elements-targeted-by-subjects</link></code>, <code><link linkend="variable-names-of-elements-that-describe-text-bearers">$tan:names-of-elements-that-describe-text-bearers</link></code>, <code><link linkend="variable-names-of-elements-that-describe-textual-entities">$tan:names-of-elements-that-describe-textual-entities</link></code>, <code><link linkend="variable-names-of-elements-that-take-which">$tan:names-of-elements-that-take-which</link></code>, <code><link linkend="variable-official-urn-namespaces">$tan:official-urn-namespaces</link></code>, <code><link linkend="variable-previous-TAN-versions">$tan:previous-TAN-versions</link></code>, <code><link linkend="variable-redivisions-resolved">$tan:redivisions-resolved</link></code>, <code><link linkend="variable-separator-hierarchy">$tan:separator-hierarchy</link></code>, <code><link linkend="variable-token-definition-default">$tan:token-definition-default</link></code>, <code><link linkend="function-attribute-vocabulary">tan:attribute-vocabulary</link></code>, <code><link linkend="function-data-type-check">tan:data-type-check</link></code>, <code><link linkend="function-distinct-items">tan:distinct-items</link></code>, <code><link linkend="function-duplicate-items">tan:duplicate-items</link></code>, <code><link linkend="function-duplicate-values">tan:duplicate-values</link></code>, <code><link linkend="function-element-vocabulary">tan:element-vocabulary</link></code>, <code><link linkend="function-ellipses">tan:ellipses</link></code>, <code><link linkend="function-get-1st-doc">tan:get-1st-doc</link></code>, <code><link linkend="function-group-elements-by-shared-node-values">tan:group-elements-by-shared-node-values</link></code>, <code><link linkend="function-last-change-agent">tan:last-change-agent</link></code>, <code><link linkend="function-normalize-name">tan:normalize-name</link></code>, <code><link linkend="function-resolve-doc">tan:resolve-doc</link></code>, <code><link linkend="function-shallow-copy">tan:shallow-copy</link></code>, <code><link linkend="function-vocabulary">tan:vocabulary</link></code>, <code><link linkend="template-build-anchor-reference">ŧ tan:build-anchor-reference</link></code>, <code><link linkend="template-check-referred-doc">ŧ tan:check-referred-doc</link></code>, <code><link linkend="template-rebuild-divs-with-ref-aliases">ŧ tan:rebuild-divs-with-ref-aliases</link></code>, <code><link linkend="template-resolve-reference-tree-numerals">ŧ tan:resolve-reference-tree-numerals</link></code>.</para></section><section xml:id="template-core-expansion-terse-attributes"><title><code>ŧ tan:core-expansion-terse-attributes</code></title><bridgehead><code>TAN-fn-expand-files.xsl </code></bridgehead><para><code>&lt;xsl:template match='tei:teiHeader | tan:tail' use-when='$tan:validation-mode-on' mode='tan:core-expansion-terse-attributes tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tei:teiHeader | tan:tail' use-when='not($tan:validation-mode-on)' mode='tan:core-expansion-terse-attributes tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='comment()' mode='tan:core-expansion-terse-attributes' /&gt;</code></para><para><code>&lt;xsl:template match='/*' priority='1' mode='tan:core-expansion-terse-attributes' /&gt;</code></para><para><code>&lt;xsl:template match='tan:head[tan:adjustments]' priority='1' mode='tan:core-expansion-terse-attributes' /&gt;</code></para><para><code>&lt;xsl:template match='tan:head/tan:vocabulary[tan:location] | tan:head/tan:tan-vocabulary | tei:div[not(tei:div)]/tei:*' priority='1' mode='tan:core-expansion-terse-attributes' /&gt;</code></para><para><code>&lt;xsl:template match='*[@*]' mode='tan:core-expansion-terse-attributes' /&gt;</code></para><bridgehead><code>TAN-fn-expand-terse-class-1.xsl </code></bridgehead><para><code>&lt;xsl:template match='tei:div[not(tei:div)]/tei:*' priority='1' mode='tan:resolve-numerals tan:core-expansion-terse-attributes' /&gt;</code></para><para>Used by template <code><link linkend="template-dependency-adjustments-pass-1">ŧ tan:dependency-adjustments-pass-1</link></code>.</para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>.</para><para>Relies upon <code><link linkend="variable-TAN-vocabularies">$tan:TAN-vocabularies</link></code>, <code><link linkend="variable-help-trigger-regex">$tan:help-trigger-regex</link></code>, <code><link linkend="variable-names-of-attributes-that-take-idrefs">$tan:names-of-attributes-that-take-idrefs</link></code>, <code><link linkend="function-distinct-items">tan:distinct-items</link></code>, <code><link linkend="function-duplicate-items">tan:duplicate-items</link></code>, <code><link linkend="function-normalize-name">tan:normalize-name</link></code>, <code><link linkend="function-vocabulary">tan:vocabulary</link></code>, <code><link linkend="template-attributes-not-in-inclusions">ŧ tan:attributes-not-in-inclusions</link></code>, <code><link linkend="template-core-expansion-prep-for-attr-query">ŧ tan:core-expansion-prep-for-attr-query</link></code>, <code><link linkend="template-core-expansion-terse-attributes-to-elements">ŧ tan:core-expansion-terse-attributes-to-elements</link></code>, <code><link linkend="template-remove-inclusions">ŧ tan:remove-inclusions</link></code>.</para></section><section xml:id="template-core-expansion-terse-attributes-to-elements"><title><code>ŧ tan:core-expansion-terse-attributes-to-elements</code></title><bridgehead><code>TAN-fn-expand-files.xsl </code></bridgehead><para><code>&lt;xsl:template match='@*' mode='tan:core-expansion-terse-attributes-to-elements' /&gt;</code></para><para><code>&lt;xsl:template match='@xml:id | @id' mode='tan:core-expansion-terse-attributes-to-elements' /&gt;</code></para><para><code>&lt;xsl:template match='@from | @to | tan:*/@when | @ed-when | @accessed-when' mode='tan:core-expansion-terse-attributes-to-elements' /&gt;</code></para><para><code>&lt;xsl:template match='@pattern | @matches-m | @matches-tok | @rgx' mode='tan:core-expansion-terse-attributes-to-elements' /&gt;</code></para><para><code>&lt;xsl:template match='@href' mode='tan:core-expansion-terse-attributes-to-elements' /&gt;</code></para><para><code>&lt;xsl:template match='@ref | @pos | @chars | tan:equate/@n | tan:skip/@n | tan:rename/@n' mode='tan:core-expansion-terse-attributes-to-elements' /&gt;</code></para><para><code>&lt;xsl:template match='*[@val]/@chars' priority='1' mode='tan:core-expansion-terse-attributes-to-elements' /&gt;</code></para><para><code>&lt;xsl:template match='*[@ref]/@new' mode='tan:core-expansion-terse-attributes-to-elements' /&gt;</code></para><para><code>&lt;xsl:template match='*[@n]/@new' mode='tan:core-expansion-terse-attributes-to-elements' /&gt;</code></para><para><code>&lt;xsl:template match='@val | @by' mode='tan:core-expansion-terse-attributes-to-elements' /&gt;</code></para><para><code>&lt;xsl:template match='@div-type | @affects-element | @affects-attribute | @item-type | @in-lang' mode='tan:core-expansion-terse-attributes-to-elements' /&gt;</code></para><para>Used by template <code><link linkend="template-core-expansion-terse-attributes">ŧ tan:core-expansion-terse-attributes</link></code>.</para><para>Relies upon <code><link linkend="variable-doc-uri">$tan:doc-uri</link></code>, <code><link linkend="variable-internet-available">$tan:internet-available</link></code>, <code><link linkend="variable-names-of-attributes-that-are-case-indifferent">$tan:names-of-attributes-that-are-case-indifferent</link></code>, <code><link linkend="variable-names-of-attributes-that-may-take-multiple-space-delimited-values">$tan:names-of-attributes-that-may-take-multiple-space-delimited-values</link></code>, <code><link linkend="variable-now">$tan:now</link></code>, <code><link linkend="function-chop-string">tan:chop-string</link></code>, <code><link linkend="function-duplicate-values">tan:duplicate-values</link></code>, <code><link linkend="function-expand-numerical-expression">tan:expand-numerical-expression</link></code>, <code><link linkend="function-path">tan:path</link></code>, <code><link linkend="function-stamp-q-id">tan:stamp-q-id</link></code>, <code><link linkend="function-uri-relative-to">tan:uri-relative-to</link></code>, <code><link linkend="function-url-is-local">tan:url-is-local</link></code>.</para></section><section xml:id="template-core-expansion-verbose"><title><code>ŧ tan:core-expansion-verbose</code></title><bridgehead><code>TAN-fn-expand-files.xsl </code></bridgehead><para><code>&lt;xsl:template match='/*' mode='tan:core-expansion-verbose' /&gt;</code></para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>.</para><para>Relies upon <code><link linkend="function-catalogs">tan:catalogs</link></code>, <code><link linkend="function-collection">tan:collection</link></code>, <code><link linkend="function-expand-doc">tan:expand-doc</link></code>, <code><link linkend="function-resolve-doc">tan:resolve-doc</link></code>, <code><link linkend="template-prepend-error-message">ŧ tan:prepend-error-message</link></code>.</para></section><section xml:id="template-cut-faulty-hrefs"><title><code>ŧ tan:cut-faulty-hrefs</code></title><bridgehead><code>TAN-fn-uris-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='/collection/doc[@href]' mode='tan:cut-faulty-hrefs' /&gt;</code></para><para>Used by function <code><link linkend="function-catalogs">tan:catalogs()</link></code>.</para><para>Relies upon <code><link linkend="variable-internet-available">$tan:internet-available</link></code>.</para></section><section xml:id="template-dependency-adjustments-pass-1"><title><code>ŧ tan:dependency-adjustments-pass-1</code></title><bridgehead><code>TAN-fn-expand-terse-class-1.xsl </code></bridgehead><para><code>&lt;xsl:template match='/' mode='tan:dependency-adjustments-pass-1' /&gt;</code></para><para><code>&lt;xsl:template match='tan:TAN-T | tei:TEI' mode='tan:core-expansion-terse tan:dependency-adjustments-pass-1' /&gt;</code></para><para><code>&lt;xsl:template match='*:body' mode='tan:core-expansion-terse tan:dependency-adjustments-pass-1' /&gt;</code></para><para><code>&lt;xsl:template match='tei:text' mode='tan:core-expansion-terse tan:dependency-adjustments-pass-1' /&gt;</code></para><para><code>&lt;xsl:template match='*:body/text() | *:div[*:div]/text()' mode='tan:dependency-adjustments-pass-1' /&gt;</code></para><para><code>&lt;xsl:template match='tan:div | tei:div' mode='tan:dependency-adjustments-pass-1' /&gt;</code></para><para><code>&lt;xsl:template match='tei:teiHeader' mode='tan:core-expansion-terse tan:dependency-adjustments-pass-1' /&gt;</code></para><para><code>&lt;xsl:template match='tei:lb | tei:pb | tei:cb' mode='tan:core-expansion-terse tan:dependency-adjustments-pass-1' /&gt;</code></para><para><code>&lt;xsl:template match='tan:div/comment()' mode='tan:dependency-adjustments-pass-1' /&gt;</code></para><bridgehead><code>TAN-fn-expand-terse-class-2.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:tan-vocabulary/tan:item[tan:affects-element = 'feature']/tan:id' mode='tan:dependency-adjustments-pass-1' /&gt;</code></para><para><code>&lt;xsl:template match='tan:vocabulary-key/tan:feature[@xml:id][tan:IRI]' mode='tan:dependency-adjustments-pass-1' /&gt;</code></para><bridgehead><code>TAN-fn-expand-terse-class-3.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:TAN-mor/tan:body' mode='tan:dependency-adjustments-pass-1 tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:category' mode='tan:dependency-adjustments-pass-1 tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:category/tan:code/tan:val | tan:body/tan:code/tan:val' mode='tan:dependency-adjustments-pass-1 tan:core-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:code/tan:val/text()' mode='tan:dependency-adjustments-pass-1 tan:core-expansion-terse' /&gt;</code></para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>.</para><para>Relies upon <code><link linkend="variable-TAN-version">$tan:TAN-version</link></code>, <code><link linkend="variable-TAN-version-is-under-development">$tan:TAN-version-is-under-development</link></code>, <code><link linkend="variable-all-selector">$tan:all-selector</link></code>, <code><link linkend="variable-break-marker-regex">$tan:break-marker-regex</link></code>, <code><link linkend="variable-doc-id">$tan:doc-id</link></code>, <code><link linkend="variable-empty-element">$tan:empty-element</link></code>, <code><link linkend="variable-previous-TAN-versions">$tan:previous-TAN-versions</link></code>, <code><link linkend="variable-separator-hierarchy">$tan:separator-hierarchy</link></code>, <code><link linkend="function-duplicate-values">tan:duplicate-values</link></code>, <code><link linkend="function-ellipses">tan:ellipses</link></code>, <code><link linkend="function-last-change-agent">tan:last-change-agent</link></code>, <code><link linkend="function-path">tan:path</link></code>, <code><link linkend="function-shallow-copy">tan:shallow-copy</link></code>, <code><link linkend="template-build-anchor-reference">ŧ tan:build-anchor-reference</link></code>, <code><link linkend="template-core-expansion-terse-attributes">ŧ tan:core-expansion-terse-attributes</link></code>, <code><link linkend="template-rebuild-divs-with-ref-aliases">ŧ tan:rebuild-divs-with-ref-aliases</link></code>, <code><link linkend="template-resolve-reference-tree-numerals">ŧ tan:resolve-reference-tree-numerals</link></code>.</para></section><section xml:id="template-dependency-adjustments-pass-2"><title><code>ŧ tan:dependency-adjustments-pass-2</code></title><bridgehead><code>TAN-fn-expand-terse-class-1.xsl </code></bridgehead><para><code>&lt;xsl:template match='/' mode='tan:dependency-adjustments-pass-2' /&gt;</code></para><para><code>&lt;xsl:template match='tan:head' mode='tan:dependency-adjustments-pass-2' /&gt;</code></para><para><code>&lt;xsl:template match='tan:div' mode='tan:dependency-adjustments-pass-2' /&gt;</code></para><para><code>&lt;xsl:template match='tan:passage/tan:tok' mode='tan:dependency-adjustments-pass-2' /&gt;</code></para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>.</para><para>Relies upon <code><link linkend="variable-all-selector">$tan:all-selector</link></code>, <code><link linkend="variable-token-definition-default">$tan:token-definition-default</link></code>, <code><link linkend="function-duplicate-items">tan:duplicate-items</link></code>, <code><link linkend="function-shallow-copy">tan:shallow-copy</link></code>, <code><link linkend="function-tokenize-text">tan:tokenize-text</link></code>, <code><link linkend="template-expand-reassigns">ŧ tan:expand-reassigns</link></code>, <code><link linkend="template-mark-reassigns">ŧ tan:mark-reassigns</link></code>, <code><link linkend="template-resolve-reference-tree-numerals">ŧ tan:resolve-reference-tree-numerals</link></code>, <code><link linkend="template-unmark-tokens">ŧ tan:unmark-tokens</link></code>.</para></section><section xml:id="template-dependency-expansion-normal"><title><code>ŧ tan:dependency-expansion-normal</code></title><bridgehead><code>TAN-fn-expand-files.xsl </code></bridgehead><para><code>&lt;xsl:template match='/*' mode='tan:core-expansion-normal tan:dependency-expansion-normal' /&gt;</code></para><bridgehead><code>TAN-fn-expand-normal.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:body' mode='tan:dependency-expansion-normal' /&gt;</code></para><para><code>&lt;xsl:template match='tan:div' mode='tan:dependency-expansion-normal' /&gt;</code></para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>.</para><para>Relies upon <code><link linkend="function-tokenize-text">tan:tokenize-text</link></code>.</para></section><section xml:id="template-dependency-expansion-verbose"><title><code>ŧ tan:dependency-expansion-verbose</code></title><bridgehead><code>TAN-fn-expand-verbose.xsl </code></bridgehead><para><code>&lt;xsl:template match='/tan:TAN-T | /tei:TEI' mode='tan:dependency-expansion-verbose' /&gt;</code></para><para><code>&lt;xsl:template match='tan:div' mode='tan:dependency-expansion-verbose' /&gt;</code></para><para><code>&lt;xsl:template match='tan:tok | tan:non-tok' mode='tan:dependency-expansion-verbose' /&gt;</code></para><para><code>&lt;xsl:template match='text()' mode='tan:dependency-expansion-verbose' /&gt;</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:template.</para><para>Relies upon <code><link linkend="function-tokenize-text">tan:tokenize-text</link></code>.</para></section><section xml:id="template-diff-a-map"><title><code>ŧ tan:diff-a-map</code></title><bridgehead><code>TAN-fn-strings-diff-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:diff' mode='tan:diff-a-map' /&gt;</code></para><para><code>&lt;xsl:template match='tan:b' mode='tan:diff-a-map' /&gt;</code></para><para><code>&lt;xsl:template match='tan:common[@_pos = '1']' priority='1' mode='tan:diff-a-map' /&gt;</code></para><para><code>&lt;xsl:template match='tan:common' mode='tan:diff-a-map' /&gt;</code></para><para><code>&lt;xsl:template match='tan:a' mode='tan:diff-a-map' /&gt;</code></para><para>Used by function <code>tan:diff-a-map()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-diff-to-delta"><title><code>ŧ tan:diff-to-delta</code></title><bridgehead><code>TAN-fn-strings-diff-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:diff' mode='tan:diff-to-delta' /&gt;</code></para><para>Used by function <code><link linkend="function-diff-to-delta">tan:diff-to-delta()</link></code>.</para><para>Relies upon <code><link linkend="function-checksum-fletcher-64">tan:checksum-fletcher-64</link></code>.</para></section><section xml:id="template-doc-nodes-on-new-lines"><title><code>ŧ tan:doc-nodes-on-new-lines</code></title><bridgehead><code>TAN-fn-file-output.xsl </code></bridgehead><para><code>&lt;xsl:template match='/node()' mode='tan:doc-nodes-on-new-lines' /&gt;</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:template.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-element-fingerprint"><title><code>ŧ tan:element-fingerprint</code></title><bridgehead><code>TAN-fn-nodes-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='*' mode='tan:element-fingerprint' /&gt;</code></para><para><code>&lt;xsl:template match='comment() | processing-instruction()' mode='tan:element-fingerprint' /&gt;</code></para><para><code>&lt;xsl:template match='text()' mode='tan:element-fingerprint' /&gt;</code></para><para>Used by function <code><link linkend="function-element-fingerprint">tan:element-fingerprint()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-element-to-error"><title><code>ŧ tan:element-to-error</code></title><bridgehead><code>TAN-core-errors.xsl </code></bridgehead><para><code>&lt;xsl:template match='*' mode='tan:element-to-error' /&gt;</code></para><para>Used by template <code><link linkend="template-tan-a-lm-expansion-terse">ŧ tan:tan-a-lm-expansion-terse</link></code>.</para><para>Relies upon <code><link linkend="variable-errors">$tan:errors</link></code>.</para></section><section xml:id="template-ellipses"><title><code>ŧ tan:ellipses</code></title><bridgehead><code>TAN-fn-strings-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='text()' mode='tan:ellipses' /&gt;</code></para><para>Used by template <code><link linkend="template-class-1-expansion-verbose-pass-3">ŧ tan:class-1-expansion-verbose-pass-3</link></code>, <code><link linkend="template-core-expansion-normal">ŧ tan:core-expansion-normal</link></code>.</para><para>Relies upon <code><link linkend="function-ellipses">tan:ellipses</link></code>.</para></section><section xml:id="template-evaluate-conditions"><title><code>ŧ tan:evaluate-conditions</code></title><bridgehead><code>TAN-fn-nodes-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='*' mode='tan:evaluate-conditions' /&gt;</code></para><para><code>&lt;xsl:template match='@*' mode='tan:evaluate-conditions' /&gt;</code></para><para><code>&lt;xsl:template match='@m-matches' mode='tan:evaluate-conditions' /&gt;</code></para><para><code>&lt;xsl:template match='@m-has-how-many-features | @m-has-how-many-codes' mode='tan:evaluate-conditions' /&gt;</code></para><para><code>&lt;xsl:template match='@m-has-features | @m-has-codes' mode='tan:evaluate-conditions' /&gt;</code></para><para><code>&lt;xsl:template match='@tok-matches' mode='tan:evaluate-conditions' /&gt;</code></para><para>Used by function <code>tan:all-conditions-hold-evaluation-loop()</code>.</para><para>Relies upon <code><link linkend="function-expand-numerical-expression">tan:expand-numerical-expression</link></code>.</para></section><section xml:id="template-expand-reassigns"><title><code>ŧ tan:expand-reassigns</code></title><bridgehead><code>TAN-fn-expand-terse-class-1.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:passage' mode='tan:expand-reassigns' /&gt;</code></para><para><code>&lt;xsl:template match='tan:from-tok' mode='tan:expand-reassigns' /&gt;</code></para><para><code>&lt;xsl:template match='tan:through-tok' mode='tan:expand-reassigns' /&gt;</code></para><para>Used by template <code><link linkend="template-dependency-adjustments-pass-2">ŧ tan:dependency-adjustments-pass-2</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-expand-standard-tan-voc"><title><code>ŧ tan:expand-standard-tan-voc</code></title><bridgehead><code>TAN-fn-resolve-files.xsl </code></bridgehead><para><code>&lt;xsl:template match='/*' mode='tan:expand-standard-tan-voc' /&gt;</code></para><para><code>&lt;xsl:template match='tan:body' mode='tan:expand-standard-tan-voc' /&gt;</code></para><para><code>&lt;xsl:template match='tan:item | tan:verb' mode='tan:expand-standard-tan-voc' /&gt;</code></para><para><code>&lt;xsl:template match='*[@href]' mode='tan:resolve-href tan:expand-standard-tan-voc' /&gt;</code></para><para>Used by variable <code><link linkend="variable-TAN-vocabularies">$tan:TAN-vocabularies</link></code>.</para><para>Relies upon <code><link linkend="function-base-uri">tan:base-uri</link></code>, <code><link linkend="function-shallow-copy">tan:shallow-copy</link></code>.</para></section><section xml:id="template-extract-essential-TAN-vocabulary"><title><code>ŧ tan:extract-essential-TAN-vocabulary</code></title><bridgehead><code>TAN-fn-resolve-files.xsl </code></bridgehead><para><code>&lt;xsl:template match='/tan:TAN-voc' mode='tan:extract-essential-TAN-vocabulary' /&gt;</code></para><para>Used by template <code><link linkend="template-resolve-critical-dependencies-loop">ŧ tan:resolve-critical-dependencies-loop</link></code>.</para><para>Relies upon <code><link linkend="template-first-stamp-shallow-skip">ŧ tan:first-stamp-shallow-skip</link></code>.</para></section><section xml:id="template-first-stamp-shallow-copy"><title><code>ŧ tan:first-stamp-shallow-copy</code></title><bridgehead><code>TAN-fn-resolve-files.xsl </code></bridgehead><para><code>&lt;xsl:template match='/*' mode='tan:first-stamp-shallow-skip tan:first-stamp-shallow-copy tan:resolve-href' /&gt;</code></para><para><code>&lt;xsl:template match='processing-instruction()' mode='tan:resolve-href tan:first-stamp-shallow-copy' /&gt;</code></para><para><code>&lt;xsl:template match='*' mode='tan:first-stamp-shallow-copy' /&gt;</code></para><para><code>&lt;xsl:template match='tan:head/tan:vocabulary[@which]' mode='tan:first-stamp-shallow-copy' /&gt;</code></para><para><code>&lt;xsl:template match='tan:name' mode='tan:first-stamp-shallow-copy' /&gt;</code></para><para><code>&lt;xsl:template match='tan:alias' mode='tan:first-stamp-shallow-copy' /&gt;</code></para><para>Used by template <code><link linkend="template-first-stamp-shallow-skip">ŧ tan:first-stamp-shallow-skip</link></code>, <code><link linkend="template-extract-essential-TAN-vocabulary">ŧ tan:extract-essential-TAN-vocabulary</link></code>.</para><para>Used by function <code><link linkend="function-tokenize-text">tan:tokenize-text()</link></code>, <code>tan:resolve-doc-loop()</code>, <code><link linkend="function-resolve-href">tan:resolve-href()</link></code>, <code><link linkend="function-get-1st-doc">tan:get-1st-doc()</link></code>.</para><para>Relies upon <code><link linkend="variable-TAN-vocabularies">$tan:TAN-vocabularies</link></code>, <code><link linkend="function-base-uri">tan:base-uri</link></code>, <code><link linkend="function-is-valid-uri">tan:is-valid-uri</link></code>, <code><link linkend="function-normalize-name">tan:normalize-name</link></code>.</para></section><section xml:id="template-first-stamp-shallow-skip"><title><code>ŧ tan:first-stamp-shallow-skip</code></title><bridgehead><code>TAN-fn-resolve-files.xsl </code></bridgehead><para><code>&lt;xsl:template match='/' mode='tan:first-stamp-shallow-skip' /&gt;</code></para><para><code>&lt;xsl:template match='*' mode='tan:first-stamp-shallow-skip' /&gt;</code></para><para><code>&lt;xsl:template match='tan:head' mode='tan:first-stamp-shallow-skip' /&gt;</code></para><para><code>&lt;xsl:template match='/*' mode='tan:first-stamp-shallow-skip tan:first-stamp-shallow-copy tan:resolve-href' /&gt;</code></para><para>Used by template <code><link linkend="template-extract-essential-TAN-vocabulary">ŧ tan:extract-essential-TAN-vocabulary</link></code>.</para><para>Used by function <code>tan:resolve-doc-loop()</code>.</para><para>Relies upon <code><link linkend="function-normalize-name">tan:normalize-name</link></code>, <code><link linkend="function-shallow-copy">tan:shallow-copy</link></code>, <code><link linkend="template-first-stamp-shallow-copy">ŧ tan:first-stamp-shallow-copy</link></code>.</para></section><section xml:id="template-fn-shallow-copy"><title><code>ŧ tan:fn-shallow-copy</code></title><bridgehead><code>TAN-fn-nodes-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='node() | document-node()' mode='tan:fn-shallow-copy' /&gt;</code></para><para>Used by function <code><link linkend="function-shallow-copy">tan:shallow-copy()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-fragment-to-text"><title><code>ŧ tan:fragment-to-text</code></title><bridgehead><code>TAN-fn-nodes-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='*' mode='tan:fragment-to-text' /&gt;</code></para><para><code>&lt;xsl:template match='@*' mode='tan:fragment-to-text' /&gt;</code></para><para><code>&lt;xsl:template match='comment()' mode='tan:fragment-to-text' /&gt;</code></para><para><code>&lt;xsl:template match='processing-instruction()' mode='tan:fragment-to-text' /&gt;</code></para><para><code>&lt;xsl:template match='text()' mode='tan:fragment-to-text' /&gt;</code></para><para>Used by function <code><link linkend="function-xml-to-string">tan:xml-to-string()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-get-and-resolve-dependency"><title><code>ŧ tan:get-and-resolve-dependency</code></title><bridgehead><code>TAN-fn-resolve-files.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:source | tan:morphology | tan:vocabulary | tan:key | tan:inclusion' mode='tan:get-and-resolve-dependency' /&gt;</code></para><para>Used by function <code>tan:get-and-resolve-dependency()</code>.</para><para>Relies upon <code><link linkend="variable-empty-doc">$tan:empty-doc</link></code>, <code><link linkend="function-element-vocabulary">tan:element-vocabulary</link></code>, <code><link linkend="function-get-1st-doc">tan:get-1st-doc</link></code>, <code><link linkend="function-normalize-tree-space">tan:normalize-tree-space</link></code>, <code><link linkend="function-resolve-doc">tan:resolve-doc</link></code>, <code><link linkend="function-shallow-copy">tan:shallow-copy</link></code>.</para></section><section xml:id="template-get-diff-stats"><title><code>ŧ tan:get-diff-stats</code></title><bridgehead><code>TAN-fn-strings-diff-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:stats | tan:witness | tan:stats/tan:diff | tan:length | tan:diff-count | tan:diff-length | tan:diff-portion' mode='tan:get-diff-stats' /&gt;</code></para><para><code>&lt;xsl:template match='tan:group/tan:diff' mode='tan:get-diff-stats' /&gt;</code></para><para><code>&lt;xsl:template match='text()' mode='tan:get-diff-stats' /&gt;</code></para><para>Used by function <code><link linkend="function-get-diff-stats">tan:get-diff-stats()</link></code>, <code><link linkend="function-get-collate-stats">tan:get-collate-stats()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-get-doc-history"><title><code>ŧ tan:get-doc-history</code></title><bridgehead><code>TAN-fn-time.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:tan-vocabulary | tan:inclusion/tei:* | tan:inclusion/tan:TAN-T | tan:inclusion/tan:TAN-A | tan:inclusion/tan:TAN-A-tok | tan:inclusion/tan:TAN-A-lm | tan:inclusion/tan:TAN-mor | tan:inclusion/tan:TAN-voc' mode='tan:get-doc-history' /&gt;</code></para><para><code>&lt;xsl:template match='*[@when or @ed-when or @accessed-when or @claim-when]' mode='tan:get-doc-history' /&gt;</code></para><para>Used by function <code><link linkend="function-get-doc-history">tan:get-doc-history()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-get-IRI-name"><title><code>ŧ tan:get-IRI-name</code></title><bridgehead><code>TAN-fn-search-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='xhtml:a | a[@href]' mode='tan:get-IRI-name' priority='2' /&gt;</code></para><para><code>&lt;xsl:template match='mods:mods' mode='tan:get-IRI-name' priority='2' /&gt;</code></para><para><code>&lt;xsl:template match='ul[@class = 'mw-search-results']/li' mode='tan:get-IRI-name' /&gt;</code></para><para>Used by function <code><link linkend="function-search-results-to-IRI-name-pattern">tan:search-results-to-IRI-name-pattern()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-html-class"><title><code>ŧ tan:html-class</code></title><bridgehead><code>TAN-fn-html-core.xsl </code></bridgehead><para><code>&lt;xsl:template match='*[@class]' mode='tan:html-class' /&gt;</code></para><para>Used by function <code>tan:find-class()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-imitate-validation"><title><code>ŧ tan:imitate-validation</code></title><bridgehead><code>TAN-fn-nodes-diagnostics.xsl </code></bridgehead><para><code>&lt;xsl:template match='*' mode='tan:imitate-validation' /&gt;</code></para><para>Used by variable <code><link linkend="variable-orig-self-validated">$tan:orig-self-validated</link></code>.</para><para>Relies upon <code><link linkend="variable-errors-to-squelch">$tan:errors-to-squelch</link></code>, <code><link linkend="variable-self-expanded">$tan:self-expanded</link></code>, <code><link linkend="function-get-via-q-ref">tan:get-via-q-ref</link></code>.</para></section><section xml:id="template-indent-items"><title><code>ŧ tan:indent-items</code></title><bridgehead><code>TAN-fn-nodes-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='*' mode='tan:indent-items' /&gt;</code></para><para><code>&lt;xsl:template match='text()' mode='tan:indent-items' /&gt;</code></para><para>Used by function <code><link linkend="function-copy-indentation">tan:copy-indentation()</link></code>.</para><para>Relies upon <code><link linkend="function-fill">tan:fill</link></code>.</para></section><section xml:id="template-infuse-diff-and-collate-stats"><title><code>ŧ tan:infuse-diff-and-collate-stats</code></title><bridgehead><code>TAN-fn-strings-diff-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='*[tan:diff[not(*)]] | *[tan:collation[not(*/tan:txt)]]' priority='1' mode='tan:infuse-diff-and-collate-stats' /&gt;</code></para><para><code>&lt;xsl:template match='*[tan:diff[tan:a][not(tan:b) and not(tan:common)]] | *[tan:diff[tan:b][not(tan:a) and not(tan:common)]]' priority='1' mode='tan:infuse-diff-and-collate-stats' /&gt;</code></para><para><code>&lt;xsl:template match='*[tan:diff]' mode='tan:infuse-diff-and-collate-stats' /&gt;</code></para><para><code>&lt;xsl:template match='tan:diff' mode='tan:infuse-diff-and-collate-stats' /&gt;</code></para><para><code>&lt;xsl:template match='*[tan:collation]' mode='tan:infuse-diff-and-collate-stats' /&gt;</code></para><para>Used by function <code>tan:infuse-diff-and-collate-stats()</code>.</para><para>Relies upon <code><link linkend="function-distinct-items">tan:distinct-items</link></code>, <code><link linkend="function-stamp-diff-with-text-data">tan:stamp-diff-with-text-data</link></code>.</para></section><section xml:id="template-infuse-tokenized-text"><title><code>ŧ tan:infuse-tokenized-text</code></title><bridgehead><code>TAN-fn-nodes-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='@_pos | @_len' mode='tan:infuse-tokenized-text' /&gt;</code></para><para><code>&lt;xsl:template match='*[@_pos][text()]' mode='tan:infuse-tokenized-text' /&gt;</code></para><para><code>&lt;xsl:template match='tan:_text' priority='1' mode='tan:infuse-tokenized-text' /&gt;</code></para><para>Used by function <code><link linkend="function-infuse-tree">tan:infuse-tree()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-insert-content"><title><code>ŧ tan:insert-content</code></title><bridgehead><code>TAN-fn-nodes-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='*' mode='tan:insert-content' /&gt;</code></para><para>Used by function <code><link linkend="function-insert-as-last-child">tan:insert-as-last-child()</link></code>, <code><link linkend="function-insert-as-first-child">tan:insert-as-first-child()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-integers-to-expression"><title><code>ŧ tan:integers-to-expression</code></title><bridgehead><code>TAN-fn-numerals-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:n' mode='tan:integers-to-expression' /&gt;</code></para><para>Used by function <code><link linkend="function-integers-to-expression">tan:integers-to-expression()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-itemize-lms"><title><code>ŧ tan:itemize-lms</code></title><bridgehead><code>TAN-fn-language-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:ana' mode='tan:itemize-lms' /&gt;</code></para><para><code>&lt;xsl:template match='tan:l' mode='tan:itemize-lms' /&gt;</code></para><para>Used by function <code>tan:merge-anas()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-levenshtein-distance"><title><code>ŧ tan:levenshtein-distance</code></title><bridgehead><code>TAN-fn-strings-diff-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:a' mode='tan:levenshtein-distance' /&gt;</code></para><para><code>&lt;xsl:template match='tan:b' mode='tan:levenshtein-distance' /&gt;</code></para><para>Used by function <code><link linkend="function-levenshtein-distance">tan:levenshtein-distance()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-make-non-mixed"><title><code>ŧ tan:make-non-mixed</code></title><bridgehead><code>TAN-fn-nodes-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='*[text()]' mode='tan:make-non-mixed' /&gt;</code></para><para><code>&lt;xsl:template match='text()' mode='tan:make-non-mixed' /&gt;</code></para><para>Used by function <code><link linkend="function-make-non-mixed">tan:make-non-mixed()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-map-and-array-to-xml"><title><code>ŧ tan:map-and-array-to-xml</code></title><bridgehead><code>TAN-fn-maps-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='.[. instance of map(*)]' mode='tan:map-and-array-to-xml' /&gt;</code></para><para><code>&lt;xsl:template match='.[. instance of array(*)]' mode='tan:map-and-array-to-xml' /&gt;</code></para><para>Used by function <code><link linkend="function-array-to-xml">tan:array-to-xml()</link></code>, <code><link linkend="function-map-to-xml">tan:map-to-xml()</link></code>.</para><para>Relies upon <code><link linkend="function-item-type">tan:item-type</link></code>.</para></section><section xml:id="template-map-keys"><title><code>ŧ tan:map-keys</code></title><bridgehead><code>TAN-fn-maps-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='.[. instance of map(*)]' mode='tan:map-keys' /&gt;</code></para><para>Used by function <code><link linkend="function-map-keys">tan:map-keys()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-map-put"><title><code>ŧ tan:map-put</code></title><bridgehead><code>TAN-fn-arrays-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='.[. instance of array(*)]' priority='-1' mode='tan:shallow-copy tan:map-put tan:map-remove' /&gt;</code></para><bridgehead><code>TAN-fn-maps-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='.[. instance of map(*)]' priority='-1' mode='tan:shallow-copy tan:map-put tan:array-to-map' /&gt;</code></para><para><code>&lt;xsl:template match='.[. instance of map(*)]' mode='tan:map-put' /&gt;</code></para><para>Used by function <code><link linkend="function-map-remove">tan:map-remove()</link></code>, <code><link linkend="function-map-put">tan:map-put()</link></code>.</para><para>Relies upon <code><link linkend="function-item-type">tan:item-type</link></code>.</para></section><section xml:id="template-map-remove"><title><code>ŧ tan:map-remove</code></title><bridgehead><code>TAN-fn-arrays-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='.[. instance of array(*)]' priority='-1' mode='tan:shallow-copy tan:map-put tan:map-remove' /&gt;</code></para><bridgehead><code>TAN-fn-maps-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='.[. instance of map(*)]' mode='tan:map-remove' /&gt;</code></para><para>Used by function <code><link linkend="function-map-remove">tan:map-remove()</link></code>, <code><link linkend="function-map-put">tan:map-put()</link></code>.</para><para>Relies upon <code><link linkend="function-item-type">tan:item-type</link></code>.</para></section><section xml:id="template-mark-dependencies-for-validation"><title><code>ŧ tan:mark-dependencies-for-validation</code></title><bridgehead><code>TAN-fn-expand-terse-class-1.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:reassign | tan:equate | tan:skip | tan:rename | tan:passage' mode='tan:mark-dependencies-for-validation tan:mark-dependencies-for-validation-skip-divs' /&gt;</code></para><para><code>&lt;xsl:template match='/*' mode='tan:mark-dependencies-for-validation' /&gt;</code></para><para><code>&lt;xsl:template match='tan:TAN-T/tan:body' mode='tan:mark-dependencies-for-validation' /&gt;</code></para><para><code>&lt;xsl:template match='tan:div' mode='tan:mark-dependencies-for-validation' /&gt;</code></para><para>Used by template <code><link linkend="template-mark-dependencies-pass-2-for-validation">ŧ tan:mark-dependencies-pass-2-for-validation</link></code>, <code><link linkend="template-mark-dependencies-pass-1">ŧ tan:mark-dependencies-pass-1</link></code>, <code><link linkend="template-mark-dependencies-for-validation">ŧ tan:mark-dependencies-for-validation</link></code>.</para><para>Relies upon <code><link linkend="function-shallow-copy">tan:shallow-copy</link></code>, <code><link linkend="function-tokenize-text">tan:tokenize-text</link></code>, <code><link linkend="function-xml-to-string">tan:xml-to-string</link></code>, <code><link linkend="template-mark-dependencies-for-validation-skip-divs">ŧ tan:mark-dependencies-for-validation-skip-divs</link></code>.</para></section><section xml:id="template-mark-dependencies-for-validation-skip-divs"><title><code>ŧ tan:mark-dependencies-for-validation-skip-divs</code></title><bridgehead><code>TAN-fn-expand-terse-class-1.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:reassign | tan:equate | tan:skip | tan:rename | tan:passage' mode='tan:mark-dependencies-for-validation tan:mark-dependencies-for-validation-skip-divs' /&gt;</code></para><para><code>&lt;xsl:template match='tan:div' mode='tan:mark-dependencies-for-validation-skip-divs' /&gt;</code></para><para>Used by template <code><link linkend="template-mark-dependencies-pass-2-for-validation">ŧ tan:mark-dependencies-pass-2-for-validation</link></code>, <code><link linkend="template-mark-dependencies-pass-1">ŧ tan:mark-dependencies-pass-1</link></code>, <code><link linkend="template-mark-dependencies-for-validation">ŧ tan:mark-dependencies-for-validation</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-mark-dependencies-pass-1"><title><code>ŧ tan:mark-dependencies-pass-1</code></title><bridgehead><code>TAN-fn-expand-terse-class-1.xsl </code></bridgehead><para><code>&lt;xsl:template match='/' priority='1' mode='tan:mark-dependencies-pass-1' /&gt;</code></para><para><code>&lt;xsl:template match='tan:body' mode='tan:mark-dependencies-pass-1' /&gt;</code></para><para><code>&lt;xsl:template match='tan:div' mode='tan:mark-dependencies-pass-1' /&gt;</code></para><para><code>&lt;xsl:template match='tan:div[not(tan:div)]/text()' mode='tan:mark-dependencies-pass-1' /&gt;</code></para><bridgehead><code>TAN-fn-expand-terse-class-3.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:TAN-mor' mode='tan:mark-dependencies-pass-1 tan:mark-dependencies-pass-2' /&gt;</code></para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>.</para><para>Relies upon <code><link linkend="variable-token-definition-default">$tan:token-definition-default</link></code>, <code><link linkend="function-shallow-copy">tan:shallow-copy</link></code>, <code><link linkend="function-tokenize-text">tan:tokenize-text</link></code>, <code><link linkend="function-vocabulary">tan:vocabulary</link></code>, <code><link linkend="function-xml-to-string">tan:xml-to-string</link></code>, <code><link linkend="template-mark-dependencies-for-validation">ŧ tan:mark-dependencies-for-validation</link></code>, <code><link linkend="template-resolve-reference-tree-numerals">ŧ tan:resolve-reference-tree-numerals</link></code>.</para></section><section xml:id="template-mark-dependencies-pass-2"><title><code>ŧ tan:mark-dependencies-pass-2</code></title><bridgehead><code>TAN-fn-expand-terse-class-1.xsl </code></bridgehead><para><code>&lt;xsl:template match='document-node()[tan:TAN-T]' mode='tan:mark-dependencies-pass-2' /&gt;</code></para><para><code>&lt;xsl:template match='tan:div[not(tan:hold)]' mode='tan:mark-dependencies-pass-2' /&gt;</code></para><para><code>&lt;xsl:template match='*[tan:hold]' mode='tan:mark-dependencies-pass-2' /&gt;</code></para><para><code>&lt;xsl:template match='tan:hold' mode='tan:mark-dependencies-pass-2' /&gt;</code></para><para><code>&lt;xsl:template match='tan:tok' mode='tan:mark-dependencies-pass-2' /&gt;</code></para><bridgehead><code>TAN-fn-expand-terse-class-3.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:TAN-mor' mode='tan:mark-dependencies-pass-1 tan:mark-dependencies-pass-2' /&gt;</code></para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>.</para><para>Relies upon <code><link linkend="function-chop-string">tan:chop-string</link></code>, <code><link linkend="template-convert-tok-to-push">ŧ tan:convert-tok-to-push</link></code>, <code><link linkend="template-mark-dependencies-pass-2-from-tos">ŧ tan:mark-dependencies-pass-2-from-tos</link></code>.</para></section><section xml:id="template-mark-dependencies-pass-2-for-validation"><title><code>ŧ tan:mark-dependencies-pass-2-for-validation</code></title><bridgehead><code>TAN-fn-expand-terse-class-1.xsl </code></bridgehead><para><code>&lt;xsl:template match='/' priority='1' mode='tan:mark-dependencies-pass-2-for-validation' /&gt;</code></para><para><code>&lt;xsl:template match='tan:div/tan:n | tan:div/tan:ref | tan:non-tok | tan:div/tan:tok[not(*)]' mode='tan:mark-dependencies-pass-2-for-validation' /&gt;</code></para><para><code>&lt;xsl:template match='tan:body' mode='tan:mark-dependencies-pass-2-for-validation' /&gt;</code></para><para><code>&lt;xsl:template match='tan:div' mode='tan:mark-dependencies-pass-2-for-validation' /&gt;</code></para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>.</para><para>Relies upon <code><link linkend="function-expand-numerical-expression">tan:expand-numerical-expression</link></code>, <code><link linkend="template-mark-dependencies-for-validation-skip-divs">ŧ tan:mark-dependencies-for-validation-skip-divs</link></code>.</para></section><section xml:id="template-mark-dependencies-pass-2-from-tos"><title><code>ŧ tan:mark-dependencies-pass-2-from-tos</code></title><bridgehead><code>TAN-fn-expand-terse-class-1.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:body | tan:div' mode='tan:mark-dependencies-pass-2-from-tos' /&gt;</code></para><para>Used by template <code><link linkend="template-mark-dependencies-pass-2">ŧ tan:mark-dependencies-pass-2</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-mark-reassigns"><title><code>ŧ tan:mark-reassigns</code></title><bridgehead><code>TAN-fn-expand-terse-class-1.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:tok | tan:non-tok' mode='tan:mark-reassigns' /&gt;</code></para><para>Used by template <code><link linkend="template-dependency-adjustments-pass-2">ŧ tan:dependency-adjustments-pass-2</link></code>.</para><para>Relies upon <code><link linkend="function-copy-of-except">tan:copy-of-except</link></code>, <code><link linkend="function-shallow-copy">tan:shallow-copy</link></code>.</para></section><section xml:id="template-mark-removed-characters"><title><code>ŧ tan:mark-removed-characters</code></title><bridgehead><code>TAN-fn-nodes-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:_removed' mode='tan:mark-removed-characters' /&gt;</code></para><para><code>&lt;xsl:template match='*[tan:_removed]' mode='tan:mark-removed-characters' /&gt;</code></para><para>Used by template <code><link linkend="template-normalize-tree-space">ŧ tan:normalize-tree-space</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-mark-tok-chars"><title><code>ŧ tan:mark-tok-chars</code></title><bridgehead><code>TAN-fn-expand-terse-class-1.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:chars' mode='tan:mark-tok-chars' /&gt;</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:template.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-mark-tok-pos"><title><code>ŧ tan:mark-tok-pos</code></title><bridgehead><code>TAN-fn-expand-terse-class-1.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:pos' mode='tan:mark-tok-pos' /&gt;</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:template.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-merge-divs"><title><code>ŧ tan:merge-divs</code></title><bridgehead><code>TAN-fn-merging.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:body' mode='tan:merge-divs' /&gt;</code></para><para><code>&lt;xsl:template match='tan:group' mode='tan:merge-divs' /&gt;</code></para><para><code>&lt;xsl:template match='tan:div[not(tan:div)]' mode='tan:merge-divs' /&gt;</code></para><para>Used by function <code><link linkend="function-merge-divs">tan:merge-divs()</link></code>.</para><para>Relies upon <code><link linkend="variable-separator-hierarchy">$tan:separator-hierarchy</link></code>, <code><link linkend="function-group-divs">tan:group-divs</link></code>, <code><link linkend="function-text-join">tan:text-join</link></code>, <code><link linkend="template-strip-duplicate-children-by-attribute-value">ŧ tan:strip-duplicate-children-by-attribute-value</link></code>.</para></section><section xml:id="template-merge-tan-doc-leaf-divs"><title><code>ŧ tan:merge-tan-doc-leaf-divs</code></title><bridgehead><code>TAN-fn-merging.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:div' mode='tan:merge-tan-doc-leaf-divs' /&gt;</code></para><para><code>&lt;xsl:template match='tan:ref[tan:n]' mode='tan:merge-tan-docs tan:merge-tan-doc-leaf-divs' /&gt;</code></para><para><code>&lt;xsl:template match='tan:_weight | tan:_rel-pos | tan:_n-pos | tan:_n-integer | tan:non-numbered' mode='tan:merge-tan-docs tan:merge-tan-doc-leaf-divs' /&gt;</code></para><para>Used by template <code><link linkend="template-merge-tan-docs">ŧ tan:merge-tan-docs</link></code>.</para><para>Relies upon <code><link linkend="variable-separator-hierarchy">$tan:separator-hierarchy</link></code>.</para></section><section xml:id="template-merge-tan-docs"><title><code>ŧ tan:merge-tan-docs</code></title><bridgehead><code>TAN-fn-merging.xsl </code></bridgehead><para><code>&lt;xsl:template match='document-node()' mode='tan:merge-tan-docs' /&gt;</code></para><para><code>&lt;xsl:template match='/tan:TAN-T | /tei:TEI' mode='tan:merge-tan-docs' /&gt;</code></para><para><code>&lt;xsl:template match='/tan:TAN-T/tan:head | tei:TEI/tan:head' mode='tan:merge-tan-docs' /&gt;</code></para><para><code>&lt;xsl:template match='tan:body[tan:div] | tan:div' mode='tan:merge-tan-docs' /&gt;</code></para><para><code>&lt;xsl:template match='tan:ref[tan:n]' mode='tan:merge-tan-docs tan:merge-tan-doc-leaf-divs' /&gt;</code></para><para><code>&lt;xsl:template match='tan:_weight | tan:_rel-pos | tan:_n-pos | tan:_n-integer | tan:non-numbered' mode='tan:merge-tan-docs tan:merge-tan-doc-leaf-divs' /&gt;</code></para><para>Used by function <code><link linkend="function-merge-expanded-docs">tan:merge-expanded-docs()</link></code>.</para><para>Relies upon <code><link linkend="variable-separator-hierarchy">$tan:separator-hierarchy</link></code>, <code><link linkend="function-distinct-items">tan:distinct-items</link></code>, <code><link linkend="template-merge-tan-doc-leaf-divs">ŧ tan:merge-tan-doc-leaf-divs</link></code>, <code><link linkend="template-prep-class-1-files-for-merge">ŧ tan:prep-class-1-files-for-merge</link></code>.</para></section><section xml:id="template-normalize-non-mixed-content-space"><title><code>ŧ tan:normalize-non-mixed-content-space</code></title><bridgehead><code>TAN-fn-nodes-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='text()' mode='tan:normalize-non-mixed-content-space' /&gt;</code></para><para>Used by template <code><link linkend="template-normalize-tree-space">ŧ tan:normalize-tree-space</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-normalize-tree-space"><title><code>ŧ tan:normalize-tree-space</code></title><bridgehead><code>TAN-fn-nodes-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:head | tan:TAN-voc | tan:TAN-A | tan:TAN-A-tok | tan:TAN-A-lm |        tan:TAN-mor' priority='1' mode='tan:normalize-tree-space' /&gt;</code></para><para><code>&lt;xsl:template match='tan:TAN-T[tan:expanded]' mode='tan:normalize-tree-space' /&gt;</code></para><para><code>&lt;xsl:template match='*[@xml:space eq 'preserve']' priority='1' mode='tan:normalize-tree-space tan:selectively-adjust-tei-space' /&gt;</code></para><para><code>&lt;xsl:template match='*:div[not(*:div)] | *[text()[matches(., '\S')]]' mode='tan:normalize-tree-space' /&gt;</code></para><para>Used by function <code><link linkend="function-normalize-tree-space">tan:normalize-tree-space()</link></code>.</para><para>Relies upon <code><link linkend="variable-special-end-div-chars-regex">$tan:special-end-div-chars-regex</link></code>, <code><link linkend="function-sequence-to-tree">tan:sequence-to-tree</link></code>, <code><link linkend="function-tree-to-sequence">tan:tree-to-sequence</link></code>, <code><link linkend="template-mark-removed-characters">ŧ tan:mark-removed-characters</link></code>, <code><link linkend="template-normalize-non-mixed-content-space">ŧ tan:normalize-non-mixed-content-space</link></code>.</para></section><section xml:id="template-normalize-unicode"><title><code>ŧ tan:normalize-unicode</code></title><bridgehead><code>TAN-fn-strings-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='text()' mode='tan:normalize-unicode' /&gt;</code></para><para><code>&lt;xsl:template match='.[. instance of xs:string]' mode='tan:normalize-unicode' /&gt;</code></para><para>Used by function <code><link linkend="function-normalize-unicode">tan:normalize-unicode()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-parse-a-hrefs"><title><code>ŧ tan:parse-a-hrefs</code></title><bridgehead><code>TAN-fn-html-core.xsl </code></bridgehead><para><code>&lt;xsl:template match='html:a' mode='tan:parse-a-hrefs' /&gt;</code></para><para><code>&lt;xsl:template match='.[. instance of xs:string]' mode='tan:parse-a-hrefs' /&gt;</code></para><para><code>&lt;xsl:template match='text()' mode='tan:parse-a-hrefs' /&gt;</code></para><para>Used by function <code><link linkend="function-convert-to-html">tan:convert-to-html()</link></code>.</para><para>Relies upon <code><link linkend="function-parse-a-hrefs">tan:parse-a-hrefs</link></code>.</para></section><section xml:id="template-parse-lf-references"><title><code>ŧ tan:parse-lf-references</code></title><bridgehead><code>TAN-fn-uris-writing-fragids.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:reference' mode='tan:parse-lf-references' /&gt;</code></para><para>Used by function <code>tan:parse-lf-uri()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-pluck"><title><code>ŧ tan:pluck</code></title><bridgehead><code>TAN-fn-nodes-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='*' mode='tan:pluck' /&gt;</code></para><para><code>&lt;xsl:template match='text()' mode='tan:pluck' /&gt;</code></para><para><code>&lt;xsl:template match='comment() | processing-instruction()' mode='tan:pluck' /&gt;</code></para><para>Used by function <code><link linkend="function-pluck">tan:pluck()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-prefix-attr-include"><title><code>ŧ tan:prefix-attr-include</code></title><bridgehead><code>TAN-fn-resolve-files.xsl </code></bridgehead><para><code>&lt;xsl:template match='*[@include]' mode='tan:prefix-attr-include' /&gt;</code></para><para>Used by template <code><link linkend="template-apply-inclusions-and-adjust-vocabulary">ŧ tan:apply-inclusions-and-adjust-vocabulary</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-prep-class-1-files-for-merge"><title><code>ŧ tan:prep-class-1-files-for-merge</code></title><bridgehead><code>TAN-fn-merging.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:div[not(tan:div)][not(text())][not(tan:tok)][not(tei:*)]' mode='tan:prep-class-1-files-for-merge' /&gt;</code></para><para><code>&lt;xsl:template match='tan:div' mode='tan:prep-class-1-files-for-merge' /&gt;</code></para><para><code>&lt;xsl:template match='tan:ref' mode='tan:prep-class-1-files-for-merge' /&gt;</code></para><para>Used by template <code><link linkend="template-merge-tan-docs">ŧ tan:merge-tan-docs</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-prepare-to-convert-to-html-pass-1"><title><code>ŧ tan:prepare-to-convert-to-html-pass-1</code></title><bridgehead><code>TAN-fn-html-core.xsl </code></bridgehead><para><code>&lt;xsl:template match='*[@href]' priority='1' mode='tan:prepare-to-convert-to-html-pass-1' /&gt;</code></para><para><code>&lt;xsl:template match='*' mode='tan:prepare-to-convert-to-html-pass-1' /&gt;</code></para><para>Used by function <code>tan:prepare-to-convert-to-html()</code>.</para><para>Relies upon <code><link linkend="variable-excluded-class-characters-regex">$tan:excluded-class-characters-regex</link></code>.</para></section><section xml:id="template-prepare-to-convert-to-html-pass-2"><title><code>ŧ tan:prepare-to-convert-to-html-pass-2</code></title><bridgehead><code>TAN-fn-html-core.xsl </code></bridgehead><para><code>&lt;xsl:template match='@*' mode='tan:prepare-to-convert-to-html-pass-2' /&gt;</code></para><para><code>&lt;xsl:template match='*' mode='tan:prepare-to-convert-to-html-pass-2' /&gt;</code></para><para>Used by function <code>tan:prepare-to-convert-to-html()</code>.</para><para>Relies upon <code><link linkend="variable-attributes-to-preserve">$attributes-to-preserve</link></code>.</para></section><section xml:id="template-prepare-to-convert-to-html-pass-3"><title><code>ŧ tan:prepare-to-convert-to-html-pass-3</code></title><bridgehead><code>TAN-fn-html-core.xsl </code></bridgehead><para><code>&lt;xsl:template match='*' mode='tan:prepare-to-convert-to-html-pass-3' /&gt;</code></para><para>Used by function <code>tan:prepare-to-convert-to-html()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-prepend-error-message"><title><code>ŧ tan:prepend-error-message</code></title><bridgehead><code>TAN-fn-expand-files.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:error | tan:help | tan:warning | tan:fix | tan:fatal | tan:info' priority='-1' mode='tan:prepend-error-message' /&gt;</code></para><para><code>&lt;xsl:template match='tan:warning[not(tan:message)] | tan:error[not(tan:message)] | tan:fatal[not(tan:message)] | tan:help[not(tan:message)]' mode='tan:prepend-error-message' /&gt;</code></para><para><code>&lt;xsl:template match='tan:message/text()' mode='tan:prepend-error-message' /&gt;</code></para><para>Used by template <code><link linkend="template-core-expansion-verbose">ŧ tan:core-expansion-verbose</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-prepend-line-break"><title><code>ŧ tan:prepend-line-break</code></title><bridgehead><code>TAN-fn-nodes-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='* | processing-instruction() | comment()' mode='tan:prepend-line-break' /&gt;</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:template.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-process-appended-div"><title><code>ŧ tan:process-appended-div</code></title><bridgehead><code>TAN-fn-expand-terse-class-1.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:group' mode='tan:process-appended-div' /&gt;</code></para><para><code>&lt;xsl:template match='tan:div' mode='tan:process-appended-div' /&gt;</code></para><para>Used by template <code><link linkend="template-reset-hierarchy">ŧ tan:reset-hierarchy</link></code>.</para><para>Relies upon <code><link linkend="variable-separator-hierarchy">$tan:separator-hierarchy</link></code>, <code><link linkend="template-strip-divs-to-reset">ŧ tan:strip-divs-to-reset</link></code>.</para></section><section xml:id="template-process-merged-div"><title><code>ŧ tan:process-merged-div</code></title><bridgehead><code>TAN-fn-expand-terse-class-1.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:div' mode='tan:process-merged-div' /&gt;</code></para><para>Used by template <code><link linkend="template-reset-hierarchy">ŧ tan:reset-hierarchy</link></code>.</para><para>Relies upon <code><link linkend="template-strip-divs-to-reset">ŧ tan:strip-divs-to-reset</link></code>.</para></section><section xml:id="template-rebuild-div-chain"><title><code>ŧ tan:rebuild-div-chain</code></title><bridgehead><code>TAN-fn-expand-terse-class-1.xsl </code></bridgehead><para><code>&lt;xsl:template match='*:div' mode='tan:rebuild-div-chain' /&gt;</code></para><para>Used by template <code><link linkend="template-rebuild-divs-with-ref-aliases">ŧ tan:rebuild-divs-with-ref-aliases</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-rebuild-divs-with-ref-aliases"><title><code>ŧ tan:rebuild-divs-with-ref-aliases</code></title><bridgehead><code>TAN-fn-expand-terse-class-1.xsl </code></bridgehead><para><code>&lt;xsl:template match='*:div[@ref-alias]' mode='tan:rebuild-divs-with-ref-aliases' /&gt;</code></para><para>Used by template <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code> tan:dependency-adjustments-pass-1.</para><para>Relies upon <code><link linkend="template-rebuild-div-chain">ŧ tan:rebuild-div-chain</link></code>.</para></section><section xml:id="template-recheck-chopped-tree"><title><code>ŧ tan:recheck-chopped-tree</code></title><bridgehead><code>TAN-fn-nodes-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='*[@_recheck]' mode='tan:recheck-chopped-tree' /&gt;</code></para><para>Used by function <code><link linkend="function-chop-tree">tan:chop-tree()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-relativize-hrefs"><title><code>ŧ tan:relativize-hrefs</code></title><bridgehead><code>TAN-fn-uris-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='processing-instruction()' mode='tan:relativize-hrefs' /&gt;</code></para><para><code>&lt;xsl:template match='@href | html:script/@src' mode='tan:relativize-hrefs' /&gt;</code></para><para>Used by function <code><link linkend="function-relativize-hrefs">tan:relativize-hrefs()</link></code>.</para><para>Relies upon <code><link linkend="function-uri-is-resolved">tan:uri-is-resolved</link></code>, <code><link linkend="function-uri-relative-to">tan:uri-relative-to</link></code>.</para></section><section xml:id="template-remove-duplicate-siblings"><title><code>ŧ tan:remove-duplicate-siblings</code></title><bridgehead><code>TAN-fn-nodes-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='*' mode='tan:remove-duplicate-siblings' /&gt;</code></para><para>Used by function <code><link linkend="function-remove-duplicate-siblings">tan:remove-duplicate-siblings()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-remove-first-token"><title><code>ŧ tan:remove-first-token</code></title><bridgehead><code>TAN-fn-expand-terse-class-1.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:div[not(tan:div)]' mode='tan:remove-first-token' /&gt;</code></para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-remove-inclusions"><title><code>ŧ tan:remove-inclusions</code></title><bridgehead><code>TAN-fn-expand-files.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:inclusion' mode='tan:remove-inclusions' /&gt;</code></para><para>Used by template <code><link linkend="template-core-expansion-terse-attributes">ŧ tan:core-expansion-terse-attributes</link></code>.</para><para>Used by function <code><link linkend="function-attribute-vocabulary">tan:attribute-vocabulary()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-replace-collation"><title><code>ŧ tan:replace-collation</code></title><bridgehead><code>TAN-fn-strings-collate-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:collation' mode='tan:replace-collation' /&gt;</code></para><para>Used by function <code><link linkend="function-replace-collation">tan:replace-collation()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-replace-diff"><title><code>ŧ tan:replace-diff</code></title><bridgehead><code>TAN-fn-strings-diff-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:common' mode='tan:replace-diff' /&gt;</code></para><para><code>&lt;xsl:template match='tan:a' mode='tan:replace-diff' /&gt;</code></para><para><code>&lt;xsl:template match='tan:b' mode='tan:replace-diff' /&gt;</code></para><para>Used by function <code><link linkend="function-replace-diff">tan:replace-diff()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-replace-expanded-class-1"><title><code>ŧ tan:replace-expanded-class-1</code></title><bridgehead><code>TAN-fn-nodes-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='*[@_pos]' mode='tan:replace-expanded-class-1' /&gt;</code></para><para><code>&lt;xsl:template match='tan:div[not(tan:div)]' priority='1' mode='tan:replace-expanded-class-1' /&gt;</code></para><para>Used by function <code><link linkend="function-replace-expanded-class-1-body">tan:replace-expanded-class-1-body()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-reset-hierarchy"><title><code>ŧ tan:reset-hierarchy</code></title><bridgehead><code>TAN-fn-expand-terse-class-1.xsl </code></bridgehead><para><code>&lt;xsl:template match='/' mode='tan:reset-hierarchy' /&gt;</code></para><para><code>&lt;xsl:template match='tan:head' mode='tan:reset-hierarchy' /&gt;</code></para><para><code>&lt;xsl:template match='tan:div[tan:ref/@reset]' mode='tan:reset-hierarchy tan:clean-reset-divs-2' /&gt;</code></para><para><code>&lt;xsl:template match='tan:body | tan:div' mode='tan:reset-hierarchy' /&gt;</code></para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>, <code>tan:reset-hierarchy-loop()</code>, <code>tan:reset-hierarchy()</code>.</para><para>Relies upon <code><link linkend="template-process-appended-div">ŧ tan:process-appended-div</link></code>, <code><link linkend="template-process-merged-div">ŧ tan:process-merged-div</link></code>.</para></section><section xml:id="template-resolve-critical-dependencies-loop"><title><code>ŧ tan:resolve-critical-dependencies-loop</code></title><bridgehead><code>TAN-fn-resolve-files.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:inclusion[tan:location] | tan:vocabulary[tan:location]' mode='tan:resolve-critical-dependencies-loop' /&gt;</code></para><para><code>&lt;xsl:template match='tan:inclusion/tan:IRI | tan:vocabulary/tan:IRI' mode='tan:resolve-critical-dependencies-loop' /&gt;</code></para><para><code>&lt;xsl:template match='tan:inclusion/tan:location[@href] | tan:vocabulary/tan:location[@href]' mode='tan:resolve-critical-dependencies-loop' /&gt;</code></para><para><code>&lt;xsl:template match='tan:vocabulary-key' mode='tan:resolve-critical-dependencies-loop' /&gt;</code></para><para>Used by function <code>tan:resolve-doc-loop()</code>.</para><para>Relies upon <code><link linkend="variable-TAN-version">$tan:TAN-version</link></code>, <code><link linkend="variable-TAN-vocabularies">$tan:TAN-vocabularies</link></code>, <code><link linkend="function-base-uri">tan:base-uri</link></code>, <code><link linkend="function-get-1st-doc">tan:get-1st-doc</link></code>, <code><link linkend="function-is-valid-uri">tan:is-valid-uri</link></code>, <code><link linkend="function-shallow-copy">tan:shallow-copy</link></code>, <code><link linkend="template-extract-essential-TAN-vocabulary">ŧ tan:extract-essential-TAN-vocabulary</link></code>.</para></section><section xml:id="template-resolve-href"><title><code>ŧ tan:resolve-href</code></title><bridgehead><code>TAN-fn-resolve-files.xsl </code></bridgehead><para><code>&lt;xsl:template match='/*' mode='tan:first-stamp-shallow-skip tan:first-stamp-shallow-copy tan:resolve-href' /&gt;</code></para><para><code>&lt;xsl:template match='processing-instruction()' mode='tan:resolve-href tan:first-stamp-shallow-copy' /&gt;</code></para><para><code>&lt;xsl:template match='*[@href]' mode='tan:resolve-href tan:expand-standard-tan-voc' /&gt;</code></para><para>Used by template <code><link linkend="template-first-stamp-shallow-skip">ŧ tan:first-stamp-shallow-skip</link></code>, <code><link linkend="template-extract-essential-TAN-vocabulary">ŧ tan:extract-essential-TAN-vocabulary</link></code>.</para><para>Used by function <code><link linkend="function-tokenize-text">tan:tokenize-text()</link></code>, <code>tan:resolve-doc-loop()</code>, <code><link linkend="function-resolve-href">tan:resolve-href()</link></code>, <code><link linkend="function-get-1st-doc">tan:get-1st-doc()</link></code>.</para><para>Relies upon <code><link linkend="function-base-uri">tan:base-uri</link></code>, <code><link linkend="function-shallow-copy">tan:shallow-copy</link></code>.</para></section><section xml:id="template-resolve-numerals"><title><code>ŧ tan:resolve-numerals</code></title><bridgehead><code>TAN-fn-expand-terse-class-1.xsl </code></bridgehead><para><code>&lt;xsl:template match='tei:div[not(tei:div)]/tei:*' priority='1' mode='tan:resolve-numerals tan:core-expansion-terse-attributes' /&gt;</code></para><bridgehead><code>TAN-fn-resolve-files.xsl </code></bridgehead><para><code>&lt;xsl:template match='/*' priority='1' mode='tan:resolve-numerals' /&gt;</code></para><para><code>&lt;xsl:template match='*[@include] | tan:inclusion' priority='1' mode='tan:resolve-numerals' /&gt;</code></para><para><code>&lt;xsl:template match='*:div[@n]' mode='tan:resolve-numerals' /&gt;</code></para><para><code>&lt;xsl:template match='tan:ref | tan:n' mode='tan:resolve-numerals' priority='1' /&gt;</code></para><para>Used by template <code><link linkend="template-dependency-adjustments-pass-1">ŧ tan:dependency-adjustments-pass-1</link></code>.</para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>, <code>tan:resolve-doc-loop()</code>.</para><para>Relies upon <code><link linkend="function-string-to-numerals">tan:string-to-numerals</link></code>.</para></section><section xml:id="template-resolve-reference-tree-numerals"><title><code>ŧ tan:resolve-reference-tree-numerals</code></title><bridgehead><code>TAN-fn-expand-terse-class-1.xsl </code></bridgehead><para><code>&lt;xsl:template match='comment()' mode='tan:resolve-reference-tree-numerals' /&gt;</code></para><para><code>&lt;xsl:template match='tan:n | tan:ref' mode='tan:resolve-reference-tree-numerals' /&gt;</code></para><para>Used by template <code><link linkend="template-dependency-adjustments-pass-2">ŧ tan:dependency-adjustments-pass-2</link></code>, <code><link linkend="template-core-expansion-terse">ŧ tan:core-expansion-terse</link></code> tan:dependency-adjustments-pass-1, <code><link linkend="template-mark-dependencies-pass-1">ŧ tan:mark-dependencies-pass-1</link></code>.</para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>.</para><para>Relies upon <code><link linkend="variable-separator-hierarchy">$tan:separator-hierarchy</link></code>.</para></section><section xml:id="template-revise-hrefs"><title><code>ŧ tan:revise-hrefs</code></title><bridgehead><code>TAN-fn-uris-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='processing-instruction()' priority='1' mode='tan:revise-hrefs' /&gt;</code></para><para><code>&lt;xsl:template match='@href' mode='tan:revise-hrefs' /&gt;</code></para><para><code>&lt;xsl:template match='html:script/@src' mode='tan:revise-hrefs' /&gt;</code></para><para>Used by function <code><link linkend="function-revise-hrefs">tan:revise-hrefs()</link></code>, <code><link linkend="function-absolutize-hrefs">tan:absolutize-hrefs()</link></code>.</para><para>Relies upon <code><link linkend="function-uri-relative-to">tan:uri-relative-to</link></code>.</para></section><section xml:id="template-save-file"><title><code>ŧ tan:save-file</code></title><bridgehead><code>TAN-fn-file-output.xsl </code></bridgehead><para><code>&lt;xsl:template match='/' mode='tan:save-file' /&gt;</code></para><para><code>&lt;xsl:template match='/node()' priority='1' mode='tan:save-file' /&gt;</code></para><para><code>&lt;xsl:template match='/*[@save-as | @_target-uri | @_target-format]' priority='2' mode='tan:save-file' /&gt;</code></para><para>Used by template <code><link linkend="template-save-as">Ŧ tan:save-as</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-score-diff-output"><title><code>ŧ tan:score-diff-output</code></title><bridgehead><code>TAN-fn-strings-diff-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:common' mode='tan:score-diff-output' /&gt;</code></para><para><code>&lt;xsl:template match='tan:a | tan:b' mode='tan:score-diff-output' /&gt;</code></para><para>Used by function <code>tan:get-diff-output-slices()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-selectively-adjust-tei-space"><title><code>ŧ tan:selectively-adjust-tei-space</code></title><bridgehead><code>TAN-fn-nodes-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='*[@xml:space eq 'preserve']' priority='1' mode='tan:normalize-tree-space tan:selectively-adjust-tei-space' /&gt;</code></para><para><code>&lt;xsl:template match='text()[matches(., '\S')]' mode='tan:selectively-adjust-tei-space' /&gt;</code></para><para><code>&lt;xsl:template match='tei:div[not(tei:div)]/node()[last()]/node()[last()]/self::tei:*' mode='tan:selectively-adjust-tei-space' priority='1' /&gt;</code></para><para><code>&lt;xsl:template match='*[tei:app/tei:lem[matches(., '^\s|\s$')]]/node()' mode='tan:selectively-adjust-tei-space' /&gt;</code></para><para><code>&lt;xsl:template match='tei:app/tei:lem | tei:app/tei:rdg' mode='tan:selectively-adjust-tei-space' /&gt;</code></para><para>Used by function <code><link linkend="function-normalize-tree-space">tan:normalize-tree-space()</link></code>.</para><para>Relies upon <code><link linkend="template-trim-initial-and-terminal-space">ŧ tan:trim-initial-and-terminal-space</link></code>.</para></section><section xml:id="template-sequence-to-tree"><title><code>ŧ tan:sequence-to-tree</code></title><bridgehead><code>TAN-fn-nodes-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='*[*[@_level]]' mode='tan:sequence-to-tree' /&gt;</code></para><para>Used by function <code><link linkend="function-sequence-to-tree">tan:sequence-to-tree()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-shallow-copy"><title><code>ŧ tan:shallow-copy</code></title><bridgehead><code>TAN-fn-arrays-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='.[. instance of array(*)]' priority='-1' mode='tan:shallow-copy tan:map-put tan:map-remove' /&gt;</code></para><bridgehead><code>TAN-fn-maps-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='.[. instance of map(*)]' priority='-1' mode='tan:shallow-copy tan:map-put tan:array-to-map' /&gt;</code></para><para>Used by function <code><link linkend="function-map-remove">tan:map-remove()</link></code>, <code><link linkend="function-map-put">tan:map-put()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-shallow-skip"><title><code>ŧ tan:shallow-skip</code></title><bridgehead><code>TAN-fn-arrays-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='.[. instance of array(*)]' priority='-1' mode='tan:shallow-skip tan:text-only-copy' /&gt;</code></para><bridgehead><code>TAN-fn-maps-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='.[. instance of map(*)]' priority='-1' mode='tan:shallow-skip tan:text-only-copy' /&gt;</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:template.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-shallow-skip-diff-add"><title><code>ŧ tan:shallow-skip-diff-add</code></title><bridgehead><code>TAN-fn-strings-diff-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:add' mode='tan:shallow-skip-diff-add' /&gt;</code></para><para>Used by function <code><link linkend="function-replace-diff">tan:replace-diff()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-snap-to-word-pass-1"><title><code>ŧ tan:snap-to-word-pass-1</code></title><bridgehead><code>TAN-fn-strings-diff-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:common' mode='tan:snap-to-word-pass-1' /&gt;</code></para><para>Used by function <code>tan:snap-diff-to-word()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-sort-change-log"><title><code>ŧ tan:sort-change-log</code></title><bridgehead><code>TAN-fn-nodes-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:head[tan:change]' mode='tan:sort-change-log' /&gt;</code></para><para>Used by function <code><link linkend="function-sort-change-log">tan:sort-change-log()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-split-diff-components-1"><title><code>ŧ tan:split-diff-components-1</code></title><bridgehead><code>TAN-fn-strings-diff-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:common | tan:a | tan:b' mode='tan:split-diff-components-1' /&gt;</code></para><para>Used by function <code><link linkend="function-chop-diff-output">tan:chop-diff-output()</link></code>.</para><para>Relies upon <code><link linkend="function-chop-string">tan:chop-string</link></code>.</para></section><section xml:id="template-split-diff-components-2"><title><code>ŧ tan:split-diff-components-2</code></title><bridgehead><code>TAN-fn-strings-diff-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:first | tan:last' mode='tan:split-diff-components-2' /&gt;</code></para><para><code>&lt;xsl:template match='tan:a | tan:b' mode='tan:split-diff-components-2' /&gt;</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:template.</para><para>Relies upon <code><link linkend="function-chop-string">tan:chop-string</link></code>, <code><link linkend="function-string-length">tan:string-length</link></code>.</para></section><section xml:id="template-stamp-diff-with-text-data"><title><code>ŧ tan:stamp-diff-with-text-data</code></title><bridgehead><code>TAN-fn-strings-diff-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:diff' mode='tan:stamp-diff-with-text-data' /&gt;</code></para><para>Used by function <code><link linkend="function-stamp-diff-with-text-data">tan:stamp-diff-with-text-data()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-stamp-q-id"><title><code>ŧ tan:stamp-q-id</code></title><bridgehead><code>TAN-fn-nodes-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='*' mode='tan:stamp-q-id' /&gt;</code></para><para>Used by function <code><link linkend="function-stamp-q-id">tan:stamp-q-id()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-string-to-numerals"><title><code>ŧ tan:string-to-numerals</code></title><bridgehead><code>TAN-fn-numerals-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:tok' mode='tan:string-to-numerals' /&gt;</code></para><para>Used by function <code>tan:analyze-numbers-in-string()</code>.</para><para>Relies upon <code><link linkend="variable-n-type">$tan:n-type</link></code>, <code><link linkend="variable-n-type-regex">$tan:n-type-regex</link></code>, <code><link linkend="variable-separator-hierarchy-minor">$tan:separator-hierarchy-minor</link></code>, <code><link linkend="function-aaa-to-int">tan:aaa-to-int</link></code>, <code><link linkend="function-letter-to-number">tan:letter-to-number</link></code>, <code><link linkend="function-rom-to-int">tan:rom-to-int</link></code>.</para></section><section xml:id="template-strip-attributes"><title><code>ŧ tan:strip-attributes</code></title><bridgehead><code>TAN-fn-nodes-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='@*' mode='tan:strip-attributes' /&gt;</code></para><para>Used by template <code><link linkend="template-class-1-expansion-verbose-pass-3">ŧ tan:class-1-expansion-verbose-pass-3</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-strip-dependencies-to-markers"><title><code>ŧ tan:strip-dependencies-to-markers</code></title><bridgehead><code>TAN-fn-expand-terse-class-1.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:head | text()' mode='tan:strip-dependencies-to-markers' /&gt;</code></para><para><code>&lt;xsl:template match='/*' mode='tan:strip-dependencies-to-markers' /&gt;</code></para><para><code>&lt;xsl:template match='*' mode='tan:strip-dependencies-to-markers' /&gt;</code></para><para><code>&lt;xsl:template match='tan:skip | tan:rename | tan:equate | tan:reassign | tan:passage | tan:ref | tan:pos | tan:chars | tan:tok[@val]' mode='tan:strip-dependencies-to-markers' /&gt;</code></para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-strip-distributed-vocabulary-from-idrefs"><title><code>ŧ tan:strip-distributed-vocabulary-from-idrefs</code></title><bridgehead><code>TAN-fn-expand-files.xsl </code></bridgehead><para><code>&lt;xsl:template match='*[@attr]/tan:item' mode='tan:strip-distributed-vocabulary-from-idrefs' /&gt;</code></para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-strip-divs-to-reset"><title><code>ŧ tan:strip-divs-to-reset</code></title><bridgehead><code>TAN-fn-expand-terse-class-1.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:rename | tan:reassign | tan:passage' mode='tan:strip-divs-to-reset' /&gt;</code></para><para><code>&lt;xsl:template match='tan:ref[@reset]' mode='tan:strip-divs-to-reset' /&gt;</code></para><para><code>&lt;xsl:template match='tan:div[tan:ref[@reset]]' mode='tan:strip-divs-to-reset' /&gt;</code></para><para>Used by template <code><link linkend="template-process-merged-div">ŧ tan:process-merged-div</link></code>, <code><link linkend="template-process-appended-div">ŧ tan:process-appended-div</link></code>.</para><para>Used by function <code>tan:reset-hierarchy-loop()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-strip-duplicate-children-by-attribute-value"><title><code>ŧ tan:strip-duplicate-children-by-attribute-value</code></title><bridgehead><code>TAN-fn-nodes-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='*' mode='tan:strip-duplicate-children-by-attribute-value' /&gt;</code></para><para>Used by template <code><link linkend="template-merge-divs">ŧ tan:merge-divs</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-strip-for-validation"><title><code>ŧ tan:strip-for-validation</code></title><bridgehead><code>TAN-fn-expand-files.xsl </code></bridgehead><para><code>&lt;xsl:template match='/' mode='tan:strip-for-validation' /&gt;</code></para><para><code>&lt;xsl:template match='*[tan:error | tan:help | tan:warning | tan:fix | tan:fatal | tan:info]' priority='-2' mode='tan:strip-for-validation' /&gt;</code></para><para><code>&lt;xsl:template match='tan:error | tan:help | tan:warning | tan:fix | tan:fatal | tan:info' priority='-1' mode='tan:strip-for-validation' /&gt;</code></para><para><code>&lt;xsl:template match='/*' priority='-1' mode='tan:strip-for-validation' /&gt;</code></para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-strip-outer-indentation"><title><code>ŧ tan:strip-outer-indentation</code></title><bridgehead><code>TAN-fn-nodes-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='text()[not(matches(., '\S'))]' mode='tan:strip-outer-indentation' /&gt;</code></para><para><code>&lt;xsl:template match='*[text()]' mode='tan:strip-outer-indentation' /&gt;</code></para><para>Used by function <code><link linkend="function-strip-outer-indentation">tan:strip-outer-indentation()</link></code>, <code><link linkend="function-normalize-tree-space">tan:normalize-tree-space()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-strip-text"><title><code>ŧ tan:strip-text</code></title><bridgehead><code>TAN-fn-nodes-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='text()' mode='tan:strip-text' /&gt;</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:template.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-strip-text-data-stamps"><title><code>ŧ tan:strip-text-data-stamps</code></title><bridgehead><code>TAN-fn-strings-diff-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='@_pos-a | @_pos-b | @_len | @_pos' mode='tan:strip-text-data-stamps' /&gt;</code></para><para>Used by function <code><link linkend="function-get-diff-output-transpositions">tan:get-diff-output-transpositions()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-tan-a-lm-expansion-terse"><title><code>ŧ tan:tan-a-lm-expansion-terse</code></title><bridgehead><code>TAN-fn-expand-terse-class-2.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:TAN-A-lm/tan:body' mode='tan:tan-a-lm-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:m' mode='tan:tan-a-lm-expansion-terse' /&gt;</code></para><para><code>&lt;xsl:template match='tan:f[text()]' mode='tan:tan-a-lm-expansion-terse' /&gt;</code></para><para>Used by function <code><link linkend="function-expand-doc">tan:expand-doc()</link></code>.</para><para>Relies upon <code><link linkend="function-vocabulary">tan:vocabulary</link></code>, <code><link linkend="template-element-to-error">ŧ tan:element-to-error</link></code>.</para></section><section xml:id="template-temp-mark-and-remove-outer-indentations"><title><code>ŧ tan:temp-mark-and-remove-outer-indentations</code></title><bridgehead><code>TAN-fn-nodes-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='*[text()]' mode='tan:temp-mark-and-remove-outer-indentations' /&gt;</code></para><para><code>&lt;xsl:template match='text()[not(matches(., '\S'))]' mode='tan:temp-mark-and-remove-outer-indentations' /&gt;</code></para><para>Used by function <code>tan:stamp-tree-with-text-data()</code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-text-join"><title><code>ŧ tan:text-join</code></title><bridgehead><code>TAN-fn-strings-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='/tan:*/tan:expanded[1]' mode='tan:text-join' /&gt;</code></para><para><code>&lt;xsl:template match='*:div[*:div]' mode='tan:text-join' /&gt;</code></para><para><code>&lt;xsl:template match='*:div[not(*:div)]' mode='tan:text-join' /&gt;</code></para><para>Used by function <code><link linkend="function-text-join">tan:text-join()</link></code>.</para><para>Relies upon <code><link linkend="function-normalize-div-text">tan:normalize-div-text</link></code>, <code><link linkend="function-text-join">tan:text-join()</link></code>.</para></section><section xml:id="template-text-only-copy"><title><code>ŧ tan:text-only-copy</code></title><bridgehead><code>TAN-fn-arrays-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='.[. instance of array(*)]' priority='-1' mode='tan:shallow-skip tan:text-only-copy' /&gt;</code></para><bridgehead><code>TAN-fn-maps-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='.[. instance of map(*)]' priority='-1' mode='tan:shallow-skip tan:text-only-copy' /&gt;</code></para><para>No variables, keys, functions, or named templates depend upon this xsl:template.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-title-case"><title><code>ŧ tan:title-case</code></title><bridgehead><code>TAN-fn-strings-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:word[1] | tan:word[last()]' mode='tan:title-case' /&gt;</code></para><para>Used by function <code><link linkend="function-title-case">tan:title-case()</link></code>.</para><para>Relies upon <code><link linkend="function-initial-upper-case">tan:initial-upper-case</link></code>.</para></section><section xml:id="template-tokenize-div"><title><code>ŧ tan:tokenize-div</code></title><bridgehead><code>TAN-fn-strings-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:div[not((tan:div, tan:tok))]/text()' mode='tan:tokenize-div' /&gt;</code></para><para>Used by function <code><link linkend="function-tokenize-div">tan:tokenize-div()</link></code>.</para><para>Relies upon <code><link linkend="variable-special-end-div-chars-regex">$tan:special-end-div-chars-regex</link></code>, <code><link linkend="function-normalize-div-text">tan:normalize-div-text</link></code>, <code><link linkend="function-tokenize-text">tan:tokenize-text</link></code>.</para></section><section xml:id="template-tree-to-html"><title><code>ŧ tan:tree-to-html</code></title><bridgehead><code>TAN-fn-html-core.xsl </code></bridgehead><para><code>&lt;xsl:template match='html:*' priority='1' mode='tan:tree-to-html' /&gt;</code></para><para><code>&lt;xsl:template match='html:*/@*' priority='1' mode='tan:tree-to-html' /&gt;</code></para><para><code>&lt;xsl:template match='*' mode='tan:tree-to-html' /&gt;</code></para><para><code>&lt;xsl:template match='@*' mode='tan:tree-to-html' /&gt;</code></para><para>Used by function <code><link linkend="function-convert-to-html">tan:convert-to-html()</link></code>.</para><para>Relies upon <code><link linkend="variable-attributes-to-preserve">$attributes-to-preserve</link></code>, <code><link linkend="variable-global-html-attributes">$tan:global-html-attributes</link></code>, <code><link linkend="variable-namespaces-and-prefixes">$tan:namespaces-and-prefixes</link></code>, <code><link linkend="template-tree-to-html-for-attr">ŧ tan:tree-to-html-for-attr</link></code>.</para></section><section xml:id="template-tree-to-html-for-attr"><title><code>ŧ tan:tree-to-html-for-attr</code></title><bridgehead><code>TAN-fn-html-core.xsl </code></bridgehead><para><code>&lt;xsl:template match='@xml:*' mode='tan:tree-to-html-for-attr' /&gt;</code></para><para>Used by template <code><link linkend="template-tree-to-html">ŧ tan:tree-to-html</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-tree-to-sequence"><title><code>ŧ tan:tree-to-sequence</code></title><bridgehead><code>TAN-fn-nodes-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='*[node()]' mode='tan:tree-to-sequence' /&gt;</code></para><para>Used by function <code><link linkend="function-tree-to-sequence">tan:tree-to-sequence()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-trim-initial-and-terminal-space"><title><code>ŧ tan:trim-initial-and-terminal-space</code></title><bridgehead><code>TAN-fn-nodes-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='text()' mode='tan:trim-initial-and-terminal-space' /&gt;</code></para><para>Used by template <code><link linkend="template-selectively-adjust-tei-space">ŧ tan:selectively-adjust-tei-space</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-trim-long-text"><title><code>ŧ tan:trim-long-text</code></title><bridgehead><code>TAN-fn-nodes-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='text()' mode='tan:trim-long-text' /&gt;</code></para><para>Used by function <code><link linkend="function-trim-long-text">tan:trim-long-text()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-trim-long-tree"><title><code>ŧ tan:trim-long-tree</code></title><bridgehead><code>TAN-fn-nodes-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='*' mode='tan:trim-long-tree' /&gt;</code></para><para>Used by function <code><link linkend="function-trim-long-tree">tan:trim-long-tree()</link></code>.</para><para>Relies upon <code><link linkend="function-shallow-copy">tan:shallow-copy</link></code>.</para></section><section xml:id="template-trim-or-add-text"><title><code>ŧ tan:trim-or-add-text</code></title><bridgehead><code>TAN-fn-strings-diff-standard.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:a | tan:b | tan:common' mode='tan:trim-or-add-text' /&gt;</code></para><para>Used by function <code><link linkend="function-adjust-diff">tan:adjust-diff()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-unmark-tokens"><title><code>ŧ tan:unmark-tokens</code></title><bridgehead><code>TAN-fn-expand-terse-class-1.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:tok/* | tan:non-tok/*' mode='tan:unmark-tokens' /&gt;</code></para><para>Used by template <code><link linkend="template-dependency-adjustments-pass-2">ŧ tan:dependency-adjustments-pass-2</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-update-TAN-change-log"><title><code>ŧ tan:update-TAN-change-log</code></title><bridgehead><code>TAN-fn-nodes-TAN-output.xsl </code></bridgehead><para><code>&lt;xsl:template match='tan:person | tan:organization | tan:algorithm' mode='tan:update-TAN-change-log' /&gt;</code></para><para><code>&lt;xsl:template match='tan:person/tan:name[last()] | tan:organization/tan:name[last()] | tan:algorithm/tan:name[last()]' mode='tan:update-TAN-change-log' /&gt;</code></para><para><code>&lt;xsl:template match='tan:person/tan:IRI[last()] | tan:organization/tan:IRI[last()] | tan:algorithm/tan:IRI[last()]' mode='tan:update-TAN-change-log' /&gt;</code></para><para><code>&lt;xsl:template match='tan:vocabulary-key/*[last()]' mode='tan:update-TAN-change-log' /&gt;</code></para><para><code>&lt;xsl:template match='tan:vocabulary-key[not(*)]' mode='tan:update-TAN-change-log' /&gt;</code></para><para><code>&lt;xsl:template match='tan:resp' mode='tan:update-TAN-change-log' /&gt;</code></para><para><code>&lt;xsl:template match='tan:resp/@who' mode='tan:update-TAN-change-log' /&gt;</code></para><para><code>&lt;xsl:template match='tan:head/tan:change[1] | tan:head[not(tan:change)]/tan:to-do' mode='tan:update-TAN-change-log' /&gt;</code></para><para><code>&lt;xsl:template match='tan:head/tan:resp[last()] | tan:head[not(tan:resp)]/tan:file-resp' priority='1' mode='tan:update-TAN-change-log' /&gt;</code></para><para>Used by function <code><link linkend="function-update-TAN-change-log">tan:update-TAN-change-log()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-vocabulary-all-vals"><title><code>ŧ tan:vocabulary-all-vals</code></title><bridgehead><code>TAN-fn-vocabulary.xsl </code></bridgehead><para><code>&lt;xsl:template match='text() | comment() | processing-instruction()' mode='tan:vocabulary-all-vals tan:vocabulary-by-id tan:vocabulary-by-name' /&gt;</code></para><para><code>&lt;xsl:template priority='1' match='tan:vocabulary | tan:tan-vocabulary' mode='tan:vocabulary-all-vals tan:vocabulary-by-id tan:vocabulary-by-name' /&gt;</code></para><para><code>&lt;xsl:template priority='1' match='tan:vocabulary/tan:IRI | tan:vocabulary/tan:name | tan:vocabulary/tan:location |                      tan:tan-vocabulary/tan:IRI | tan:tan-vocabulary/tan:name | tan:tan-vocabulary/tan:location' mode='tan:vocabulary-all-vals tan:vocabulary-by-id tan:vocabulary-by-name' /&gt;</code></para><para><code>&lt;xsl:template match='*[tan:IRI] | tan:token-definition | tan:item[tan:token-definition] | tan:claim' mode='tan:vocabulary-all-vals' /&gt;</code></para><para>Used by function <code><link linkend="function-vocabulary">tan:vocabulary()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-vocabulary-by-id"><title><code>ŧ tan:vocabulary-by-id</code></title><bridgehead><code>TAN-fn-vocabulary.xsl </code></bridgehead><para><code>&lt;xsl:template match='text() | comment() | processing-instruction()' mode='tan:vocabulary-all-vals tan:vocabulary-by-id tan:vocabulary-by-name' /&gt;</code></para><para><code>&lt;xsl:template priority='1' match='tan:vocabulary | tan:tan-vocabulary' mode='tan:vocabulary-all-vals tan:vocabulary-by-id tan:vocabulary-by-name' /&gt;</code></para><para><code>&lt;xsl:template priority='1' match='tan:vocabulary/tan:IRI | tan:vocabulary/tan:name | tan:vocabulary/tan:location |                      tan:tan-vocabulary/tan:IRI | tan:tan-vocabulary/tan:name | tan:tan-vocabulary/tan:location' mode='tan:vocabulary-all-vals tan:vocabulary-by-id tan:vocabulary-by-name' /&gt;</code></para><para><code>&lt;xsl:template match='*[tan:id][tan:IRI] | tan:claim[tan:id]' mode='tan:vocabulary-by-id' /&gt;</code></para><para>Used by function <code><link linkend="function-vocabulary">tan:vocabulary()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-vocabulary-by-name"><title><code>ŧ tan:vocabulary-by-name</code></title><bridgehead><code>TAN-fn-vocabulary.xsl </code></bridgehead><para><code>&lt;xsl:template match='text() | comment() | processing-instruction()' mode='tan:vocabulary-all-vals tan:vocabulary-by-id tan:vocabulary-by-name' /&gt;</code></para><para><code>&lt;xsl:template priority='1' match='tan:vocabulary | tan:tan-vocabulary' mode='tan:vocabulary-all-vals tan:vocabulary-by-id tan:vocabulary-by-name' /&gt;</code></para><para><code>&lt;xsl:template priority='1' match='tan:vocabulary/tan:IRI | tan:vocabulary/tan:name | tan:vocabulary/tan:location |                      tan:tan-vocabulary/tan:IRI | tan:tan-vocabulary/tan:name | tan:tan-vocabulary/tan:location' mode='tan:vocabulary-all-vals tan:vocabulary-by-id tan:vocabulary-by-name' /&gt;</code></para><para><code>&lt;xsl:template match='*[tan:IRI][tan:name] | tan:token-definition | tan:item[tan:token-definition]' mode='tan:vocabulary-by-name' /&gt;</code></para><para>Used by function <code><link linkend="function-vocabulary">tan:vocabulary()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-wrap-text-nodes"><title><code>ŧ tan:wrap-text-nodes</code></title><bridgehead><code>TAN-fn-nodes-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='text()' mode='tan:wrap-text-nodes' /&gt;</code></para><para>Used by function <code><link linkend="function-wrap-text-nodes">tan:wrap-text-nodes()</link></code>.</para><para>Does not rely upon global variables, keys, functions, or templates.</para></section><section xml:id="template-xml-to-map-and-array"><title><code>ŧ tan:xml-to-map-and-array</code></title><bridgehead><code>TAN-fn-maps-extended.xsl </code></bridgehead><para><code>&lt;xsl:template match='map:map' mode='tan:xml-to-map-and-array' /&gt;</code></para><para><code>&lt;xsl:template match='map:entry' mode='tan:xml-to-map-and-array' /&gt;</code></para><para><code>&lt;xsl:template match='array:array' mode='tan:xml-to-map-and-array' /&gt;</code></para><para>Used by template <code><link linkend="template-build-maps-and-arrays">ŧ tan:build-maps-and-arrays</link></code>.</para><para>Used by function <code><link linkend="function-xml-to-array">tan:xml-to-array()</link></code>, <code><link linkend="function-xml-to-map">tan:xml-to-map()</link></code>.</para><para>Relies upon <code><link linkend="template-build-maps-and-arrays">ŧ tan:build-maps-and-arrays</link></code>.</para></section></section></chapter>